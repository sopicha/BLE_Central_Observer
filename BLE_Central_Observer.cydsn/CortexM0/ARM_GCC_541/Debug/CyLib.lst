ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 006CDC02 		.word	48000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 80BB0000 		.word	48000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 30       		.byte	48
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000C05D 		.word	1572864000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	CySysClkPumpConfig
 106              		.data
 107              		.align	2
 108              		.type	CySysClkPumpConfig, %object
 109              		.size	CySysClkPumpConfig, 4
 110              	CySysClkPumpConfig:
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 3


 111 0010 01000000 		.word	1
 112              		.section	.text.CySysClkImoStart,"ax",%progbits
 113              		.align	2
 114              		.global	CySysClkImoStart
 115              		.code	16
 116              		.thumb_func
 117              		.type	CySysClkImoStart, %function
 118              	CySysClkImoStart:
 119              	.LFB2:
 120              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 4


  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 5


 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 121              		.loc 1 108 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 131              		.loc 1 109 0
 132 0004 044B     		ldr	r3, .L2
 133 0006 044A     		ldr	r2, .L2
 134 0008 1268     		ldr	r2, [r2]
 135 000a 8021     		movs	r1, #128
 136 000c 0906     		lsls	r1, r1, #24
 137 000e 0A43     		orrs	r2, r1
 138 0010 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 139              		.loc 1 124 0
 140 0012 C046     		nop
 141 0014 BD46     		mov	sp, r7
 142              		@ sp needed
 143 0016 80BD     		pop	{r7, pc}
 144              	.L3:
 145              		.align	2
 146              	.L2:
 147 0018 08010B40 		.word	1074462984
 148              		.cfi_endproc
 149              	.LFE2:
 150              		.size	CySysClkImoStart, .-CySysClkImoStart
 151              		.section	.text.CySysClkImoStop,"ax",%progbits
 152              		.align	2
 153              		.global	CySysClkImoStop
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkImoStop, %function
 157              	CySysClkImoStop:
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 6


 158              	.LFB3:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 159              		.loc 1 140 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 169              		.loc 1 149 0
 170 0004 044B     		ldr	r3, .L5
 171 0006 044A     		ldr	r2, .L5
 172 0008 1268     		ldr	r2, [r2]
 173 000a 5200     		lsls	r2, r2, #1
 174 000c 5208     		lsrs	r2, r2, #1
 175 000e 1A60     		str	r2, [r3]
 150:Generated_Source\PSoC4/CyLib.c **** }
 176              		.loc 1 150 0
 177 0010 C046     		nop
 178 0012 BD46     		mov	sp, r7
 179              		@ sp needed
 180 0014 80BD     		pop	{r7, pc}
 181              	.L6:
 182 0016 C046     		.align	2
 183              	.L5:
 184 0018 08010B40 		.word	1074462984
 185              		.cfi_endproc
 186              	.LFE3:
 187              		.size	CySysClkImoStop, .-CySysClkImoStop
 188              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 7


 189              		.align	2
 190              		.global	CySysClkWriteHfclkDirect
 191              		.code	16
 192              		.thumb_func
 193              		.type	CySysClkWriteHfclkDirect, %function
 194              	CySysClkWriteHfclkDirect:
 195              	.LFB4:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 8


 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 9


 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 10


 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 11


 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 12


 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 196              		.loc 1 430 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 16
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200 0000 90B5     		push	{r4, r7, lr}
 201              		.cfi_def_cfa_offset 12
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 85B0     		sub	sp, sp, #20
 206              		.cfi_def_cfa_offset 32
 207 0004 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 209 0006 7860     		str	r0, [r7, #4]
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 210              		.loc 1 434 0
 211 0008 0F23     		movs	r3, #15
 212 000a FC18     		adds	r4, r7, r3
 213 000c FFF7FEFF 		bl	CyEnterCriticalSection
 214 0010 0300     		movs	r3, r0
 215 0012 2370     		strb	r3, [r4]
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 216              		.loc 1 437 0
 217 0014 0B4B     		ldr	r3, .L8
 218 0016 1B68     		ldr	r3, [r3]
 219 0018 0722     		movs	r2, #7
 220 001a 9343     		bics	r3, r2
 221 001c BB60     		str	r3, [r7, #8]
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 222              		.loc 1 448 0
 223 001e 7B68     		ldr	r3, [r7, #4]
 224 0020 0722     		movs	r2, #7
 225 0022 1340     		ands	r3, r2
 226 0024 BA68     		ldr	r2, [r7, #8]
 227 0026 1343     		orrs	r3, r2
 228 0028 BB60     		str	r3, [r7, #8]
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 229              		.loc 1 451 0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 13


 230 002a 064B     		ldr	r3, .L8
 231 002c BA68     		ldr	r2, [r7, #8]
 232 002e 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 233              		.loc 1 453 0
 234 0030 0F23     		movs	r3, #15
 235 0032 FB18     		adds	r3, r7, r3
 236 0034 1B78     		ldrb	r3, [r3]
 237 0036 1800     		movs	r0, r3
 238 0038 FFF7FEFF 		bl	CyExitCriticalSection
 454:Generated_Source\PSoC4/CyLib.c **** }
 239              		.loc 1 454 0
 240 003c C046     		nop
 241 003e BD46     		mov	sp, r7
 242 0040 05B0     		add	sp, sp, #20
 243              		@ sp needed
 244 0042 90BD     		pop	{r4, r7, pc}
 245              	.L9:
 246              		.align	2
 247              	.L8:
 248 0044 00010B40 		.word	1074462976
 249              		.cfi_endproc
 250              	.LFE4:
 251              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 252              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 253              		.align	2
 254              		.global	CySysEnablePumpClock
 255              		.code	16
 256              		.thumb_func
 257              		.type	CySysEnablePumpClock, %function
 258              	CySysEnablePumpClock:
 259              	.LFB5:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 260              		.loc 1 474 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 14


 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 273              		.loc 1 476 0
 274 0008 7B68     		ldr	r3, [r7, #4]
 275 000a 0122     		movs	r2, #1
 276 000c 1340     		ands	r3, r2
 277 000e 08D0     		beq	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 278              		.loc 1 478 0
 279 0010 0C4A     		ldr	r2, .L14
 280 0012 0C4B     		ldr	r3, .L14
 281 0014 1968     		ldr	r1, [r3]
 282 0016 0C4B     		ldr	r3, .L14+4
 283 0018 1B68     		ldr	r3, [r3]
 284 001a 5B06     		lsls	r3, r3, #25
 285 001c 0B43     		orrs	r3, r1
 286 001e 1360     		str	r3, [r2]
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 287              		.loc 1 498 0
 288 0020 0CE0     		b	.L13
 289              	.L11:
 482:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 290              		.loc 1 482 0
 291 0022 084B     		ldr	r3, .L14
 292 0024 1B68     		ldr	r3, [r3]
 293 0026 5B0E     		lsrs	r3, r3, #25
 294 0028 0722     		movs	r2, #7
 295 002a 1A40     		ands	r2, r3
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 15


 296 002c 064B     		ldr	r3, .L14+4
 297 002e 1A60     		str	r2, [r3]
 484:Generated_Source\PSoC4/CyLib.c ****         }
 298              		.loc 1 484 0
 299 0030 044B     		ldr	r3, .L14
 300 0032 044A     		ldr	r2, .L14
 301 0034 1268     		ldr	r2, [r2]
 302 0036 0549     		ldr	r1, .L14+8
 303 0038 0A40     		ands	r2, r1
 304 003a 1A60     		str	r2, [r3]
 305              	.L13:
 306              		.loc 1 498 0
 307 003c C046     		nop
 308 003e BD46     		mov	sp, r7
 309 0040 02B0     		add	sp, sp, #8
 310              		@ sp needed
 311 0042 80BD     		pop	{r7, pc}
 312              	.L15:
 313              		.align	2
 314              	.L14:
 315 0044 08010B40 		.word	1074462984
 316 0048 00000000 		.word	CySysClkPumpConfig
 317 004c FFFFFFF1 		.word	-234881025
 318              		.cfi_endproc
 319              	.LFE5:
 320              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 321              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 322              		.align	2
 323              		.global	CySysClkGetSysclkSource
 324              		.code	16
 325              		.thumb_func
 326              		.type	CySysClkGetSysclkSource, %function
 327              	CySysClkGetSysclkSource:
 328              	.LFB6:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 329              		.loc 1 511 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 90B5     		push	{r4, r7, lr}
 334              		.cfi_def_cfa_offset 12
 335              		.cfi_offset 4, -12
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 16


 339              		.cfi_def_cfa_offset 24
 340 0004 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 342              		.loc 1 515 0
 343 0006 FC1D     		adds	r4, r7, #7
 344 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 345 000c 0300     		movs	r3, r0
 346 000e 2370     		strb	r3, [r4]
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 347              		.loc 1 525 0
 348 0010 074B     		ldr	r3, .L18
 349 0012 1B68     		ldr	r3, [r3]
 350 0014 0722     		movs	r2, #7
 351 0016 1340     		ands	r3, r2
 352 0018 3B60     		str	r3, [r7]
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 353              		.loc 1 528 0
 354 001a FB1D     		adds	r3, r7, #7
 355 001c 1B78     		ldrb	r3, [r3]
 356 001e 1800     		movs	r0, r3
 357 0020 FFF7FEFF 		bl	CyExitCriticalSection
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 358              		.loc 1 530 0
 359 0024 3B68     		ldr	r3, [r7]
 531:Generated_Source\PSoC4/CyLib.c **** }
 360              		.loc 1 531 0
 361 0026 1800     		movs	r0, r3
 362 0028 BD46     		mov	sp, r7
 363 002a 03B0     		add	sp, sp, #12
 364              		@ sp needed
 365 002c 90BD     		pop	{r4, r7, pc}
 366              	.L19:
 367 002e C046     		.align	2
 368              	.L18:
 369 0030 00010B40 		.word	1074462976
 370              		.cfi_endproc
 371              	.LFE6:
 372              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 373              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 374              		.align	2
 375              		.global	CySysClkWriteSysclkDiv
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 17


 376              		.code	16
 377              		.thumb_func
 378              		.type	CySysClkWriteSysclkDiv, %function
 379              	CySysClkWriteSysclkDiv:
 380              	.LFB7:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 381              		.loc 1 566 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 16
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 90B5     		push	{r4, r7, lr}
 386              		.cfi_def_cfa_offset 12
 387              		.cfi_offset 4, -12
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 85B0     		sub	sp, sp, #20
 391              		.cfi_def_cfa_offset 32
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
 394 0006 7860     		str	r0, [r7, #4]
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 18


 395              		.loc 1 569 0
 396 0008 0F23     		movs	r3, #15
 397 000a FC18     		adds	r4, r7, r3
 398 000c FFF7FEFF 		bl	CyEnterCriticalSection
 399 0010 0300     		movs	r3, r0
 400 0012 2370     		strb	r3, [r4]
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 401              		.loc 1 571 0
 402 0014 0A4B     		ldr	r3, .L21
 403 0016 7A68     		ldr	r2, [r7, #4]
 404 0018 D104     		lsls	r1, r2, #19
 405 001a E022     		movs	r2, #224
 406 001c 9203     		lsls	r2, r2, #14
 407 001e 1140     		ands	r1, r2
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 408              		.loc 1 573 0
 409 0020 074A     		ldr	r2, .L21
 410 0022 1268     		ldr	r2, [r2]
 411 0024 0748     		ldr	r0, .L21+4
 412 0026 0240     		ands	r2, r0
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 413              		.loc 1 572 0
 414 0028 0A43     		orrs	r2, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 415              		.loc 1 571 0
 416 002a 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 417              		.loc 1 576 0
 418 002c 0F23     		movs	r3, #15
 419 002e FB18     		adds	r3, r7, r3
 420 0030 1B78     		ldrb	r3, [r3]
 421 0032 1800     		movs	r0, r3
 422 0034 FFF7FEFF 		bl	CyExitCriticalSection
 577:Generated_Source\PSoC4/CyLib.c **** }
 423              		.loc 1 577 0
 424 0038 C046     		nop
 425 003a BD46     		mov	sp, r7
 426 003c 05B0     		add	sp, sp, #20
 427              		@ sp needed
 428 003e 90BD     		pop	{r4, r7, pc}
 429              	.L22:
 430              		.align	2
 431              	.L21:
 432 0040 00010B40 		.word	1074462976
 433 0044 FFFFC7FF 		.word	-3670017
 434              		.cfi_endproc
 435              	.LFE7:
 436              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 437              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 438              		.align	2
 439              		.global	CySysClkWriteImoFreq
 440              		.code	16
 441              		.thumb_func
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 19


 442              		.type	CySysClkWriteImoFreq, %function
 443              	CySysClkWriteImoFreq:
 444              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 445              		.loc 1 624 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 40
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 90B5     		push	{r4, r7, lr}
 450              		.cfi_def_cfa_offset 12
 451              		.cfi_offset 4, -12
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 20


 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 8BB0     		sub	sp, sp, #44
 455              		.cfi_def_cfa_offset 56
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 459              		.loc 1 647 0
 460 0008 2723     		movs	r3, #39
 461 000a FC18     		adds	r4, r7, r3
 462 000c FFF7FEFF 		bl	CyEnterCriticalSection
 463 0010 0300     		movs	r3, r0
 464 0012 2370     		strb	r3, [r4]
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 21


 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 465              		.loc 1 681 0
 466 0014 194B     		ldr	r3, .L24
 467 0016 1A68     		ldr	r2, [r3]
 468 0018 0C23     		movs	r3, #12
 469 001a FB18     		adds	r3, r7, r3
 470 001c 1A60     		str	r2, [r3]
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 471              		.loc 1 682 0
 472 001e 184B     		ldr	r3, .L24+4
 473 0020 1A68     		ldr	r2, [r3]
 474 0022 0C23     		movs	r3, #12
 475 0024 FB18     		adds	r3, r7, r3
 476 0026 5A60     		str	r2, [r3, #4]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 477              		.loc 1 683 0
 478 0028 7B68     		ldr	r3, [r7, #4]
 479 002a 033B     		subs	r3, r3, #3
 480 002c 154A     		ldr	r2, .L24+8
 481 002e D35C     		ldrb	r3, [r2, r3]
 482 0030 1A00     		movs	r2, r3
 483 0032 0C23     		movs	r3, #12
 484 0034 FB18     		adds	r3, r7, r3
 485 0036 9A60     		str	r2, [r3, #8]
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 486              		.loc 1 684 0
 487 0038 134B     		ldr	r3, .L24+12
 488 003a 1A68     		ldr	r2, [r3]
 489 003c 0C23     		movs	r3, #12
 490 003e FB18     		adds	r3, r7, r3
 491 0040 DA60     		str	r2, [r3, #12]
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 492              		.loc 1 686 0
 493 0042 1C23     		movs	r3, #28
 494 0044 FB18     		adds	r3, r7, r3
 495 0046 114A     		ldr	r2, .L24+16
 496 0048 1A60     		str	r2, [r3]
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 497              		.loc 1 689 0
 498 004a 0C23     		movs	r3, #12
 499 004c FA18     		adds	r2, r7, r3
 500 004e 1C23     		movs	r3, #28
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 22


 501 0050 FB18     		adds	r3, r7, r3
 502 0052 5A60     		str	r2, [r3, #4]
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 503              		.loc 1 691 0
 504 0054 0E4B     		ldr	r3, .L24+20
 505 0056 1C22     		movs	r2, #28
 506 0058 BA18     		adds	r2, r7, r2
 507 005a 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 508              		.loc 1 692 0
 509 005c 0D4B     		ldr	r3, .L24+24
 510 005e 0E4A     		ldr	r2, .L24+28
 511 0060 1A60     		str	r2, [r3]
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 512              		.loc 1 693 0
 513 0062 0B4B     		ldr	r3, .L24+20
 514 0064 1B68     		ldr	r3, [r3]
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 23


 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 24


 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 515              		.loc 1 823 0
 516 0066 2723     		movs	r3, #39
 517 0068 FB18     		adds	r3, r7, r3
 518 006a 1B78     		ldrb	r3, [r3]
 519 006c 1800     		movs	r0, r3
 520 006e FFF7FEFF 		bl	CyExitCriticalSection
 824:Generated_Source\PSoC4/CyLib.c ****     }
 521              		.loc 1 824 0
 522 0072 C046     		nop
 523 0074 BD46     		mov	sp, r7
 524 0076 0BB0     		add	sp, sp, #44
 525              		@ sp needed
 526 0078 90BD     		pop	{r4, r7, pc}
 527              	.L25:
 528 007a C046     		.align	2
 529              	.L24:
 530 007c 08010B40 		.word	1074462984
 531 0080 00010B40 		.word	1074462976
 532 0084 00000000 		.word	cyImoFreqMhz2Reg
 533 0088 30001040 		.word	1074790448
 534 008c B6EA0000 		.word	60086
 535 0090 08001040 		.word	1074790408
 536 0094 04001040 		.word	1074790404
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 25


 537 0098 17000080 		.word	-2147483625
 538              		.cfi_endproc
 539              	.LFE8:
 540              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 541              		.section	.text.CySysClkEcoStart,"ax",%progbits
 542              		.align	2
 543              		.global	CySysClkEcoStart
 544              		.code	16
 545              		.thumb_func
 546              		.type	CySysClkEcoStart, %function
 547              	CySysClkEcoStart:
 548              	.LFB9:
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 26


 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 27


 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 28


 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
 549              		.loc 1 1028 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 16
 552              		@ frame_needed = 1, uses_anonymous_args = 0
 553 0000 80B5     		push	{r7, lr}
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 7, -8
 556              		.cfi_offset 14, -4
 557 0002 84B0     		sub	sp, sp, #16
 558              		.cfi_def_cfa_offset 24
 559 0004 00AF     		add	r7, sp, #0
 560              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 29


 561 0006 7860     		str	r0, [r7, #4]
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 562              		.loc 1 1029 0
 563 0008 0023     		movs	r3, #0
 564 000a FB60     		str	r3, [r7, #12]
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 565              		.loc 1 1033 0
 566 000c 154B     		ldr	r3, .L32
 567 000e 154A     		ldr	r2, .L32
 568 0010 1268     		ldr	r2, [r2]
 569 0012 0121     		movs	r1, #1
 570 0014 0A43     		orrs	r2, r1
 571 0016 1A60     		str	r2, [r3]
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 572              		.loc 1 1036 0
 573 0018 134B     		ldr	r3, .L32+4
 574 001a 144A     		ldr	r2, .L32+8
 575 001c 1A60     		str	r2, [r3]
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 576              		.loc 1 1039 0
 577 001e 144B     		ldr	r3, .L32+12
 578 0020 134A     		ldr	r2, .L32+12
 579 0022 1268     		ldr	r2, [r2]
 580 0024 8021     		movs	r1, #128
 581 0026 0902     		lsls	r1, r1, #8
 582 0028 0A43     		orrs	r2, r1
 583 002a 1A60     		str	r2, [r3]
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 30


1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 31


1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 584              		.loc 1 1137 0
 585 002c 7B68     		ldr	r3, [r7, #4]
 586 002e 002B     		cmp	r3, #0
 587 0030 12D0     		beq	.L27
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 588              		.loc 1 1139 0
 589 0032 1023     		movs	r3, #16
 590 0034 FB60     		str	r3, [r7, #12]
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 591              		.loc 1 1141 0
 592 0036 0CE0     		b	.L28
 593              	.L30:
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 594              		.loc 1 1143 0
 595 0038 0120     		movs	r0, #1
 596 003a FFF7FEFF 		bl	CyDelayUs
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 597              		.loc 1 1145 0
 598 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 599 0042 031E     		subs	r3, r0, #0
 600 0044 02D0     		beq	.L29
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 601              		.loc 1 1147 0
 602 0046 0023     		movs	r3, #0
 603 0048 FB60     		str	r3, [r7, #12]
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
 604              		.loc 1 1148 0
 605 004a 05E0     		b	.L27
 606              	.L29:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 607              		.loc 1 1141 0
 608 004c 7B68     		ldr	r3, [r7, #4]
 609 004e 013B     		subs	r3, r3, #1
 610 0050 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 32


 611              	.L28:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 612              		.loc 1 1141 0 is_stmt 0 discriminator 1
 613 0052 7B68     		ldr	r3, [r7, #4]
 614 0054 002B     		cmp	r3, #0
 615 0056 EFD1     		bne	.L30
 616              	.L27:
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 617              		.loc 1 1154 0 is_stmt 1
 618 0058 FB68     		ldr	r3, [r7, #12]
1155:Generated_Source\PSoC4/CyLib.c ****     }
 619              		.loc 1 1155 0
 620 005a 1800     		movs	r0, r3
 621 005c BD46     		mov	sp, r7
 622 005e 04B0     		add	sp, sp, #16
 623              		@ sp needed
 624 0060 80BD     		pop	{r7, pc}
 625              	.L33:
 626 0062 C046     		.align	2
 627              	.L32:
 628 0064 60F02E40 		.word	1076818016
 629 0068 78002E40 		.word	1076756600
 630 006c 02200000 		.word	8194
 631 0070 10002E40 		.word	1076756496
 632              		.cfi_endproc
 633              	.LFE9:
 634              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 635              		.section	.text.CySysClkEcoStop,"ax",%progbits
 636              		.align	2
 637              		.global	CySysClkEcoStop
 638              		.code	16
 639              		.thumb_func
 640              		.type	CySysClkEcoStop, %function
 641              	CySysClkEcoStop:
 642              	.LFB10:
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 643              		.loc 1 1170 0
 644              		.cfi_startproc
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 33


 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647 0000 80B5     		push	{r7, lr}
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 00AF     		add	r7, sp, #0
 652              		.cfi_def_cfa_register 7
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 653              		.loc 1 1173 0
 654 0004 074B     		ldr	r3, .L35
 655 0006 074A     		ldr	r2, .L35
 656 0008 1268     		ldr	r2, [r2]
 657 000a 0121     		movs	r1, #1
 658 000c 8A43     		bics	r2, r1
 659 000e 1A60     		str	r2, [r3]
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 660              		.loc 1 1176 0
 661 0010 054B     		ldr	r3, .L35+4
 662 0012 054A     		ldr	r2, .L35+4
 663 0014 1268     		ldr	r2, [r2]
 664 0016 0549     		ldr	r1, .L35+8
 665 0018 0A40     		ands	r2, r1
 666 001a 1A60     		str	r2, [r3]
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 667              		.loc 1 1182 0
 668 001c C046     		nop
 669 001e BD46     		mov	sp, r7
 670              		@ sp needed
 671 0020 80BD     		pop	{r7, pc}
 672              	.L36:
 673 0022 C046     		.align	2
 674              	.L35:
 675 0024 60F02E40 		.word	1076818016
 676 0028 10002E40 		.word	1076756496
 677 002c FF7FFFFF 		.word	-32769
 678              		.cfi_endproc
 679              	.LFE10:
 680              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 681              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 682              		.align	2
 683              		.global	CySysClkEcoReadStatus
 684              		.code	16
 685              		.thumb_func
 686              		.type	CySysClkEcoReadStatus, %function
 687              	CySysClkEcoReadStatus:
 688              	.LFB11:
1183:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 34


1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 689              		.loc 1 1204 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 8
 692              		@ frame_needed = 1, uses_anonymous_args = 0
 693 0000 80B5     		push	{r7, lr}
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 7, -8
 696              		.cfi_offset 14, -4
 697 0002 82B0     		sub	sp, sp, #8
 698              		.cfi_def_cfa_offset 16
 699 0004 00AF     		add	r7, sp, #0
 700              		.cfi_def_cfa_register 7
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 701              		.loc 1 1208 0
 702 0006 054B     		ldr	r3, .L39
 703 0008 1B68     		ldr	r3, [r3]
 704 000a 0122     		movs	r2, #1
 705 000c 1340     		ands	r3, r2
 706 000e 7B60     		str	r3, [r7, #4]
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 707              		.loc 1 1220 0
 708 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 35


1221:Generated_Source\PSoC4/CyLib.c ****     }
 709              		.loc 1 1221 0
 710 0012 1800     		movs	r0, r3
 711 0014 BD46     		mov	sp, r7
 712 0016 02B0     		add	sp, sp, #8
 713              		@ sp needed
 714 0018 80BD     		pop	{r7, pc}
 715              	.L40:
 716 001a C046     		.align	2
 717              	.L39:
 718 001c 0C002E40 		.word	1076756492
 719              		.cfi_endproc
 720              	.LFE11:
 721              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 722              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 723              		.align	2
 724              		.global	CySysClkWriteEcoDiv
 725              		.code	16
 726              		.thumb_func
 727              		.type	CySysClkWriteEcoDiv, %function
 728              	CySysClkWriteEcoDiv:
 729              	.LFB12:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
 730              		.loc 1 1251 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 16
 733              		@ frame_needed = 1, uses_anonymous_args = 0
 734 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 36


 735              		.cfi_def_cfa_offset 12
 736              		.cfi_offset 4, -12
 737              		.cfi_offset 7, -8
 738              		.cfi_offset 14, -4
 739 0002 85B0     		sub	sp, sp, #20
 740              		.cfi_def_cfa_offset 32
 741 0004 00AF     		add	r7, sp, #0
 742              		.cfi_def_cfa_register 7
 743 0006 7860     		str	r0, [r7, #4]
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 744              		.loc 1 1254 0
 745 0008 114B     		ldr	r3, .L45
 746 000a 1B68     		ldr	r3, [r3]
 747 000c 0722     		movs	r2, #7
 748 000e 1340     		ands	r3, r2
 749 0010 022B     		cmp	r3, #2
 750 0012 16D0     		beq	.L42
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 751              		.loc 1 1256 0
 752 0014 0F23     		movs	r3, #15
 753 0016 FC18     		adds	r4, r7, r3
 754 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 755 001c 0300     		movs	r3, r0
 756 001e 2370     		strb	r3, [r4]
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 757              		.loc 1 1258 0
 758 0020 0C4B     		ldr	r3, .L45+4
 759 0022 7A68     		ldr	r2, [r7, #4]
 760 0024 0321     		movs	r1, #3
 761 0026 1140     		ands	r1, r2
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 762              		.loc 1 1259 0
 763 0028 0A4A     		ldr	r2, .L45+4
 764 002a 1268     		ldr	r2, [r2]
 765 002c 0320     		movs	r0, #3
 766 002e 8243     		bics	r2, r0
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 767              		.loc 1 1258 0
 768 0030 0A43     		orrs	r2, r1
 769 0032 1A60     		str	r2, [r3]
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 770              		.loc 1 1261 0
 771 0034 0F23     		movs	r3, #15
 772 0036 FB18     		adds	r3, r7, r3
 773 0038 1B78     		ldrb	r3, [r3]
 774 003a 1800     		movs	r0, r3
 775 003c FFF7FEFF 		bl	CyExitCriticalSection
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 37


1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
 776              		.loc 1 1268 0
 777 0040 02E0     		b	.L44
 778              	.L42:
1266:Generated_Source\PSoC4/CyLib.c ****             }
 779              		.loc 1 1266 0 discriminator 1
 780 0042 0020     		movs	r0, #0
 781 0044 FFF7FEFF 		bl	CyHalt
 782              	.L44:
 783              		.loc 1 1268 0
 784 0048 C046     		nop
 785 004a BD46     		mov	sp, r7
 786 004c 05B0     		add	sp, sp, #20
 787              		@ sp needed
 788 004e 90BD     		pop	{r4, r7, pc}
 789              	.L46:
 790              		.align	2
 791              	.L45:
 792 0050 00010B40 		.word	1074462976
 793 0054 64F02E40 		.word	1076818020
 794              		.cfi_endproc
 795              	.LFE12:
 796              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 797              		.section	.text.CySysLvdEnable,"ax",%progbits
 798              		.align	2
 799              		.global	CySysLvdEnable
 800              		.code	16
 801              		.thumb_func
 802              		.type	CySysLvdEnable, %function
 803              	CySysLvdEnable:
 804              	.LFB13:
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 38


1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 39


1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 40


1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 41


1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 42


1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 43


1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 44


1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 45


1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 46


1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 47


1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 48


1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 49


1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 50


1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 51


2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 52


2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
 805              		.loc 1 2119 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 8
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809 0000 80B5     		push	{r7, lr}
 810              		.cfi_def_cfa_offset 8
 811              		.cfi_offset 7, -8
 812              		.cfi_offset 14, -4
 813 0002 82B0     		sub	sp, sp, #8
 814              		.cfi_def_cfa_offset 16
 815 0004 00AF     		add	r7, sp, #0
 816              		.cfi_def_cfa_register 7
 817 0006 7860     		str	r0, [r7, #4]
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 818              		.loc 1 2121 0
 819 0008 144B     		ldr	r3, .L48
 820 000a 144A     		ldr	r2, .L48
 821 000c 1268     		ldr	r2, [r2]
 822 000e 0221     		movs	r1, #2
 823 0010 8A43     		bics	r2, r1
 824 0012 1A60     		str	r2, [r3]
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 825              		.loc 1 2124 0
 826 0014 124B     		ldr	r3, .L48+4
 827 0016 124A     		ldr	r2, .L48+4
 828 0018 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 53


 829 001a 1E21     		movs	r1, #30
 830 001c 8A43     		bics	r2, r1
 831 001e 1100     		movs	r1, r2
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 832              		.loc 1 2125 0
 833 0020 7A68     		ldr	r2, [r7, #4]
 834 0022 5200     		lsls	r2, r2, #1
 835 0024 1E20     		movs	r0, #30
 836 0026 0240     		ands	r2, r0
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 837              		.loc 1 2124 0
 838 0028 0A43     		orrs	r2, r1
 839 002a 1A60     		str	r2, [r3]
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 840              		.loc 1 2128 0
 841 002c 0C4B     		ldr	r3, .L48+4
 842 002e 0C4A     		ldr	r2, .L48+4
 843 0030 1268     		ldr	r2, [r2]
 844 0032 0121     		movs	r1, #1
 845 0034 0A43     		orrs	r2, r1
 846 0036 1A60     		str	r2, [r3]
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 847              		.loc 1 2131 0
 848 0038 FA23     		movs	r3, #250
 849 003a 9B00     		lsls	r3, r3, #2
 850 003c 1800     		movs	r0, r3
 851 003e FFF7FEFF 		bl	CyDelayUs
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 852              		.loc 1 2134 0
 853 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 854              		.loc 1 2137 0
 855 0046 054B     		ldr	r3, .L48
 856 0048 044A     		ldr	r2, .L48
 857 004a 1268     		ldr	r2, [r2]
 858 004c 0221     		movs	r1, #2
 859 004e 0A43     		orrs	r2, r1
 860 0050 1A60     		str	r2, [r3]
2138:Generated_Source\PSoC4/CyLib.c ****     }
 861              		.loc 1 2138 0
 862 0052 C046     		nop
 863 0054 BD46     		mov	sp, r7
 864 0056 02B0     		add	sp, sp, #8
 865              		@ sp needed
 866 0058 80BD     		pop	{r7, pc}
 867              	.L49:
 868 005a C046     		.align	2
 869              	.L48:
 870 005c 08000B40 		.word	1074462728
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 54


 871 0060 18000B40 		.word	1074462744
 872              		.cfi_endproc
 873              	.LFE13:
 874              		.size	CySysLvdEnable, .-CySysLvdEnable
 875              		.section	.text.CySysLvdDisable,"ax",%progbits
 876              		.align	2
 877              		.global	CySysLvdDisable
 878              		.code	16
 879              		.thumb_func
 880              		.type	CySysLvdDisable, %function
 881              	CySysLvdDisable:
 882              	.LFB14:
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 883              		.loc 1 2149 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 1, uses_anonymous_args = 0
 887 0000 80B5     		push	{r7, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 00AF     		add	r7, sp, #0
 892              		.cfi_def_cfa_register 7
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 893              		.loc 1 2150 0
 894 0004 074B     		ldr	r3, .L51
 895 0006 074A     		ldr	r2, .L51
 896 0008 1268     		ldr	r2, [r2]
 897 000a 0221     		movs	r1, #2
 898 000c 8A43     		bics	r2, r1
 899 000e 1A60     		str	r2, [r3]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 900              		.loc 1 2151 0
 901 0010 054B     		ldr	r3, .L51+4
 902 0012 054A     		ldr	r2, .L51+4
 903 0014 1268     		ldr	r2, [r2]
 904 0016 0121     		movs	r1, #1
 905 0018 8A43     		bics	r2, r1
 906 001a 1A60     		str	r2, [r3]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 907              		.loc 1 2152 0
 908 001c C046     		nop
 909 001e BD46     		mov	sp, r7
 910              		@ sp needed
 911 0020 80BD     		pop	{r7, pc}
 912              	.L52:
 913 0022 C046     		.align	2
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 55


 914              	.L51:
 915 0024 08000B40 		.word	1074462728
 916 0028 18000B40 		.word	1074462744
 917              		.cfi_endproc
 918              	.LFE14:
 919              		.size	CySysLvdDisable, .-CySysLvdDisable
 920              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 921              		.align	2
 922              		.global	CySysLvdGetInterruptSource
 923              		.code	16
 924              		.thumb_func
 925              		.type	CySysLvdGetInterruptSource, %function
 926              	CySysLvdGetInterruptSource:
 927              	.LFB15:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 928              		.loc 1 2167 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 1, uses_anonymous_args = 0
 932 0000 80B5     		push	{r7, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 938              		.loc 1 2168 0
 939 0004 034B     		ldr	r3, .L55
 940 0006 1B68     		ldr	r3, [r3]
 941 0008 0222     		movs	r2, #2
 942 000a 1340     		ands	r3, r2
2169:Generated_Source\PSoC4/CyLib.c ****     }
 943              		.loc 1 2169 0
 944 000c 1800     		movs	r0, r3
 945 000e BD46     		mov	sp, r7
 946              		@ sp needed
 947 0010 80BD     		pop	{r7, pc}
 948              	.L56:
 949 0012 C046     		.align	2
 950              	.L55:
 951 0014 04000B40 		.word	1074462724
 952              		.cfi_endproc
 953              	.LFE15:
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 56


 954              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 955              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 956              		.align	2
 957              		.global	CySysLvdClearInterrupt
 958              		.code	16
 959              		.thumb_func
 960              		.type	CySysLvdClearInterrupt, %function
 961              	CySysLvdClearInterrupt:
 962              	.LFB16:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 963              		.loc 1 2183 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967 0000 80B5     		push	{r7, lr}
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 00AF     		add	r7, sp, #0
 972              		.cfi_def_cfa_register 7
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 973              		.loc 1 2184 0
 974 0004 024B     		ldr	r3, .L58
 975 0006 0222     		movs	r2, #2
 976 0008 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 977              		.loc 1 2185 0
 978 000a C046     		nop
 979 000c BD46     		mov	sp, r7
 980              		@ sp needed
 981 000e 80BD     		pop	{r7, pc}
 982              	.L59:
 983              		.align	2
 984              	.L58:
 985 0010 04000B40 		.word	1074462724
 986              		.cfi_endproc
 987              	.LFE16:
 988              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 989              		.section	.text.CySysGetResetReason,"ax",%progbits
 990              		.align	2
 991              		.global	CySysGetResetReason
 992              		.code	16
 993              		.thumb_func
 994              		.type	CySysGetResetReason, %function
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 57


 995              	CySysGetResetReason:
 996              	.LFB17:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 997              		.loc 1 2209 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 16
 1000              		@ frame_needed = 1, uses_anonymous_args = 0
 1001 0000 80B5     		push	{r7, lr}
 1002              		.cfi_def_cfa_offset 8
 1003              		.cfi_offset 7, -8
 1004              		.cfi_offset 14, -4
 1005 0002 84B0     		sub	sp, sp, #16
 1006              		.cfi_def_cfa_offset 24
 1007 0004 00AF     		add	r7, sp, #0
 1008              		.cfi_def_cfa_register 7
 1009 0006 7860     		str	r0, [r7, #4]
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1010              		.loc 1 2212 0
 1011 0008 7B68     		ldr	r3, [r7, #4]
 1012 000a 1922     		movs	r2, #25
 1013 000c 1340     		ands	r3, r2
 1014 000e 7B60     		str	r3, [r7, #4]
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1015              		.loc 1 2213 0
 1016 0010 064B     		ldr	r3, .L62
 1017 0012 1B68     		ldr	r3, [r3]
 1018 0014 1922     		movs	r2, #25
 1019 0016 1340     		ands	r3, r2
 1020 0018 FB60     		str	r3, [r7, #12]
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 1021              		.loc 1 2215 0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 58


 1022 001a 044B     		ldr	r3, .L62
 1023 001c 7A68     		ldr	r2, [r7, #4]
 1024 001e 1A60     		str	r2, [r3]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 1025              		.loc 1 2217 0
 1026 0020 FB68     		ldr	r3, [r7, #12]
2218:Generated_Source\PSoC4/CyLib.c **** }
 1027              		.loc 1 2218 0
 1028 0022 1800     		movs	r0, r3
 1029 0024 BD46     		mov	sp, r7
 1030 0026 04B0     		add	sp, sp, #16
 1031              		@ sp needed
 1032 0028 80BD     		pop	{r7, pc}
 1033              	.L63:
 1034 002a C046     		.align	2
 1035              	.L62:
 1036 002c 00030B40 		.word	1074463488
 1037              		.cfi_endproc
 1038              	.LFE17:
 1039              		.size	CySysGetResetReason, .-CySysGetResetReason
 1040              		.section	.text.CyDisableInts,"ax",%progbits
 1041              		.align	2
 1042              		.global	CyDisableInts
 1043              		.code	16
 1044              		.thumb_func
 1045              		.type	CyDisableInts, %function
 1046              	CyDisableInts:
 1047              	.LFB18:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 1048              		.loc 1 2232 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 8
 1051              		@ frame_needed = 1, uses_anonymous_args = 0
 1052 0000 80B5     		push	{r7, lr}
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 7, -8
 1055              		.cfi_offset 14, -4
 1056 0002 82B0     		sub	sp, sp, #8
 1057              		.cfi_def_cfa_offset 16
 1058 0004 00AF     		add	r7, sp, #0
 1059              		.cfi_def_cfa_register 7
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 59


2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1060              		.loc 1 2236 0
 1061 0006 064B     		ldr	r3, .L66
 1062 0008 1B68     		ldr	r3, [r3]
 1063 000a 7B60     		str	r3, [r7, #4]
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 1064              		.loc 1 2239 0
 1065 000c 044B     		ldr	r3, .L66
 1066 000e 0122     		movs	r2, #1
 1067 0010 5242     		rsbs	r2, r2, #0
 1068 0012 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 1069              		.loc 1 2241 0
 1070 0014 7B68     		ldr	r3, [r7, #4]
2242:Generated_Source\PSoC4/CyLib.c **** }
 1071              		.loc 1 2242 0
 1072 0016 1800     		movs	r0, r3
 1073 0018 BD46     		mov	sp, r7
 1074 001a 02B0     		add	sp, sp, #8
 1075              		@ sp needed
 1076 001c 80BD     		pop	{r7, pc}
 1077              	.L67:
 1078 001e C046     		.align	2
 1079              	.L66:
 1080 0020 80E100E0 		.word	-536813184
 1081              		.cfi_endproc
 1082              	.LFE18:
 1083              		.size	CyDisableInts, .-CyDisableInts
 1084              		.section	.text.CyEnableInts,"ax",%progbits
 1085              		.align	2
 1086              		.global	CyEnableInts
 1087              		.code	16
 1088              		.thumb_func
 1089              		.type	CyEnableInts, %function
 1090              	CyEnableInts:
 1091              	.LFB19:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 1092              		.loc 1 2255 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 8
 1095              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 60


 1096 0000 80B5     		push	{r7, lr}
 1097              		.cfi_def_cfa_offset 8
 1098              		.cfi_offset 7, -8
 1099              		.cfi_offset 14, -4
 1100 0002 82B0     		sub	sp, sp, #8
 1101              		.cfi_def_cfa_offset 16
 1102 0004 00AF     		add	r7, sp, #0
 1103              		.cfi_def_cfa_register 7
 1104 0006 7860     		str	r0, [r7, #4]
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1105              		.loc 1 2256 0
 1106 0008 034B     		ldr	r3, .L69
 1107 000a 7A68     		ldr	r2, [r7, #4]
 1108 000c 1A60     		str	r2, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 1109              		.loc 1 2257 0
 1110 000e C046     		nop
 1111 0010 BD46     		mov	sp, r7
 1112 0012 02B0     		add	sp, sp, #8
 1113              		@ sp needed
 1114 0014 80BD     		pop	{r7, pc}
 1115              	.L70:
 1116 0016 C046     		.align	2
 1117              	.L69:
 1118 0018 00E100E0 		.word	-536813312
 1119              		.cfi_endproc
 1120              	.LFE19:
 1121              		.size	CyEnableInts, .-CyEnableInts
 1122              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1123              		.align	2
 1124              		.global	CyIntSetSysVector
 1125              		.code	16
 1126              		.thumb_func
 1127              		.type	CyIntSetSysVector, %function
 1128              	CyIntSetSysVector:
 1129              	.LFB20:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 61


2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 1130              		.loc 1 2280 0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 16
 1133              		@ frame_needed = 1, uses_anonymous_args = 0
 1134 0000 80B5     		push	{r7, lr}
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 84B0     		sub	sp, sp, #16
 1139              		.cfi_def_cfa_offset 24
 1140 0004 00AF     		add	r7, sp, #0
 1141              		.cfi_def_cfa_register 7
 1142 0006 0200     		movs	r2, r0
 1143 0008 3960     		str	r1, [r7]
 1144 000a FB1D     		adds	r3, r7, #7
 1145 000c 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1146              		.loc 1 2282 0
 1147 000e 8023     		movs	r3, #128
 1148 0010 9B05     		lsls	r3, r3, #22
 1149 0012 FB60     		str	r3, [r7, #12]
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1150              		.loc 1 2284 0
 1151 0014 FB1D     		adds	r3, r7, #7
 1152 0016 1B78     		ldrb	r3, [r3]
 1153 0018 0F2B     		cmp	r3, #15
 1154 001a 02D9     		bls	.L72
 1155              		.loc 1 2284 0 is_stmt 0 discriminator 1
 1156 001c 0020     		movs	r0, #0
 1157 001e FFF7FEFF 		bl	CyHalt
 1158              	.L72:
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1159              		.loc 1 2287 0 is_stmt 1
 1160 0022 FB1D     		adds	r3, r7, #7
 1161 0024 1B78     		ldrb	r3, [r3]
 1162 0026 9B00     		lsls	r3, r3, #2
 1163 0028 FA68     		ldr	r2, [r7, #12]
 1164 002a D318     		adds	r3, r2, r3
 1165 002c 1B68     		ldr	r3, [r3]
 1166 002e BB60     		str	r3, [r7, #8]
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1167              		.loc 1 2290 0
 1168 0030 FB1D     		adds	r3, r7, #7
 1169 0032 1B78     		ldrb	r3, [r3]
 1170 0034 9B00     		lsls	r3, r3, #2
 1171 0036 FA68     		ldr	r2, [r7, #12]
 1172 0038 D318     		adds	r3, r2, r3
 1173 003a 3A68     		ldr	r2, [r7]
 1174 003c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 62


2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1175              		.loc 1 2292 0
 1176 003e BB68     		ldr	r3, [r7, #8]
2293:Generated_Source\PSoC4/CyLib.c **** }
 1177              		.loc 1 2293 0
 1178 0040 1800     		movs	r0, r3
 1179 0042 BD46     		mov	sp, r7
 1180 0044 04B0     		add	sp, sp, #16
 1181              		@ sp needed
 1182 0046 80BD     		pop	{r7, pc}
 1183              		.cfi_endproc
 1184              	.LFE20:
 1185              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1186              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1187              		.align	2
 1188              		.global	CyIntGetSysVector
 1189              		.code	16
 1190              		.thumb_func
 1191              		.type	CyIntGetSysVector, %function
 1192              	CyIntGetSysVector:
 1193              	.LFB21:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 1194              		.loc 1 2314 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 16
 1197              		@ frame_needed = 1, uses_anonymous_args = 0
 1198 0000 80B5     		push	{r7, lr}
 1199              		.cfi_def_cfa_offset 8
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 84B0     		sub	sp, sp, #16
 1203              		.cfi_def_cfa_offset 24
 1204 0004 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
 1206 0006 0200     		movs	r2, r0
 1207 0008 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 63


 1208 000a 1A70     		strb	r2, [r3]
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1209              		.loc 1 2315 0
 1210 000c 8023     		movs	r3, #128
 1211 000e 9B05     		lsls	r3, r3, #22
 1212 0010 FB60     		str	r3, [r7, #12]
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1213              		.loc 1 2317 0
 1214 0012 FB1D     		adds	r3, r7, #7
 1215 0014 1B78     		ldrb	r3, [r3]
 1216 0016 0F2B     		cmp	r3, #15
 1217 0018 02D9     		bls	.L75
 1218              		.loc 1 2317 0 is_stmt 0 discriminator 1
 1219 001a 0020     		movs	r0, #0
 1220 001c FFF7FEFF 		bl	CyHalt
 1221              	.L75:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1222              		.loc 1 2319 0 is_stmt 1
 1223 0020 FB1D     		adds	r3, r7, #7
 1224 0022 1B78     		ldrb	r3, [r3]
 1225 0024 9B00     		lsls	r3, r3, #2
 1226 0026 FA68     		ldr	r2, [r7, #12]
 1227 0028 D318     		adds	r3, r2, r3
 1228 002a 1B68     		ldr	r3, [r3]
2320:Generated_Source\PSoC4/CyLib.c **** }
 1229              		.loc 1 2320 0
 1230 002c 1800     		movs	r0, r3
 1231 002e BD46     		mov	sp, r7
 1232 0030 04B0     		add	sp, sp, #16
 1233              		@ sp needed
 1234 0032 80BD     		pop	{r7, pc}
 1235              		.cfi_endproc
 1236              	.LFE21:
 1237              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1238              		.section	.text.CyIntSetVector,"ax",%progbits
 1239              		.align	2
 1240              		.global	CyIntSetVector
 1241              		.code	16
 1242              		.thumb_func
 1243              		.type	CyIntSetVector, %function
 1244              	CyIntSetVector:
 1245              	.LFB22:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 64


2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 1246              		.loc 1 2336 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 16
 1249              		@ frame_needed = 1, uses_anonymous_args = 0
 1250 0000 80B5     		push	{r7, lr}
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 7, -8
 1253              		.cfi_offset 14, -4
 1254 0002 84B0     		sub	sp, sp, #16
 1255              		.cfi_def_cfa_offset 24
 1256 0004 00AF     		add	r7, sp, #0
 1257              		.cfi_def_cfa_register 7
 1258 0006 0200     		movs	r2, r0
 1259 0008 3960     		str	r1, [r7]
 1260 000a FB1D     		adds	r3, r7, #7
 1261 000c 1A70     		strb	r2, [r3]
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1262              		.loc 1 2338 0
 1263 000e 8023     		movs	r3, #128
 1264 0010 9B05     		lsls	r3, r3, #22
 1265 0012 FB60     		str	r3, [r7, #12]
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1266              		.loc 1 2340 0
 1267 0014 FB1D     		adds	r3, r7, #7
 1268 0016 1B78     		ldrb	r3, [r3]
 1269 0018 1F2B     		cmp	r3, #31
 1270 001a 02D9     		bls	.L78
 1271              		.loc 1 2340 0 is_stmt 0 discriminator 1
 1272 001c 0020     		movs	r0, #0
 1273 001e FFF7FEFF 		bl	CyHalt
 1274              	.L78:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1275              		.loc 1 2343 0 is_stmt 1
 1276 0022 FB1D     		adds	r3, r7, #7
 1277 0024 1B78     		ldrb	r3, [r3]
 1278 0026 1033     		adds	r3, r3, #16
 1279 0028 9B00     		lsls	r3, r3, #2
 1280 002a FA68     		ldr	r2, [r7, #12]
 1281 002c D318     		adds	r3, r2, r3
 1282 002e 1B68     		ldr	r3, [r3]
 1283 0030 BB60     		str	r3, [r7, #8]
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1284              		.loc 1 2346 0
 1285 0032 FB1D     		adds	r3, r7, #7
 1286 0034 1B78     		ldrb	r3, [r3]
 1287 0036 1033     		adds	r3, r3, #16
 1288 0038 9B00     		lsls	r3, r3, #2
 1289 003a FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 65


 1290 003c D318     		adds	r3, r2, r3
 1291 003e 3A68     		ldr	r2, [r7]
 1292 0040 1A60     		str	r2, [r3]
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1293              		.loc 1 2348 0
 1294 0042 BB68     		ldr	r3, [r7, #8]
2349:Generated_Source\PSoC4/CyLib.c **** }
 1295              		.loc 1 2349 0
 1296 0044 1800     		movs	r0, r3
 1297 0046 BD46     		mov	sp, r7
 1298 0048 04B0     		add	sp, sp, #16
 1299              		@ sp needed
 1300 004a 80BD     		pop	{r7, pc}
 1301              		.cfi_endproc
 1302              	.LFE22:
 1303              		.size	CyIntSetVector, .-CyIntSetVector
 1304              		.section	.text.CyIntGetVector,"ax",%progbits
 1305              		.align	2
 1306              		.global	CyIntGetVector
 1307              		.code	16
 1308              		.thumb_func
 1309              		.type	CyIntGetVector, %function
 1310              	CyIntGetVector:
 1311              	.LFB23:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 1312              		.loc 1 2364 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 16
 1315              		@ frame_needed = 1, uses_anonymous_args = 0
 1316 0000 80B5     		push	{r7, lr}
 1317              		.cfi_def_cfa_offset 8
 1318              		.cfi_offset 7, -8
 1319              		.cfi_offset 14, -4
 1320 0002 84B0     		sub	sp, sp, #16
 1321              		.cfi_def_cfa_offset 24
 1322 0004 00AF     		add	r7, sp, #0
 1323              		.cfi_def_cfa_register 7
 1324 0006 0200     		movs	r2, r0
 1325 0008 FB1D     		adds	r3, r7, #7
 1326 000a 1A70     		strb	r2, [r3]
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1327              		.loc 1 2365 0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 66


 1328 000c 8023     		movs	r3, #128
 1329 000e 9B05     		lsls	r3, r3, #22
 1330 0010 FB60     		str	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1331              		.loc 1 2367 0
 1332 0012 FB1D     		adds	r3, r7, #7
 1333 0014 1B78     		ldrb	r3, [r3]
 1334 0016 1F2B     		cmp	r3, #31
 1335 0018 02D9     		bls	.L81
 1336              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1337 001a 0020     		movs	r0, #0
 1338 001c FFF7FEFF 		bl	CyHalt
 1339              	.L81:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1340              		.loc 1 2369 0 is_stmt 1
 1341 0020 FB1D     		adds	r3, r7, #7
 1342 0022 1B78     		ldrb	r3, [r3]
 1343 0024 1033     		adds	r3, r3, #16
 1344 0026 9B00     		lsls	r3, r3, #2
 1345 0028 FA68     		ldr	r2, [r7, #12]
 1346 002a D318     		adds	r3, r2, r3
 1347 002c 1B68     		ldr	r3, [r3]
2370:Generated_Source\PSoC4/CyLib.c **** }
 1348              		.loc 1 2370 0
 1349 002e 1800     		movs	r0, r3
 1350 0030 BD46     		mov	sp, r7
 1351 0032 04B0     		add	sp, sp, #16
 1352              		@ sp needed
 1353 0034 80BD     		pop	{r7, pc}
 1354              		.cfi_endproc
 1355              	.LFE23:
 1356              		.size	CyIntGetVector, .-CyIntGetVector
 1357 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1358              		.align	2
 1359              		.global	CyIntSetPriority
 1360              		.code	16
 1361              		.thumb_func
 1362              		.type	CyIntSetPriority, %function
 1363              	CyIntSetPriority:
 1364              	.LFB24:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 1365              		.loc 1 2383 0
 1366              		.cfi_startproc
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 67


 1367              		@ args = 0, pretend = 0, frame = 24
 1368              		@ frame_needed = 1, uses_anonymous_args = 0
 1369 0000 90B5     		push	{r4, r7, lr}
 1370              		.cfi_def_cfa_offset 12
 1371              		.cfi_offset 4, -12
 1372              		.cfi_offset 7, -8
 1373              		.cfi_offset 14, -4
 1374 0002 87B0     		sub	sp, sp, #28
 1375              		.cfi_def_cfa_offset 40
 1376 0004 00AF     		add	r7, sp, #0
 1377              		.cfi_def_cfa_register 7
 1378 0006 0200     		movs	r2, r0
 1379 0008 FB1D     		adds	r3, r7, #7
 1380 000a 1A70     		strb	r2, [r3]
 1381 000c BB1D     		adds	r3, r7, #6
 1382 000e 0A1C     		adds	r2, r1, #0
 1383 0010 1A70     		strb	r2, [r3]
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1384              		.loc 1 2388 0
 1385 0012 BB1D     		adds	r3, r7, #6
 1386 0014 1B78     		ldrb	r3, [r3]
 1387 0016 032B     		cmp	r3, #3
 1388 0018 02D9     		bls	.L84
 1389              		.loc 1 2388 0 is_stmt 0 discriminator 1
 1390 001a 0020     		movs	r0, #0
 1391 001c FFF7FEFF 		bl	CyHalt
 1392              	.L84:
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1393              		.loc 1 2389 0 is_stmt 1
 1394 0020 FB1D     		adds	r3, r7, #7
 1395 0022 1B78     		ldrb	r3, [r3]
 1396 0024 1F2B     		cmp	r3, #31
 1397 0026 02D9     		bls	.L85
 1398              		.loc 1 2389 0 is_stmt 0 discriminator 1
 1399 0028 0020     		movs	r0, #0
 1400 002a FFF7FEFF 		bl	CyHalt
 1401              	.L85:
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1402              		.loc 1 2391 0 is_stmt 1
 1403 002e FB1D     		adds	r3, r7, #7
 1404 0030 1B78     		ldrb	r3, [r3]
 1405 0032 0322     		movs	r2, #3
 1406 0034 1340     		ands	r3, r2
 1407 0036 DB00     		lsls	r3, r3, #3
 1408 0038 0633     		adds	r3, r3, #6
 1409 003a 7B61     		str	r3, [r7, #20]
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1410              		.loc 1 2393 0
 1411 003c 1323     		movs	r3, #19
 1412 003e FC18     		adds	r4, r7, r3
 1413 0040 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 68


 1414 0044 0300     		movs	r3, r0
 1415 0046 2370     		strb	r3, [r4]
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1416              		.loc 1 2395 0
 1417 0048 FB1D     		adds	r3, r7, #7
 1418 004a 1B78     		ldrb	r3, [r3]
 1419 004c 9B08     		lsrs	r3, r3, #2
 1420 004e DBB2     		uxtb	r3, r3
 1421 0050 9B00     		lsls	r3, r3, #2
 1422 0052 144A     		ldr	r2, .L86
 1423 0054 9446     		mov	ip, r2
 1424 0056 6344     		add	r3, r3, ip
 1425 0058 1B68     		ldr	r3, [r3]
 1426 005a FB60     		str	r3, [r7, #12]
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1427              		.loc 1 2396 0
 1428 005c 0322     		movs	r2, #3
 1429 005e 7B69     		ldr	r3, [r7, #20]
 1430 0060 9A40     		lsls	r2, r2, r3
 1431 0062 1300     		movs	r3, r2
 1432 0064 DA43     		mvns	r2, r3
 1433 0066 FB68     		ldr	r3, [r7, #12]
 1434 0068 1340     		ands	r3, r2
 1435 006a FB60     		str	r3, [r7, #12]
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1436              		.loc 1 2397 0
 1437 006c BB1D     		adds	r3, r7, #6
 1438 006e 1A78     		ldrb	r2, [r3]
 1439 0070 7B69     		ldr	r3, [r7, #20]
 1440 0072 9A40     		lsls	r2, r2, r3
 1441 0074 1300     		movs	r3, r2
 1442 0076 FA68     		ldr	r2, [r7, #12]
 1443 0078 1343     		orrs	r3, r2
 1444 007a FB60     		str	r3, [r7, #12]
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1445              		.loc 1 2398 0
 1446 007c FB1D     		adds	r3, r7, #7
 1447 007e 1B78     		ldrb	r3, [r3]
 1448 0080 9B08     		lsrs	r3, r3, #2
 1449 0082 DBB2     		uxtb	r3, r3
 1450 0084 9B00     		lsls	r3, r3, #2
 1451 0086 074A     		ldr	r2, .L86
 1452 0088 9446     		mov	ip, r2
 1453 008a 6344     		add	r3, r3, ip
 1454 008c FA68     		ldr	r2, [r7, #12]
 1455 008e 1A60     		str	r2, [r3]
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1456              		.loc 1 2400 0
 1457 0090 1323     		movs	r3, #19
 1458 0092 FB18     		adds	r3, r7, r3
 1459 0094 1B78     		ldrb	r3, [r3]
 1460 0096 1800     		movs	r0, r3
 1461 0098 FFF7FEFF 		bl	CyExitCriticalSection
2401:Generated_Source\PSoC4/CyLib.c **** }
 1462              		.loc 1 2401 0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 69


 1463 009c C046     		nop
 1464 009e BD46     		mov	sp, r7
 1465 00a0 07B0     		add	sp, sp, #28
 1466              		@ sp needed
 1467 00a2 90BD     		pop	{r4, r7, pc}
 1468              	.L87:
 1469              		.align	2
 1470              	.L86:
 1471 00a4 00E400E0 		.word	-536812544
 1472              		.cfi_endproc
 1473              	.LFE24:
 1474              		.size	CyIntSetPriority, .-CyIntSetPriority
 1475              		.section	.text.CyIntGetPriority,"ax",%progbits
 1476              		.align	2
 1477              		.global	CyIntGetPriority
 1478              		.code	16
 1479              		.thumb_func
 1480              		.type	CyIntGetPriority, %function
 1481              	CyIntGetPriority:
 1482              	.LFB25:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 1483              		.loc 1 2417 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 16
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487 0000 80B5     		push	{r7, lr}
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 7, -8
 1490              		.cfi_offset 14, -4
 1491 0002 84B0     		sub	sp, sp, #16
 1492              		.cfi_def_cfa_offset 24
 1493 0004 00AF     		add	r7, sp, #0
 1494              		.cfi_def_cfa_register 7
 1495 0006 0200     		movs	r2, r0
 1496 0008 FB1D     		adds	r3, r7, #7
 1497 000a 1A70     		strb	r2, [r3]
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1498              		.loc 1 2420 0
 1499 000c FB1D     		adds	r3, r7, #7
 1500 000e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 70


 1501 0010 1F2B     		cmp	r3, #31
 1502 0012 02D9     		bls	.L89
 1503              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1504 0014 0020     		movs	r0, #0
 1505 0016 FFF7FEFF 		bl	CyHalt
 1506              	.L89:
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1507              		.loc 1 2422 0 is_stmt 1
 1508 001a FB1D     		adds	r3, r7, #7
 1509 001c 1B78     		ldrb	r3, [r3]
 1510 001e 9B08     		lsrs	r3, r3, #2
 1511 0020 DBB2     		uxtb	r3, r3
 1512 0022 9B00     		lsls	r3, r3, #2
 1513 0024 0B4A     		ldr	r2, .L91
 1514 0026 9446     		mov	ip, r2
 1515 0028 6344     		add	r3, r3, ip
 1516 002a 1A68     		ldr	r2, [r3]
 1517 002c FB1D     		adds	r3, r7, #7
 1518 002e 1B78     		ldrb	r3, [r3]
 1519 0030 0321     		movs	r1, #3
 1520 0032 0B40     		ands	r3, r1
 1521 0034 DB00     		lsls	r3, r3, #3
 1522 0036 0633     		adds	r3, r3, #6
 1523 0038 DA40     		lsrs	r2, r2, r3
 1524 003a 0F23     		movs	r3, #15
 1525 003c FB18     		adds	r3, r7, r3
 1526 003e 1A70     		strb	r2, [r3]
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1527              		.loc 1 2424 0
 1528 0040 0F23     		movs	r3, #15
 1529 0042 FB18     		adds	r3, r7, r3
 1530 0044 1B78     		ldrb	r3, [r3]
 1531 0046 0322     		movs	r2, #3
 1532 0048 1340     		ands	r3, r2
 1533 004a DBB2     		uxtb	r3, r3
2425:Generated_Source\PSoC4/CyLib.c **** }
 1534              		.loc 1 2425 0
 1535 004c 1800     		movs	r0, r3
 1536 004e BD46     		mov	sp, r7
 1537 0050 04B0     		add	sp, sp, #16
 1538              		@ sp needed
 1539 0052 80BD     		pop	{r7, pc}
 1540              	.L92:
 1541              		.align	2
 1542              	.L91:
 1543 0054 00E400E0 		.word	-536812544
 1544              		.cfi_endproc
 1545              	.LFE25:
 1546              		.size	CyIntGetPriority, .-CyIntGetPriority
 1547              		.section	.text.CyIntEnable,"ax",%progbits
 1548              		.align	2
 1549              		.global	CyIntEnable
 1550              		.code	16
 1551              		.thumb_func
 1552              		.type	CyIntEnable, %function
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 71


 1553              	CyIntEnable:
 1554              	.LFB26:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 1555              		.loc 1 2438 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 8
 1558              		@ frame_needed = 1, uses_anonymous_args = 0
 1559 0000 80B5     		push	{r7, lr}
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 7, -8
 1562              		.cfi_offset 14, -4
 1563 0002 82B0     		sub	sp, sp, #8
 1564              		.cfi_def_cfa_offset 16
 1565 0004 00AF     		add	r7, sp, #0
 1566              		.cfi_def_cfa_register 7
 1567 0006 0200     		movs	r2, r0
 1568 0008 FB1D     		adds	r3, r7, #7
 1569 000a 1A70     		strb	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1570              		.loc 1 2439 0
 1571 000c 064B     		ldr	r3, .L94
 1572 000e FA1D     		adds	r2, r7, #7
 1573 0010 1278     		ldrb	r2, [r2]
 1574 0012 1F21     		movs	r1, #31
 1575 0014 0A40     		ands	r2, r1
 1576 0016 0121     		movs	r1, #1
 1577 0018 9140     		lsls	r1, r1, r2
 1578 001a 0A00     		movs	r2, r1
 1579 001c 1A60     		str	r2, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 1580              		.loc 1 2440 0
 1581 001e C046     		nop
 1582 0020 BD46     		mov	sp, r7
 1583 0022 02B0     		add	sp, sp, #8
 1584              		@ sp needed
 1585 0024 80BD     		pop	{r7, pc}
 1586              	.L95:
 1587 0026 C046     		.align	2
 1588              	.L94:
 1589 0028 00E100E0 		.word	-536813312
 1590              		.cfi_endproc
 1591              	.LFE26:
 1592              		.size	CyIntEnable, .-CyIntEnable
 1593              		.section	.text.CyIntGetState,"ax",%progbits
 1594              		.align	2
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 72


 1595              		.global	CyIntGetState
 1596              		.code	16
 1597              		.thumb_func
 1598              		.type	CyIntGetState, %function
 1599              	CyIntGetState:
 1600              	.LFB27:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 1601              		.loc 1 2456 0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 8
 1604              		@ frame_needed = 1, uses_anonymous_args = 0
 1605 0000 80B5     		push	{r7, lr}
 1606              		.cfi_def_cfa_offset 8
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 0002 82B0     		sub	sp, sp, #8
 1610              		.cfi_def_cfa_offset 16
 1611 0004 00AF     		add	r7, sp, #0
 1612              		.cfi_def_cfa_register 7
 1613 0006 0200     		movs	r2, r0
 1614 0008 FB1D     		adds	r3, r7, #7
 1615 000a 1A70     		strb	r2, [r3]
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1616              		.loc 1 2458 0
 1617 000c 074B     		ldr	r3, .L98
 1618 000e 1A68     		ldr	r2, [r3]
 1619 0010 FB1D     		adds	r3, r7, #7
 1620 0012 1B78     		ldrb	r3, [r3]
 1621 0014 1F21     		movs	r1, #31
 1622 0016 0B40     		ands	r3, r1
 1623 0018 DA40     		lsrs	r2, r2, r3
 1624 001a 1300     		movs	r3, r2
 1625 001c DBB2     		uxtb	r3, r3
 1626 001e 0122     		movs	r2, #1
 1627 0020 1340     		ands	r3, r2
 1628 0022 DBB2     		uxtb	r3, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 1629              		.loc 1 2459 0
 1630 0024 1800     		movs	r0, r3
 1631 0026 BD46     		mov	sp, r7
 1632 0028 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 73


 1633              		@ sp needed
 1634 002a 80BD     		pop	{r7, pc}
 1635              	.L99:
 1636              		.align	2
 1637              	.L98:
 1638 002c 00E100E0 		.word	-536813312
 1639              		.cfi_endproc
 1640              	.LFE27:
 1641              		.size	CyIntGetState, .-CyIntGetState
 1642              		.section	.text.CyIntDisable,"ax",%progbits
 1643              		.align	2
 1644              		.global	CyIntDisable
 1645              		.code	16
 1646              		.thumb_func
 1647              		.type	CyIntDisable, %function
 1648              	CyIntDisable:
 1649              	.LFB28:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 1650              		.loc 1 2472 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 8
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654 0000 80B5     		push	{r7, lr}
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 7, -8
 1657              		.cfi_offset 14, -4
 1658 0002 82B0     		sub	sp, sp, #8
 1659              		.cfi_def_cfa_offset 16
 1660 0004 00AF     		add	r7, sp, #0
 1661              		.cfi_def_cfa_register 7
 1662 0006 0200     		movs	r2, r0
 1663 0008 FB1D     		adds	r3, r7, #7
 1664 000a 1A70     		strb	r2, [r3]
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1665              		.loc 1 2473 0
 1666 000c 064B     		ldr	r3, .L101
 1667 000e FA1D     		adds	r2, r7, #7
 1668 0010 1278     		ldrb	r2, [r2]
 1669 0012 1F21     		movs	r1, #31
 1670 0014 0A40     		ands	r2, r1
 1671 0016 0121     		movs	r1, #1
 1672 0018 9140     		lsls	r1, r1, r2
 1673 001a 0A00     		movs	r2, r1
 1674 001c 1A60     		str	r2, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 74


 1675              		.loc 1 2474 0
 1676 001e C046     		nop
 1677 0020 BD46     		mov	sp, r7
 1678 0022 02B0     		add	sp, sp, #8
 1679              		@ sp needed
 1680 0024 80BD     		pop	{r7, pc}
 1681              	.L102:
 1682 0026 C046     		.align	2
 1683              	.L101:
 1684 0028 80E100E0 		.word	-536813184
 1685              		.cfi_endproc
 1686              	.LFE28:
 1687              		.size	CyIntDisable, .-CyIntDisable
 1688              		.section	.text.CyIntSetPending,"ax",%progbits
 1689              		.align	2
 1690              		.global	CyIntSetPending
 1691              		.code	16
 1692              		.thumb_func
 1693              		.type	CyIntSetPending, %function
 1694              	CyIntSetPending:
 1695              	.LFB29:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 1696              		.loc 1 2486 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 8
 1699              		@ frame_needed = 1, uses_anonymous_args = 0
 1700 0000 80B5     		push	{r7, lr}
 1701              		.cfi_def_cfa_offset 8
 1702              		.cfi_offset 7, -8
 1703              		.cfi_offset 14, -4
 1704 0002 82B0     		sub	sp, sp, #8
 1705              		.cfi_def_cfa_offset 16
 1706 0004 00AF     		add	r7, sp, #0
 1707              		.cfi_def_cfa_register 7
 1708 0006 0200     		movs	r2, r0
 1709 0008 FB1D     		adds	r3, r7, #7
 1710 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1711              		.loc 1 2487 0
 1712 000c 064B     		ldr	r3, .L104
 1713 000e FA1D     		adds	r2, r7, #7
 1714 0010 1278     		ldrb	r2, [r2]
 1715 0012 1F21     		movs	r1, #31
 1716 0014 0A40     		ands	r2, r1
 1717 0016 0121     		movs	r1, #1
 1718 0018 9140     		lsls	r1, r1, r2
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 75


 1719 001a 0A00     		movs	r2, r1
 1720 001c 1A60     		str	r2, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 1721              		.loc 1 2488 0
 1722 001e C046     		nop
 1723 0020 BD46     		mov	sp, r7
 1724 0022 02B0     		add	sp, sp, #8
 1725              		@ sp needed
 1726 0024 80BD     		pop	{r7, pc}
 1727              	.L105:
 1728 0026 C046     		.align	2
 1729              	.L104:
 1730 0028 00E200E0 		.word	-536813056
 1731              		.cfi_endproc
 1732              	.LFE29:
 1733              		.size	CyIntSetPending, .-CyIntSetPending
 1734              		.section	.text.CyIntClearPending,"ax",%progbits
 1735              		.align	2
 1736              		.global	CyIntClearPending
 1737              		.code	16
 1738              		.thumb_func
 1739              		.type	CyIntClearPending, %function
 1740              	CyIntClearPending:
 1741              	.LFB30:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 1742              		.loc 1 2501 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 8
 1745              		@ frame_needed = 1, uses_anonymous_args = 0
 1746 0000 80B5     		push	{r7, lr}
 1747              		.cfi_def_cfa_offset 8
 1748              		.cfi_offset 7, -8
 1749              		.cfi_offset 14, -4
 1750 0002 82B0     		sub	sp, sp, #8
 1751              		.cfi_def_cfa_offset 16
 1752 0004 00AF     		add	r7, sp, #0
 1753              		.cfi_def_cfa_register 7
 1754 0006 0200     		movs	r2, r0
 1755 0008 FB1D     		adds	r3, r7, #7
 1756 000a 1A70     		strb	r2, [r3]
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1757              		.loc 1 2502 0
 1758 000c 064B     		ldr	r3, .L107
 1759 000e FA1D     		adds	r2, r7, #7
 1760 0010 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 76


 1761 0012 1F21     		movs	r1, #31
 1762 0014 0A40     		ands	r2, r1
 1763 0016 0121     		movs	r1, #1
 1764 0018 9140     		lsls	r1, r1, r2
 1765 001a 0A00     		movs	r2, r1
 1766 001c 1A60     		str	r2, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 1767              		.loc 1 2503 0
 1768 001e C046     		nop
 1769 0020 BD46     		mov	sp, r7
 1770 0022 02B0     		add	sp, sp, #8
 1771              		@ sp needed
 1772 0024 80BD     		pop	{r7, pc}
 1773              	.L108:
 1774 0026 C046     		.align	2
 1775              	.L107:
 1776 0028 80E200E0 		.word	-536812928
 1777              		.cfi_endproc
 1778              	.LFE30:
 1779              		.size	CyIntClearPending, .-CyIntClearPending
 1780              		.section	.text.CyHalt,"ax",%progbits
 1781              		.align	2
 1782              		.global	CyHalt
 1783              		.code	16
 1784              		.thumb_func
 1785              		.type	CyHalt, %function
 1786              	CyHalt:
 1787              	.LFB31:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 1788              		.loc 1 2516 0
 1789              		.cfi_startproc
 1790              		@ args = 0, pretend = 0, frame = 8
 1791              		@ frame_needed = 1, uses_anonymous_args = 0
 1792 0000 80B5     		push	{r7, lr}
 1793              		.cfi_def_cfa_offset 8
 1794              		.cfi_offset 7, -8
 1795              		.cfi_offset 14, -4
 1796 0002 82B0     		sub	sp, sp, #8
 1797              		.cfi_def_cfa_offset 16
 1798 0004 00AF     		add	r7, sp, #0
 1799              		.cfi_def_cfa_register 7
 1800 0006 0200     		movs	r2, r0
 1801 0008 FB1D     		adds	r3, r7, #7
 1802 000a 1A70     		strb	r2, [r3]
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 77


2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1803              		.loc 1 2525 0
 1804              		.syntax divided
 1805              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1806 000c 01BE     		    bkpt    1
 1807              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 1808              		.loc 1 2529 0
 1809              		.thumb
 1810              		.syntax unified
 1811 000e C046     		nop
 1812 0010 BD46     		mov	sp, r7
 1813 0012 02B0     		add	sp, sp, #8
 1814              		@ sp needed
 1815 0014 80BD     		pop	{r7, pc}
 1816              		.cfi_endproc
 1817              	.LFE31:
 1818              		.size	CyHalt, .-CyHalt
 1819 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 1820              		.align	2
 1821              		.global	CySoftwareReset
 1822              		.code	16
 1823              		.thumb_func
 1824              		.type	CySoftwareReset, %function
 1825              	CySoftwareReset:
 1826              	.LFB32:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1827              		.loc 1 2540 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 0
 1830              		@ frame_needed = 1, uses_anonymous_args = 0
 1831 0000 80B5     		push	{r7, lr}
 1832              		.cfi_def_cfa_offset 8
 1833              		.cfi_offset 7, -8
 1834              		.cfi_offset 14, -4
 1835 0002 00AF     		add	r7, sp, #0
 1836              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 78


2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1837              		.loc 1 2545 0
 1838 0004 054B     		ldr	r3, .L111
 1839 0006 054A     		ldr	r2, .L111
 1840 0008 1268     		ldr	r2, [r2]
 1841 000a 1204     		lsls	r2, r2, #16
 1842 000c 120C     		lsrs	r2, r2, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1843              		.loc 1 2546 0
 1844 000e 0449     		ldr	r1, .L111+4
 1845 0010 0A43     		orrs	r2, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1846              		.loc 1 2545 0
 1847 0012 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1848              		.loc 1 2547 0
 1849 0014 C046     		nop
 1850 0016 BD46     		mov	sp, r7
 1851              		@ sp needed
 1852 0018 80BD     		pop	{r7, pc}
 1853              	.L112:
 1854 001a C046     		.align	2
 1855              	.L111:
 1856 001c 0CED00E0 		.word	-536810228
 1857 0020 0400FA05 		.word	100270084
 1858              		.cfi_endproc
 1859              	.LFE32:
 1860              		.size	CySoftwareReset, .-CySoftwareReset
 1861              		.section	.text.CyDelay,"ax",%progbits
 1862              		.align	2
 1863              		.global	CyDelay
 1864              		.code	16
 1865              		.thumb_func
 1866              		.type	CyDelay, %function
 1867              	CyDelay:
 1868              	.LFB33:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1869              		.loc 1 2560 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 8
 1872              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 79


 1873 0000 80B5     		push	{r7, lr}
 1874              		.cfi_def_cfa_offset 8
 1875              		.cfi_offset 7, -8
 1876              		.cfi_offset 14, -4
 1877 0002 82B0     		sub	sp, sp, #8
 1878              		.cfi_def_cfa_offset 16
 1879 0004 00AF     		add	r7, sp, #0
 1880              		.cfi_def_cfa_register 7
 1881 0006 7860     		str	r0, [r7, #4]
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1882              		.loc 1 2561 0
 1883 0008 09E0     		b	.L114
 1884              	.L115:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1885              		.loc 1 2566 0
 1886 000a 0D4B     		ldr	r3, .L116
 1887 000c 1B68     		ldr	r3, [r3]
 1888 000e 1800     		movs	r0, r3
 1889 0010 FFF7FEFF 		bl	CyDelayCycles
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1890              		.loc 1 2567 0
 1891 0014 7B68     		ldr	r3, [r7, #4]
 1892 0016 0B4A     		ldr	r2, .L116+4
 1893 0018 9446     		mov	ip, r2
 1894 001a 6344     		add	r3, r3, ip
 1895 001c 7B60     		str	r3, [r7, #4]
 1896              	.L114:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1897              		.loc 1 2561 0
 1898 001e 7A68     		ldr	r2, [r7, #4]
 1899 0020 8023     		movs	r3, #128
 1900 0022 1B02     		lsls	r3, r3, #8
 1901 0024 9A42     		cmp	r2, r3
 1902 0026 F0D8     		bhi	.L115
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1903              		.loc 1 2570 0
 1904 0028 074B     		ldr	r3, .L116+8
 1905 002a 1B68     		ldr	r3, [r3]
 1906 002c 7A68     		ldr	r2, [r7, #4]
 1907 002e 5343     		muls	r3, r2
 1908 0030 1800     		movs	r0, r3
 1909 0032 FFF7FEFF 		bl	CyDelayCycles
2571:Generated_Source\PSoC4/CyLib.c **** }
 1910              		.loc 1 2571 0
 1911 0036 C046     		nop
 1912 0038 BD46     		mov	sp, r7
 1913 003a 02B0     		add	sp, sp, #8
 1914              		@ sp needed
 1915 003c 80BD     		pop	{r7, pc}
 1916              	.L117:
 1917 003e C046     		.align	2
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 80


 1918              	.L116:
 1919 0040 00000000 		.word	cydelay32kMs
 1920 0044 0080FFFF 		.word	-32768
 1921 0048 00000000 		.word	cydelayFreqKhz
 1922              		.cfi_endproc
 1923              	.LFE33:
 1924              		.size	CyDelay, .-CyDelay
 1925              		.section	.text.CyDelayUs,"ax",%progbits
 1926              		.align	2
 1927              		.global	CyDelayUs
 1928              		.code	16
 1929              		.thumb_func
 1930              		.type	CyDelayUs, %function
 1931              	CyDelayUs:
 1932              	.LFB34:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1933              		.loc 1 2583 0
 1934              		.cfi_startproc
 1935              		@ args = 0, pretend = 0, frame = 8
 1936              		@ frame_needed = 1, uses_anonymous_args = 0
 1937 0000 80B5     		push	{r7, lr}
 1938              		.cfi_def_cfa_offset 8
 1939              		.cfi_offset 7, -8
 1940              		.cfi_offset 14, -4
 1941 0002 82B0     		sub	sp, sp, #8
 1942              		.cfi_def_cfa_offset 16
 1943 0004 00AF     		add	r7, sp, #0
 1944              		.cfi_def_cfa_register 7
 1945 0006 0200     		movs	r2, r0
 1946 0008 BB1D     		adds	r3, r7, #6
 1947 000a 1A80     		strh	r2, [r3]
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1948              		.loc 1 2584 0
 1949 000c BB1D     		adds	r3, r7, #6
 1950 000e 1B88     		ldrh	r3, [r3]
 1951 0010 044A     		ldr	r2, .L119
 1952 0012 1278     		ldrb	r2, [r2]
 1953 0014 5343     		muls	r3, r2
 1954 0016 1800     		movs	r0, r3
 1955 0018 FFF7FEFF 		bl	CyDelayCycles
2585:Generated_Source\PSoC4/CyLib.c **** }
 1956              		.loc 1 2585 0
 1957 001c C046     		nop
 1958 001e BD46     		mov	sp, r7
 1959 0020 02B0     		add	sp, sp, #8
 1960              		@ sp needed
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 81


 1961 0022 80BD     		pop	{r7, pc}
 1962              	.L120:
 1963              		.align	2
 1964              	.L119:
 1965 0024 00000000 		.word	cydelayFreqMhz
 1966              		.cfi_endproc
 1967              	.LFE34:
 1968              		.size	CyDelayUs, .-CyDelayUs
 1969              		.global	__aeabi_uidiv
 1970              		.section	.text.CyDelayFreq,"ax",%progbits
 1971              		.align	2
 1972              		.global	CyDelayFreq
 1973              		.code	16
 1974              		.thumb_func
 1975              		.type	CyDelayFreq, %function
 1976              	CyDelayFreq:
 1977              	.LFB35:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1978              		.loc 1 2597 0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 8
 1981              		@ frame_needed = 1, uses_anonymous_args = 0
 1982 0000 80B5     		push	{r7, lr}
 1983              		.cfi_def_cfa_offset 8
 1984              		.cfi_offset 7, -8
 1985              		.cfi_offset 14, -4
 1986 0002 82B0     		sub	sp, sp, #8
 1987              		.cfi_def_cfa_offset 16
 1988 0004 00AF     		add	r7, sp, #0
 1989              		.cfi_def_cfa_register 7
 1990 0006 7860     		str	r0, [r7, #4]
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1991              		.loc 1 2598 0
 1992 0008 7B68     		ldr	r3, [r7, #4]
 1993 000a 002B     		cmp	r3, #0
 1994 000c 03D0     		beq	.L122
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1995              		.loc 1 2600 0
 1996 000e 154B     		ldr	r3, .L124
 1997 0010 7A68     		ldr	r2, [r7, #4]
 1998 0012 1A60     		str	r2, [r3]
 1999 0014 02E0     		b	.L123
 2000              	.L122:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 82


2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 2001              		.loc 1 2604 0
 2002 0016 134B     		ldr	r3, .L124
 2003 0018 134A     		ldr	r2, .L124+4
 2004 001a 1A60     		str	r2, [r3]
 2005              	.L123:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 2006              		.loc 1 2607 0
 2007 001c 114B     		ldr	r3, .L124
 2008 001e 1B68     		ldr	r3, [r3]
 2009 0020 124A     		ldr	r2, .L124+8
 2010 0022 9446     		mov	ip, r2
 2011 0024 6344     		add	r3, r3, ip
 2012 0026 1249     		ldr	r1, .L124+12
 2013 0028 1800     		movs	r0, r3
 2014 002a FFF7FEFF 		bl	__aeabi_uidiv
 2015 002e 0300     		movs	r3, r0
 2016 0030 DAB2     		uxtb	r2, r3
 2017 0032 104B     		ldr	r3, .L124+16
 2018 0034 1A70     		strb	r2, [r3]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 2019              		.loc 1 2608 0
 2020 0036 0B4B     		ldr	r3, .L124
 2021 0038 1B68     		ldr	r3, [r3]
 2022 003a 0F4A     		ldr	r2, .L124+20
 2023 003c 9A18     		adds	r2, r3, r2
 2024 003e FA23     		movs	r3, #250
 2025 0040 9900     		lsls	r1, r3, #2
 2026 0042 1000     		movs	r0, r2
 2027 0044 FFF7FEFF 		bl	__aeabi_uidiv
 2028 0048 0300     		movs	r3, r0
 2029 004a 1A00     		movs	r2, r3
 2030 004c 0B4B     		ldr	r3, .L124+24
 2031 004e 1A60     		str	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 2032              		.loc 1 2609 0
 2033 0050 0A4B     		ldr	r3, .L124+24
 2034 0052 1B68     		ldr	r3, [r3]
 2035 0054 DA03     		lsls	r2, r3, #15
 2036 0056 0A4B     		ldr	r3, .L124+28
 2037 0058 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 2038              		.loc 1 2610 0
 2039 005a C046     		nop
 2040 005c BD46     		mov	sp, r7
 2041 005e 02B0     		add	sp, sp, #8
 2042              		@ sp needed
 2043 0060 80BD     		pop	{r7, pc}
 2044              	.L125:
 2045 0062 C046     		.align	2
 2046              	.L124:
 2047 0064 00000000 		.word	cydelayFreqHz
 2048 0068 006CDC02 		.word	48000000
 2049 006c 3F420F00 		.word	999999
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 83


 2050 0070 40420F00 		.word	1000000
 2051 0074 00000000 		.word	cydelayFreqMhz
 2052 0078 E7030000 		.word	999
 2053 007c 00000000 		.word	cydelayFreqKhz
 2054 0080 00000000 		.word	cydelay32kMs
 2055              		.cfi_endproc
 2056              	.LFE35:
 2057              		.size	CyDelayFreq, .-CyDelayFreq
 2058              		.section	.text.CySysTickStart,"ax",%progbits
 2059              		.align	2
 2060              		.global	CySysTickStart
 2061              		.code	16
 2062              		.thumb_func
 2063              		.type	CySysTickStart, %function
 2064              	CySysTickStart:
 2065              	.LFB36:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
 2066              		.loc 1 2629 0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 0
 2069              		@ frame_needed = 1, uses_anonymous_args = 0
 2070 0000 80B5     		push	{r7, lr}
 2071              		.cfi_def_cfa_offset 8
 2072              		.cfi_offset 7, -8
 2073              		.cfi_offset 14, -4
 2074 0002 00AF     		add	r7, sp, #0
 2075              		.cfi_def_cfa_register 7
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2076              		.loc 1 2630 0
 2077 0004 064B     		ldr	r3, .L128
 2078 0006 1B68     		ldr	r3, [r3]
 2079 0008 002B     		cmp	r3, #0
 2080 000a 04D1     		bne	.L127
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2081              		.loc 1 2632 0
 2082 000c FFF7FEFF 		bl	CySysTickInit
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2083              		.loc 1 2633 0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 84


 2084 0010 034B     		ldr	r3, .L128
 2085 0012 0122     		movs	r2, #1
 2086 0014 1A60     		str	r2, [r3]
 2087              	.L127:
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2088              		.loc 1 2636 0
 2089 0016 FFF7FEFF 		bl	CySysTickEnable
2637:Generated_Source\PSoC4/CyLib.c **** }
 2090              		.loc 1 2637 0
 2091 001a C046     		nop
 2092 001c BD46     		mov	sp, r7
 2093              		@ sp needed
 2094 001e 80BD     		pop	{r7, pc}
 2095              	.L129:
 2096              		.align	2
 2097              	.L128:
 2098 0020 00000000 		.word	CySysTickInitVar
 2099              		.cfi_endproc
 2100              	.LFE36:
 2101              		.size	CySysTickStart, .-CySysTickStart
 2102              		.section	.text.CySysTickInit,"ax",%progbits
 2103              		.align	2
 2104              		.global	CySysTickInit
 2105              		.code	16
 2106              		.thumb_func
 2107              		.type	CySysTickInit, %function
 2108              	CySysTickInit:
 2109              	.LFB37:
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 2110              		.loc 1 2658 0
 2111              		.cfi_startproc
 2112              		@ args = 0, pretend = 0, frame = 8
 2113              		@ frame_needed = 1, uses_anonymous_args = 0
 2114 0000 80B5     		push	{r7, lr}
 2115              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 85


 2116              		.cfi_offset 7, -8
 2117              		.cfi_offset 14, -4
 2118 0002 82B0     		sub	sp, sp, #8
 2119              		.cfi_def_cfa_offset 16
 2120 0004 00AF     		add	r7, sp, #0
 2121              		.cfi_def_cfa_register 7
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2122              		.loc 1 2661 0
 2123 0006 0023     		movs	r3, #0
 2124 0008 7B60     		str	r3, [r7, #4]
 2125 000a 07E0     		b	.L131
 2126              	.L132:
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2127              		.loc 1 2663 0 discriminator 3
 2128 000c 134B     		ldr	r3, .L133
 2129 000e 7A68     		ldr	r2, [r7, #4]
 2130 0010 9200     		lsls	r2, r2, #2
 2131 0012 0021     		movs	r1, #0
 2132 0014 D150     		str	r1, [r2, r3]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2133              		.loc 1 2661 0 discriminator 3
 2134 0016 7B68     		ldr	r3, [r7, #4]
 2135 0018 0133     		adds	r3, r3, #1
 2136 001a 7B60     		str	r3, [r7, #4]
 2137              	.L131:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2138              		.loc 1 2661 0 is_stmt 0 discriminator 1
 2139 001c 7B68     		ldr	r3, [r7, #4]
 2140 001e 042B     		cmp	r3, #4
 2141 0020 F4D9     		bls	.L132
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2142              		.loc 1 2666 0 is_stmt 1
 2143 0022 0F4B     		ldr	r3, .L133+4
 2144 0024 1900     		movs	r1, r3
 2145 0026 0F20     		movs	r0, #15
 2146 0028 FFF7FEFF 		bl	CyIntSetSysVector
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2147              		.loc 1 2669 0
 2148 002c 0120     		movs	r0, #1
 2149 002e FFF7FEFF 		bl	CySysTickSetClockSource
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2150              		.loc 1 2672 0
 2151 0032 0C4B     		ldr	r3, .L133+8
 2152 0034 1A68     		ldr	r2, [r3]
 2153 0036 FA23     		movs	r3, #250
 2154 0038 9900     		lsls	r1, r3, #2
 2155 003a 1000     		movs	r0, r2
 2156 003c FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 86


 2157 0040 0300     		movs	r3, r0
 2158 0042 1800     		movs	r0, r3
 2159 0044 FFF7FEFF 		bl	CySysTickSetReload
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2160              		.loc 1 2673 0
 2161 0048 FFF7FEFF 		bl	CySysTickClear
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 2162              		.loc 1 2674 0
 2163 004c 0F20     		movs	r0, #15
 2164 004e FFF7FEFF 		bl	CyIntEnable
2675:Generated_Source\PSoC4/CyLib.c **** }
 2165              		.loc 1 2675 0
 2166 0052 C046     		nop
 2167 0054 BD46     		mov	sp, r7
 2168 0056 02B0     		add	sp, sp, #8
 2169              		@ sp needed
 2170 0058 80BD     		pop	{r7, pc}
 2171              	.L134:
 2172 005a C046     		.align	2
 2173              	.L133:
 2174 005c 00000000 		.word	CySysTickCallbacks
 2175 0060 00000000 		.word	CySysTickServiceCallbacks
 2176 0064 00000000 		.word	cydelayFreqHz
 2177              		.cfi_endproc
 2178              	.LFE37:
 2179              		.size	CySysTickInit, .-CySysTickInit
 2180              		.section	.text.CySysTickEnable,"ax",%progbits
 2181              		.align	2
 2182              		.global	CySysTickEnable
 2183              		.code	16
 2184              		.thumb_func
 2185              		.type	CySysTickEnable, %function
 2186              	CySysTickEnable:
 2187              	.LFB38:
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
 2188              		.loc 1 2689 0
 2189              		.cfi_startproc
 2190              		@ args = 0, pretend = 0, frame = 0
 2191              		@ frame_needed = 1, uses_anonymous_args = 0
 2192 0000 80B5     		push	{r7, lr}
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 7, -8
 2195              		.cfi_offset 14, -4
 2196 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 87


 2197              		.cfi_def_cfa_register 7
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2198              		.loc 1 2690 0
 2199 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2200              		.loc 1 2691 0
 2201 0008 044B     		ldr	r3, .L136
 2202 000a 044A     		ldr	r2, .L136
 2203 000c 1268     		ldr	r2, [r2]
 2204 000e 0121     		movs	r1, #1
 2205 0010 0A43     		orrs	r2, r1
 2206 0012 1A60     		str	r2, [r3]
2692:Generated_Source\PSoC4/CyLib.c **** }
 2207              		.loc 1 2692 0
 2208 0014 C046     		nop
 2209 0016 BD46     		mov	sp, r7
 2210              		@ sp needed
 2211 0018 80BD     		pop	{r7, pc}
 2212              	.L137:
 2213 001a C046     		.align	2
 2214              	.L136:
 2215 001c 10E000E0 		.word	-536813552
 2216              		.cfi_endproc
 2217              	.LFE38:
 2218              		.size	CySysTickEnable, .-CySysTickEnable
 2219              		.section	.text.CySysTickStop,"ax",%progbits
 2220              		.align	2
 2221              		.global	CySysTickStop
 2222              		.code	16
 2223              		.thumb_func
 2224              		.type	CySysTickStop, %function
 2225              	CySysTickStop:
 2226              	.LFB39:
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 2227              		.loc 1 2706 0
 2228              		.cfi_startproc
 2229              		@ args = 0, pretend = 0, frame = 0
 2230              		@ frame_needed = 1, uses_anonymous_args = 0
 2231 0000 80B5     		push	{r7, lr}
 2232              		.cfi_def_cfa_offset 8
 2233              		.cfi_offset 7, -8
 2234              		.cfi_offset 14, -4
 2235 0002 00AF     		add	r7, sp, #0
 2236              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 88


2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2237              		.loc 1 2707 0
 2238 0004 044B     		ldr	r3, .L139
 2239 0006 044A     		ldr	r2, .L139
 2240 0008 1268     		ldr	r2, [r2]
 2241 000a 0121     		movs	r1, #1
 2242 000c 8A43     		bics	r2, r1
 2243 000e 1A60     		str	r2, [r3]
2708:Generated_Source\PSoC4/CyLib.c **** }
 2244              		.loc 1 2708 0
 2245 0010 C046     		nop
 2246 0012 BD46     		mov	sp, r7
 2247              		@ sp needed
 2248 0014 80BD     		pop	{r7, pc}
 2249              	.L140:
 2250 0016 C046     		.align	2
 2251              	.L139:
 2252 0018 10E000E0 		.word	-536813552
 2253              		.cfi_endproc
 2254              	.LFE39:
 2255              		.size	CySysTickStop, .-CySysTickStop
 2256              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2257              		.align	2
 2258              		.global	CySysTickEnableInterrupt
 2259              		.code	16
 2260              		.thumb_func
 2261              		.type	CySysTickEnableInterrupt, %function
 2262              	CySysTickEnableInterrupt:
 2263              	.LFB40:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 2264              		.loc 1 2722 0
 2265              		.cfi_startproc
 2266              		@ args = 0, pretend = 0, frame = 0
 2267              		@ frame_needed = 1, uses_anonymous_args = 0
 2268 0000 80B5     		push	{r7, lr}
 2269              		.cfi_def_cfa_offset 8
 2270              		.cfi_offset 7, -8
 2271              		.cfi_offset 14, -4
 2272 0002 00AF     		add	r7, sp, #0
 2273              		.cfi_def_cfa_register 7
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2274              		.loc 1 2723 0
 2275 0004 044B     		ldr	r3, .L142
 2276 0006 044A     		ldr	r2, .L142
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 89


 2277 0008 1268     		ldr	r2, [r2]
 2278 000a 0221     		movs	r1, #2
 2279 000c 0A43     		orrs	r2, r1
 2280 000e 1A60     		str	r2, [r3]
2724:Generated_Source\PSoC4/CyLib.c **** }
 2281              		.loc 1 2724 0
 2282 0010 C046     		nop
 2283 0012 BD46     		mov	sp, r7
 2284              		@ sp needed
 2285 0014 80BD     		pop	{r7, pc}
 2286              	.L143:
 2287 0016 C046     		.align	2
 2288              	.L142:
 2289 0018 10E000E0 		.word	-536813552
 2290              		.cfi_endproc
 2291              	.LFE40:
 2292              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2293              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2294              		.align	2
 2295              		.global	CySysTickDisableInterrupt
 2296              		.code	16
 2297              		.thumb_func
 2298              		.type	CySysTickDisableInterrupt, %function
 2299              	CySysTickDisableInterrupt:
 2300              	.LFB41:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
 2301              		.loc 1 2738 0
 2302              		.cfi_startproc
 2303              		@ args = 0, pretend = 0, frame = 0
 2304              		@ frame_needed = 1, uses_anonymous_args = 0
 2305 0000 80B5     		push	{r7, lr}
 2306              		.cfi_def_cfa_offset 8
 2307              		.cfi_offset 7, -8
 2308              		.cfi_offset 14, -4
 2309 0002 00AF     		add	r7, sp, #0
 2310              		.cfi_def_cfa_register 7
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2311              		.loc 1 2739 0
 2312 0004 044B     		ldr	r3, .L145
 2313 0006 044A     		ldr	r2, .L145
 2314 0008 1268     		ldr	r2, [r2]
 2315 000a 0221     		movs	r1, #2
 2316 000c 8A43     		bics	r2, r1
 2317 000e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 90


2740:Generated_Source\PSoC4/CyLib.c **** }
 2318              		.loc 1 2740 0
 2319 0010 C046     		nop
 2320 0012 BD46     		mov	sp, r7
 2321              		@ sp needed
 2322 0014 80BD     		pop	{r7, pc}
 2323              	.L146:
 2324 0016 C046     		.align	2
 2325              	.L145:
 2326 0018 10E000E0 		.word	-536813552
 2327              		.cfi_endproc
 2328              	.LFE41:
 2329              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2330              		.section	.text.CySysTickSetReload,"ax",%progbits
 2331              		.align	2
 2332              		.global	CySysTickSetReload
 2333              		.code	16
 2334              		.thumb_func
 2335              		.type	CySysTickSetReload, %function
 2336              	CySysTickSetReload:
 2337              	.LFB42:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 2338              		.loc 1 2755 0
 2339              		.cfi_startproc
 2340              		@ args = 0, pretend = 0, frame = 8
 2341              		@ frame_needed = 1, uses_anonymous_args = 0
 2342 0000 80B5     		push	{r7, lr}
 2343              		.cfi_def_cfa_offset 8
 2344              		.cfi_offset 7, -8
 2345              		.cfi_offset 14, -4
 2346 0002 82B0     		sub	sp, sp, #8
 2347              		.cfi_def_cfa_offset 16
 2348 0004 00AF     		add	r7, sp, #0
 2349              		.cfi_def_cfa_register 7
 2350 0006 7860     		str	r0, [r7, #4]
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2351              		.loc 1 2756 0
 2352 0008 044B     		ldr	r3, .L148
 2353 000a 7A68     		ldr	r2, [r7, #4]
 2354 000c 1202     		lsls	r2, r2, #8
 2355 000e 120A     		lsrs	r2, r2, #8
 2356 0010 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 91


 2357              		.loc 1 2757 0
 2358 0012 C046     		nop
 2359 0014 BD46     		mov	sp, r7
 2360 0016 02B0     		add	sp, sp, #8
 2361              		@ sp needed
 2362 0018 80BD     		pop	{r7, pc}
 2363              	.L149:
 2364 001a C046     		.align	2
 2365              	.L148:
 2366 001c 14E000E0 		.word	-536813548
 2367              		.cfi_endproc
 2368              	.LFE42:
 2369              		.size	CySysTickSetReload, .-CySysTickSetReload
 2370              		.section	.text.CySysTickGetReload,"ax",%progbits
 2371              		.align	2
 2372              		.global	CySysTickGetReload
 2373              		.code	16
 2374              		.thumb_func
 2375              		.type	CySysTickGetReload, %function
 2376              	CySysTickGetReload:
 2377              	.LFB43:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 2378              		.loc 1 2771 0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 0
 2381              		@ frame_needed = 1, uses_anonymous_args = 0
 2382 0000 80B5     		push	{r7, lr}
 2383              		.cfi_def_cfa_offset 8
 2384              		.cfi_offset 7, -8
 2385              		.cfi_offset 14, -4
 2386 0002 00AF     		add	r7, sp, #0
 2387              		.cfi_def_cfa_register 7
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2388              		.loc 1 2772 0
 2389 0004 034B     		ldr	r3, .L152
 2390 0006 1B68     		ldr	r3, [r3]
 2391 0008 1B02     		lsls	r3, r3, #8
 2392 000a 1B0A     		lsrs	r3, r3, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 2393              		.loc 1 2773 0
 2394 000c 1800     		movs	r0, r3
 2395 000e BD46     		mov	sp, r7
 2396              		@ sp needed
 2397 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 92


 2398              	.L153:
 2399 0012 C046     		.align	2
 2400              	.L152:
 2401 0014 14E000E0 		.word	-536813548
 2402              		.cfi_endproc
 2403              	.LFE43:
 2404              		.size	CySysTickGetReload, .-CySysTickGetReload
 2405              		.section	.text.CySysTickGetValue,"ax",%progbits
 2406              		.align	2
 2407              		.global	CySysTickGetValue
 2408              		.code	16
 2409              		.thumb_func
 2410              		.type	CySysTickGetValue, %function
 2411              	CySysTickGetValue:
 2412              	.LFB44:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 2413              		.loc 1 2787 0
 2414              		.cfi_startproc
 2415              		@ args = 0, pretend = 0, frame = 0
 2416              		@ frame_needed = 1, uses_anonymous_args = 0
 2417 0000 80B5     		push	{r7, lr}
 2418              		.cfi_def_cfa_offset 8
 2419              		.cfi_offset 7, -8
 2420              		.cfi_offset 14, -4
 2421 0002 00AF     		add	r7, sp, #0
 2422              		.cfi_def_cfa_register 7
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2423              		.loc 1 2788 0
 2424 0004 034B     		ldr	r3, .L156
 2425 0006 1B68     		ldr	r3, [r3]
 2426 0008 1B02     		lsls	r3, r3, #8
 2427 000a 1B0A     		lsrs	r3, r3, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 2428              		.loc 1 2789 0
 2429 000c 1800     		movs	r0, r3
 2430 000e BD46     		mov	sp, r7
 2431              		@ sp needed
 2432 0010 80BD     		pop	{r7, pc}
 2433              	.L157:
 2434 0012 C046     		.align	2
 2435              	.L156:
 2436 0014 18E000E0 		.word	-536813544
 2437              		.cfi_endproc
 2438              	.LFE44:
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 93


 2439              		.size	CySysTickGetValue, .-CySysTickGetValue
 2440              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2441              		.align	2
 2442              		.global	CySysTickSetClockSource
 2443              		.code	16
 2444              		.thumb_func
 2445              		.type	CySysTickSetClockSource, %function
 2446              	CySysTickSetClockSource:
 2447              	.LFB45:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
 2448              		.loc 1 2819 0
 2449              		.cfi_startproc
 2450              		@ args = 0, pretend = 0, frame = 8
 2451              		@ frame_needed = 1, uses_anonymous_args = 0
 2452 0000 80B5     		push	{r7, lr}
 2453              		.cfi_def_cfa_offset 8
 2454              		.cfi_offset 7, -8
 2455              		.cfi_offset 14, -4
 2456 0002 82B0     		sub	sp, sp, #8
 2457              		.cfi_def_cfa_offset 16
 2458 0004 00AF     		add	r7, sp, #0
 2459              		.cfi_def_cfa_register 7
 2460 0006 7860     		str	r0, [r7, #4]
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2461              		.loc 1 2820 0
 2462 0008 7B68     		ldr	r3, [r7, #4]
 2463 000a 012B     		cmp	r3, #1
 2464 000c 06D1     		bne	.L159
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 94


2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2465              		.loc 1 2822 0
 2466 000e 084B     		ldr	r3, .L162
 2467 0010 074A     		ldr	r2, .L162
 2468 0012 1268     		ldr	r2, [r2]
 2469 0014 0421     		movs	r1, #4
 2470 0016 0A43     		orrs	r2, r1
 2471 0018 1A60     		str	r2, [r3]
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
 2472              		.loc 1 2828 0
 2473 001a 05E0     		b	.L161
 2474              	.L159:
2826:Generated_Source\PSoC4/CyLib.c ****         }
 2475              		.loc 1 2826 0
 2476 001c 044B     		ldr	r3, .L162
 2477 001e 044A     		ldr	r2, .L162
 2478 0020 1268     		ldr	r2, [r2]
 2479 0022 0421     		movs	r1, #4
 2480 0024 8A43     		bics	r2, r1
 2481 0026 1A60     		str	r2, [r3]
 2482              	.L161:
 2483              		.loc 1 2828 0
 2484 0028 C046     		nop
 2485 002a BD46     		mov	sp, r7
 2486 002c 02B0     		add	sp, sp, #8
 2487              		@ sp needed
 2488 002e 80BD     		pop	{r7, pc}
 2489              	.L163:
 2490              		.align	2
 2491              	.L162:
 2492 0030 10E000E0 		.word	-536813552
 2493              		.cfi_endproc
 2494              	.LFE45:
 2495              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2496              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2497              		.align	2
 2498              		.global	CySysTickGetClockSource
 2499              		.code	16
 2500              		.thumb_func
 2501              		.type	CySysTickGetClockSource, %function
 2502              	CySysTickGetClockSource:
 2503              	.LFB46:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 95


2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
 2504              		.loc 1 2844 0
 2505              		.cfi_startproc
 2506              		@ args = 0, pretend = 0, frame = 0
 2507              		@ frame_needed = 1, uses_anonymous_args = 0
 2508 0000 80B5     		push	{r7, lr}
 2509              		.cfi_def_cfa_offset 8
 2510              		.cfi_offset 7, -8
 2511              		.cfi_offset 14, -4
 2512 0002 00AF     		add	r7, sp, #0
 2513              		.cfi_def_cfa_register 7
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2514              		.loc 1 2845 0
 2515 0004 034B     		ldr	r3, .L166
 2516 0006 1B68     		ldr	r3, [r3]
 2517 0008 9B08     		lsrs	r3, r3, #2
 2518 000a 0122     		movs	r2, #1
 2519 000c 1340     		ands	r3, r2
2846:Generated_Source\PSoC4/CyLib.c ****     }
 2520              		.loc 1 2846 0
 2521 000e 1800     		movs	r0, r3
 2522 0010 BD46     		mov	sp, r7
 2523              		@ sp needed
 2524 0012 80BD     		pop	{r7, pc}
 2525              	.L167:
 2526              		.align	2
 2527              	.L166:
 2528 0014 10E000E0 		.word	-536813552
 2529              		.cfi_endproc
 2530              	.LFE46:
 2531              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2532              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2533              		.align	2
 2534              		.global	CySysTickGetCountFlag
 2535              		.code	16
 2536              		.thumb_func
 2537              		.type	CySysTickGetCountFlag, %function
 2538              	CySysTickGetCountFlag:
 2539              	.LFB47:
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 96


2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 2540              		.loc 1 2867 0
 2541              		.cfi_startproc
 2542              		@ args = 0, pretend = 0, frame = 0
 2543              		@ frame_needed = 1, uses_anonymous_args = 0
 2544 0000 80B5     		push	{r7, lr}
 2545              		.cfi_def_cfa_offset 8
 2546              		.cfi_offset 7, -8
 2547              		.cfi_offset 14, -4
 2548 0002 00AF     		add	r7, sp, #0
 2549              		.cfi_def_cfa_register 7
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2550              		.loc 1 2868 0
 2551 0004 034B     		ldr	r3, .L170
 2552 0006 1B68     		ldr	r3, [r3]
 2553 0008 1B0C     		lsrs	r3, r3, #16
 2554 000a 0122     		movs	r2, #1
 2555 000c 1340     		ands	r3, r2
2869:Generated_Source\PSoC4/CyLib.c **** }
 2556              		.loc 1 2869 0
 2557 000e 1800     		movs	r0, r3
 2558 0010 BD46     		mov	sp, r7
 2559              		@ sp needed
 2560 0012 80BD     		pop	{r7, pc}
 2561              	.L171:
 2562              		.align	2
 2563              	.L170:
 2564 0014 10E000E0 		.word	-536813552
 2565              		.cfi_endproc
 2566              	.LFE47:
 2567              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2568              		.section	.text.CySysTickClear,"ax",%progbits
 2569              		.align	2
 2570              		.global	CySysTickClear
 2571              		.code	16
 2572              		.thumb_func
 2573              		.type	CySysTickClear, %function
 2574              	CySysTickClear:
 2575              	.LFB48:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 97


2880:Generated_Source\PSoC4/CyLib.c **** {
 2576              		.loc 1 2880 0
 2577              		.cfi_startproc
 2578              		@ args = 0, pretend = 0, frame = 0
 2579              		@ frame_needed = 1, uses_anonymous_args = 0
 2580 0000 80B5     		push	{r7, lr}
 2581              		.cfi_def_cfa_offset 8
 2582              		.cfi_offset 7, -8
 2583              		.cfi_offset 14, -4
 2584 0002 00AF     		add	r7, sp, #0
 2585              		.cfi_def_cfa_register 7
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2586              		.loc 1 2881 0
 2587 0004 024B     		ldr	r3, .L173
 2588 0006 0022     		movs	r2, #0
 2589 0008 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** }
 2590              		.loc 1 2882 0
 2591 000a C046     		nop
 2592 000c BD46     		mov	sp, r7
 2593              		@ sp needed
 2594 000e 80BD     		pop	{r7, pc}
 2595              	.L174:
 2596              		.align	2
 2597              	.L173:
 2598 0010 18E000E0 		.word	-536813544
 2599              		.cfi_endproc
 2600              	.LFE48:
 2601              		.size	CySysTickClear, .-CySysTickClear
 2602              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2603              		.align	2
 2604              		.global	CySysTickSetCallback
 2605              		.code	16
 2606              		.thumb_func
 2607              		.type	CySysTickSetCallback, %function
 2608              	CySysTickSetCallback:
 2609              	.LFB49:
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 98


2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
 2610              		.loc 1 2915 0
 2611              		.cfi_startproc
 2612              		@ args = 0, pretend = 0, frame = 16
 2613              		@ frame_needed = 1, uses_anonymous_args = 0
 2614 0000 80B5     		push	{r7, lr}
 2615              		.cfi_def_cfa_offset 8
 2616              		.cfi_offset 7, -8
 2617              		.cfi_offset 14, -4
 2618 0002 84B0     		sub	sp, sp, #16
 2619              		.cfi_def_cfa_offset 24
 2620 0004 00AF     		add	r7, sp, #0
 2621              		.cfi_def_cfa_register 7
 2622 0006 7860     		str	r0, [r7, #4]
 2623 0008 3960     		str	r1, [r7]
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2624              		.loc 1 2918 0
 2625 000a 074B     		ldr	r3, .L177
 2626 000c 7A68     		ldr	r2, [r7, #4]
 2627 000e 9200     		lsls	r2, r2, #2
 2628 0010 D358     		ldr	r3, [r2, r3]
 2629 0012 FB60     		str	r3, [r7, #12]
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2630              		.loc 1 2919 0
 2631 0014 044B     		ldr	r3, .L177
 2632 0016 7A68     		ldr	r2, [r7, #4]
 2633 0018 9200     		lsls	r2, r2, #2
 2634 001a 3968     		ldr	r1, [r7]
 2635 001c D150     		str	r1, [r2, r3]
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2636              		.loc 1 2920 0
 2637 001e FB68     		ldr	r3, [r7, #12]
2921:Generated_Source\PSoC4/CyLib.c **** }
 2638              		.loc 1 2921 0
 2639 0020 1800     		movs	r0, r3
 2640 0022 BD46     		mov	sp, r7
 2641 0024 04B0     		add	sp, sp, #16
 2642              		@ sp needed
 2643 0026 80BD     		pop	{r7, pc}
 2644              	.L178:
 2645              		.align	2
 2646              	.L177:
 2647 0028 00000000 		.word	CySysTickCallbacks
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 99


 2648              		.cfi_endproc
 2649              	.LFE49:
 2650              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2651              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2652              		.align	2
 2653              		.global	CySysTickGetCallback
 2654              		.code	16
 2655              		.thumb_func
 2656              		.type	CySysTickGetCallback, %function
 2657              	CySysTickGetCallback:
 2658              	.LFB50:
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
 2659              		.loc 1 2939 0
 2660              		.cfi_startproc
 2661              		@ args = 0, pretend = 0, frame = 8
 2662              		@ frame_needed = 1, uses_anonymous_args = 0
 2663 0000 80B5     		push	{r7, lr}
 2664              		.cfi_def_cfa_offset 8
 2665              		.cfi_offset 7, -8
 2666              		.cfi_offset 14, -4
 2667 0002 82B0     		sub	sp, sp, #8
 2668              		.cfi_def_cfa_offset 16
 2669 0004 00AF     		add	r7, sp, #0
 2670              		.cfi_def_cfa_register 7
 2671 0006 7860     		str	r0, [r7, #4]
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2672              		.loc 1 2940 0
 2673 0008 034B     		ldr	r3, .L181
 2674 000a 7A68     		ldr	r2, [r7, #4]
 2675 000c 9200     		lsls	r2, r2, #2
 2676 000e D358     		ldr	r3, [r2, r3]
2941:Generated_Source\PSoC4/CyLib.c **** }
 2677              		.loc 1 2941 0
 2678 0010 1800     		movs	r0, r3
 2679 0012 BD46     		mov	sp, r7
 2680 0014 02B0     		add	sp, sp, #8
 2681              		@ sp needed
 2682 0016 80BD     		pop	{r7, pc}
 2683              	.L182:
 2684              		.align	2
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 100


 2685              	.L181:
 2686 0018 00000000 		.word	CySysTickCallbacks
 2687              		.cfi_endproc
 2688              	.LFE50:
 2689              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2690              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2691              		.align	2
 2692              		.code	16
 2693              		.thumb_func
 2694              		.type	CySysTickServiceCallbacks, %function
 2695              	CySysTickServiceCallbacks:
 2696              	.LFB51:
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 2697              		.loc 1 2952 0
 2698              		.cfi_startproc
 2699              		@ args = 0, pretend = 0, frame = 8
 2700              		@ frame_needed = 1, uses_anonymous_args = 0
 2701 0000 80B5     		push	{r7, lr}
 2702              		.cfi_def_cfa_offset 8
 2703              		.cfi_offset 7, -8
 2704              		.cfi_offset 14, -4
 2705 0002 82B0     		sub	sp, sp, #8
 2706              		.cfi_def_cfa_offset 16
 2707 0004 00AF     		add	r7, sp, #0
 2708              		.cfi_def_cfa_register 7
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2709              		.loc 1 2956 0
 2710 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2711 000a 0300     		movs	r3, r0
 2712 000c 012B     		cmp	r3, #1
 2713 000e 13D1     		bne	.L188
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2714              		.loc 1 2958 0
 2715 0010 0023     		movs	r3, #0
 2716 0012 7B60     		str	r3, [r7, #4]
 2717 0014 0DE0     		b	.L185
 2718              	.L187:
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2719              		.loc 1 2960 0
 2720 0016 0A4B     		ldr	r3, .L189
 2721 0018 7A68     		ldr	r2, [r7, #4]
 2722 001a 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 101


 2723 001c D358     		ldr	r3, [r2, r3]
 2724 001e 002B     		cmp	r3, #0
 2725 0020 04D0     		beq	.L186
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2726              		.loc 1 2962 0
 2727 0022 074B     		ldr	r3, .L189
 2728 0024 7A68     		ldr	r2, [r7, #4]
 2729 0026 9200     		lsls	r2, r2, #2
 2730 0028 D358     		ldr	r3, [r2, r3]
 2731 002a 9847     		blx	r3
 2732              	.L186:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2733              		.loc 1 2958 0 discriminator 2
 2734 002c 7B68     		ldr	r3, [r7, #4]
 2735 002e 0133     		adds	r3, r3, #1
 2736 0030 7B60     		str	r3, [r7, #4]
 2737              	.L185:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2738              		.loc 1 2958 0 is_stmt 0 discriminator 1
 2739 0032 7B68     		ldr	r3, [r7, #4]
 2740 0034 042B     		cmp	r3, #4
 2741 0036 EED9     		bls	.L187
 2742              	.L188:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 2743              		.loc 1 2966 0 is_stmt 1
 2744 0038 C046     		nop
 2745 003a BD46     		mov	sp, r7
 2746 003c 02B0     		add	sp, sp, #8
 2747              		@ sp needed
 2748 003e 80BD     		pop	{r7, pc}
 2749              	.L190:
 2750              		.align	2
 2751              	.L189:
 2752 0040 00000000 		.word	CySysTickCallbacks
 2753              		.cfi_endproc
 2754              	.LFE51:
 2755              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2756              		.section	.text.CyGetUniqueId,"ax",%progbits
 2757              		.align	2
 2758              		.global	CyGetUniqueId
 2759              		.code	16
 2760              		.thumb_func
 2761              		.type	CyGetUniqueId, %function
 2762              	CyGetUniqueId:
 2763              	.LFB52:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 102


2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 2764              		.loc 1 2984 0
 2765              		.cfi_startproc
 2766              		@ args = 0, pretend = 0, frame = 8
 2767              		@ frame_needed = 1, uses_anonymous_args = 0
 2768 0000 80B5     		push	{r7, lr}
 2769              		.cfi_def_cfa_offset 8
 2770              		.cfi_offset 7, -8
 2771              		.cfi_offset 14, -4
 2772 0002 82B0     		sub	sp, sp, #8
 2773              		.cfi_def_cfa_offset 16
 2774 0004 00AF     		add	r7, sp, #0
 2775              		.cfi_def_cfa_register 7
 2776 0006 7860     		str	r0, [r7, #4]
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2777              		.loc 1 2986 0
 2778 0008 254B     		ldr	r3, .L192
 2779 000a 1B78     		ldrb	r3, [r3]
 2780 000c DBB2     		uxtb	r3, r3
 2781 000e 1A00     		movs	r2, r3
 2782 0010 7B68     		ldr	r3, [r7, #4]
 2783 0012 1A60     		str	r2, [r3]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2784              		.loc 1 2987 0
 2785 0014 234B     		ldr	r3, .L192+4
 2786 0016 1B78     		ldrb	r3, [r3]
 2787 0018 DBB2     		uxtb	r3, r3
 2788 001a 1A02     		lsls	r2, r3, #8
 2789 001c 7B68     		ldr	r3, [r7, #4]
 2790 001e 1B68     		ldr	r3, [r3]
 2791 0020 1A43     		orrs	r2, r3
 2792 0022 7B68     		ldr	r3, [r7, #4]
 2793 0024 1A60     		str	r2, [r3]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2794              		.loc 1 2988 0
 2795 0026 204B     		ldr	r3, .L192+8
 2796 0028 1B78     		ldrb	r3, [r3]
 2797 002a DBB2     		uxtb	r3, r3
 2798 002c 1A04     		lsls	r2, r3, #16
 2799 002e 7B68     		ldr	r3, [r7, #4]
 2800 0030 1B68     		ldr	r3, [r3]
 2801 0032 1A43     		orrs	r2, r3
 2802 0034 7B68     		ldr	r3, [r7, #4]
 2803 0036 1A60     		str	r2, [r3]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2804              		.loc 1 2989 0
 2805 0038 1C4B     		ldr	r3, .L192+12
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 103


 2806 003a 1B78     		ldrb	r3, [r3]
 2807 003c DBB2     		uxtb	r3, r3
 2808 003e 1A06     		lsls	r2, r3, #24
 2809 0040 7B68     		ldr	r3, [r7, #4]
 2810 0042 1B68     		ldr	r3, [r3]
 2811 0044 1A43     		orrs	r2, r3
 2812 0046 7B68     		ldr	r3, [r7, #4]
 2813 0048 1A60     		str	r2, [r3]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2814              		.loc 1 2991 0
 2815 004a 7B68     		ldr	r3, [r7, #4]
 2816 004c 0433     		adds	r3, r3, #4
 2817 004e 184A     		ldr	r2, .L192+16
 2818 0050 1278     		ldrb	r2, [r2]
 2819 0052 D2B2     		uxtb	r2, r2
 2820 0054 1A60     		str	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2821              		.loc 1 2992 0
 2822 0056 174B     		ldr	r3, .L192+20
 2823 0058 1B78     		ldrb	r3, [r3]
 2824 005a DBB2     		uxtb	r3, r3
 2825 005c 1902     		lsls	r1, r3, #8
 2826 005e 7B68     		ldr	r3, [r7, #4]
 2827 0060 0433     		adds	r3, r3, #4
 2828 0062 7A68     		ldr	r2, [r7, #4]
 2829 0064 0432     		adds	r2, r2, #4
 2830 0066 1268     		ldr	r2, [r2]
 2831 0068 0A43     		orrs	r2, r1
 2832 006a 1A60     		str	r2, [r3]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2833              		.loc 1 2993 0
 2834 006c 124B     		ldr	r3, .L192+24
 2835 006e 1B78     		ldrb	r3, [r3]
 2836 0070 DBB2     		uxtb	r3, r3
 2837 0072 1904     		lsls	r1, r3, #16
 2838 0074 7B68     		ldr	r3, [r7, #4]
 2839 0076 0433     		adds	r3, r3, #4
 2840 0078 7A68     		ldr	r2, [r7, #4]
 2841 007a 0432     		adds	r2, r2, #4
 2842 007c 1268     		ldr	r2, [r2]
 2843 007e 0A43     		orrs	r2, r1
 2844 0080 1A60     		str	r2, [r3]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2845              		.loc 1 2994 0
 2846 0082 0E4B     		ldr	r3, .L192+28
 2847 0084 1B78     		ldrb	r3, [r3]
 2848 0086 DBB2     		uxtb	r3, r3
 2849 0088 1906     		lsls	r1, r3, #24
 2850 008a 7B68     		ldr	r3, [r7, #4]
 2851 008c 0433     		adds	r3, r3, #4
 2852 008e 7A68     		ldr	r2, [r7, #4]
 2853 0090 0432     		adds	r2, r2, #4
 2854 0092 1268     		ldr	r2, [r2]
 2855 0094 0A43     		orrs	r2, r1
 2856 0096 1A60     		str	r2, [r3]
2995:Generated_Source\PSoC4/CyLib.c **** #else
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 104


2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2857              		.loc 1 3006 0
 2858 0098 C046     		nop
 2859 009a BD46     		mov	sp, r7
 2860 009c 02B0     		add	sp, sp, #8
 2861              		@ sp needed
 2862 009e 80BD     		pop	{r7, pc}
 2863              	.L193:
 2864              		.align	2
 2865              	.L192:
 2866 00a0 78F1FF0F 		.word	268431736
 2867 00a4 79F1FF0F 		.word	268431737
 2868 00a8 7AF1FF0F 		.word	268431738
 2869 00ac 7BF1FF0F 		.word	268431739
 2870 00b0 7CF1FF0F 		.word	268431740
 2871 00b4 7DF1FF0F 		.word	268431741
 2872 00b8 7EF1FF0F 		.word	268431742
 2873 00bc 7FF1FF0F 		.word	268431743
 2874              		.cfi_endproc
 2875              	.LFE52:
 2876              		.size	CyGetUniqueId, .-CyGetUniqueId
 2877              		.text
 2878              	.Letext0:
 2879              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2880              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2881              		.section	.debug_info,"",%progbits
 2882              	.Ldebug_info0:
 2883 0000 DA090000 		.4byte	0x9da
 2884 0004 0400     		.2byte	0x4
 2885 0006 00000000 		.4byte	.Ldebug_abbrev0
 2886 000a 04       		.byte	0x4
 2887 000b 01       		.uleb128 0x1
 2888 000c 52030000 		.4byte	.LASF109
 2889 0010 0C       		.byte	0xc
 2890 0011 9D060000 		.4byte	.LASF110
 2891 0015 67000000 		.4byte	.LASF111
 2892 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2893 001d 00000000 		.4byte	0
 2894 0021 00000000 		.4byte	.Ldebug_line0
 2895 0025 02       		.uleb128 0x2
 2896 0026 01       		.byte	0x1
 2897 0027 06       		.byte	0x6
 2898 0028 26010000 		.4byte	.LASF0
 2899 002c 02       		.uleb128 0x2
 2900 002d 01       		.byte	0x1
 2901 002e 08       		.byte	0x8
 2902 002f 1A050000 		.4byte	.LASF1
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 105


 2903 0033 02       		.uleb128 0x2
 2904 0034 02       		.byte	0x2
 2905 0035 05       		.byte	0x5
 2906 0036 28050000 		.4byte	.LASF2
 2907 003a 02       		.uleb128 0x2
 2908 003b 02       		.byte	0x2
 2909 003c 07       		.byte	0x7
 2910 003d F3020000 		.4byte	.LASF3
 2911 0041 02       		.uleb128 0x2
 2912 0042 04       		.byte	0x4
 2913 0043 05       		.byte	0x5
 2914 0044 65010000 		.4byte	.LASF4
 2915 0048 02       		.uleb128 0x2
 2916 0049 04       		.byte	0x4
 2917 004a 07       		.byte	0x7
 2918 004b 7D020000 		.4byte	.LASF5
 2919 004f 02       		.uleb128 0x2
 2920 0050 08       		.byte	0x8
 2921 0051 05       		.byte	0x5
 2922 0052 18010000 		.4byte	.LASF6
 2923 0056 02       		.uleb128 0x2
 2924 0057 08       		.byte	0x8
 2925 0058 07       		.byte	0x7
 2926 0059 B2000000 		.4byte	.LASF7
 2927 005d 03       		.uleb128 0x3
 2928 005e 04       		.byte	0x4
 2929 005f 05       		.byte	0x5
 2930 0060 696E7400 		.ascii	"int\000"
 2931 0064 02       		.uleb128 0x2
 2932 0065 04       		.byte	0x4
 2933 0066 07       		.byte	0x7
 2934 0067 61020000 		.4byte	.LASF8
 2935 006b 04       		.uleb128 0x4
 2936 006c 85010000 		.4byte	.LASF9
 2937 0070 02       		.byte	0x2
 2938 0071 B901     		.2byte	0x1b9
 2939 0073 2C000000 		.4byte	0x2c
 2940 0077 04       		.uleb128 0x4
 2941 0078 0F000000 		.4byte	.LASF10
 2942 007c 02       		.byte	0x2
 2943 007d BA01     		.2byte	0x1ba
 2944 007f 3A000000 		.4byte	0x3a
 2945 0083 04       		.uleb128 0x4
 2946 0084 C5010000 		.4byte	.LASF11
 2947 0088 02       		.byte	0x2
 2948 0089 BB01     		.2byte	0x1bb
 2949 008b 48000000 		.4byte	0x48
 2950 008f 02       		.uleb128 0x2
 2951 0090 04       		.byte	0x4
 2952 0091 04       		.byte	0x4
 2953 0092 C1040000 		.4byte	.LASF12
 2954 0096 02       		.uleb128 0x2
 2955 0097 08       		.byte	0x8
 2956 0098 04       		.byte	0x4
 2957 0099 A1010000 		.4byte	.LASF13
 2958 009d 02       		.uleb128 0x2
 2959 009e 01       		.byte	0x1
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 106


 2960 009f 08       		.byte	0x8
 2961 00a0 7C050000 		.4byte	.LASF14
 2962 00a4 04       		.uleb128 0x4
 2963 00a5 83060000 		.4byte	.LASF15
 2964 00a9 02       		.byte	0x2
 2965 00aa 5B02     		.2byte	0x25b
 2966 00ac 48000000 		.4byte	0x48
 2967 00b0 04       		.uleb128 0x4
 2968 00b1 04050000 		.4byte	.LASF16
 2969 00b5 02       		.byte	0x2
 2970 00b6 6302     		.2byte	0x263
 2971 00b8 BC000000 		.4byte	0xbc
 2972 00bc 05       		.uleb128 0x5
 2973 00bd 6B000000 		.4byte	0x6b
 2974 00c1 04       		.uleb128 0x4
 2975 00c2 07040000 		.4byte	.LASF17
 2976 00c6 02       		.byte	0x2
 2977 00c7 6502     		.2byte	0x265
 2978 00c9 CD000000 		.4byte	0xcd
 2979 00cd 05       		.uleb128 0x5
 2980 00ce 83000000 		.4byte	0x83
 2981 00d2 04       		.uleb128 0x4
 2982 00d3 81050000 		.4byte	.LASF18
 2983 00d7 02       		.byte	0x2
 2984 00d8 7502     		.2byte	0x275
 2985 00da DE000000 		.4byte	0xde
 2986 00de 06       		.uleb128 0x6
 2987 00df 04       		.byte	0x4
 2988 00e0 E4000000 		.4byte	0xe4
 2989 00e4 07       		.uleb128 0x7
 2990 00e5 02       		.uleb128 0x2
 2991 00e6 08       		.byte	0x8
 2992 00e7 04       		.byte	0x4
 2993 00e8 55040000 		.4byte	.LASF19
 2994 00ec 02       		.uleb128 0x2
 2995 00ed 04       		.byte	0x4
 2996 00ee 07       		.byte	0x7
 2997 00ef 29040000 		.4byte	.LASF20
 2998 00f3 08       		.uleb128 0x8
 2999 00f4 D6040000 		.4byte	.LASF21
 3000 00f8 03       		.byte	0x3
 3001 00f9 F5       		.byte	0xf5
 3002 00fa DE000000 		.4byte	0xde
 3003 00fe 09       		.uleb128 0x9
 3004 00ff 8C060000 		.4byte	.LASF22
 3005 0103 01       		.byte	0x1
 3006 0104 6B       		.byte	0x6b
 3007 0105 00000000 		.4byte	.LFB2
 3008 0109 1C000000 		.4byte	.LFE2-.LFB2
 3009 010d 01       		.uleb128 0x1
 3010 010e 9C       		.byte	0x9c
 3011 010f 09       		.uleb128 0x9
 3012 0110 AA020000 		.4byte	.LASF23
 3013 0114 01       		.byte	0x1
 3014 0115 8B       		.byte	0x8b
 3015 0116 00000000 		.4byte	.LFB3
 3016 011a 1C000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 107


 3017 011e 01       		.uleb128 0x1
 3018 011f 9C       		.byte	0x9c
 3019 0120 0A       		.uleb128 0xa
 3020 0121 1F000000 		.4byte	.LASF26
 3021 0125 01       		.byte	0x1
 3022 0126 AD01     		.2byte	0x1ad
 3023 0128 00000000 		.4byte	.LFB4
 3024 012c 48000000 		.4byte	.LFE4-.LFB4
 3025 0130 01       		.uleb128 0x1
 3026 0131 9C       		.byte	0x9c
 3027 0132 64010000 		.4byte	0x164
 3028 0136 0B       		.uleb128 0xb
 3029 0137 50050000 		.4byte	.LASF28
 3030 013b 01       		.byte	0x1
 3031 013c AD01     		.2byte	0x1ad
 3032 013e 83000000 		.4byte	0x83
 3033 0142 02       		.uleb128 0x2
 3034 0143 91       		.byte	0x91
 3035 0144 64       		.sleb128 -28
 3036 0145 0C       		.uleb128 0xc
 3037 0146 43010000 		.4byte	.LASF24
 3038 014a 01       		.byte	0x1
 3039 014b AF01     		.2byte	0x1af
 3040 014d 6B000000 		.4byte	0x6b
 3041 0151 02       		.uleb128 0x2
 3042 0152 91       		.byte	0x91
 3043 0153 6F       		.sleb128 -17
 3044 0154 0C       		.uleb128 0xc
 3045 0155 C9060000 		.4byte	.LASF25
 3046 0159 01       		.byte	0x1
 3047 015a B001     		.2byte	0x1b0
 3048 015c 83000000 		.4byte	0x83
 3049 0160 02       		.uleb128 0x2
 3050 0161 91       		.byte	0x91
 3051 0162 68       		.sleb128 -24
 3052 0163 00       		.byte	0
 3053 0164 0D       		.uleb128 0xd
 3054 0165 F2030000 		.4byte	.LASF27
 3055 0169 01       		.byte	0x1
 3056 016a D901     		.2byte	0x1d9
 3057 016c 00000000 		.4byte	.LFB5
 3058 0170 50000000 		.4byte	.LFE5-.LFB5
 3059 0174 01       		.uleb128 0x1
 3060 0175 9C       		.byte	0x9c
 3061 0176 8A010000 		.4byte	0x18a
 3062 017a 0B       		.uleb128 0xb
 3063 017b 9A010000 		.4byte	.LASF29
 3064 017f 01       		.byte	0x1
 3065 0180 D901     		.2byte	0x1d9
 3066 0182 83000000 		.4byte	0x83
 3067 0186 02       		.uleb128 0x2
 3068 0187 91       		.byte	0x91
 3069 0188 74       		.sleb128 -12
 3070 0189 00       		.byte	0
 3071 018a 0E       		.uleb128 0xe
 3072 018b E7010000 		.4byte	.LASF37
 3073 018f 01       		.byte	0x1
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 108


 3074 0190 FE01     		.2byte	0x1fe
 3075 0192 83000000 		.4byte	0x83
 3076 0196 00000000 		.4byte	.LFB6
 3077 019a 34000000 		.4byte	.LFE6-.LFB6
 3078 019e 01       		.uleb128 0x1
 3079 019f 9C       		.byte	0x9c
 3080 01a0 C3010000 		.4byte	0x1c3
 3081 01a4 0C       		.uleb128 0xc
 3082 01a5 43010000 		.4byte	.LASF24
 3083 01a9 01       		.byte	0x1
 3084 01aa 0002     		.2byte	0x200
 3085 01ac 6B000000 		.4byte	0x6b
 3086 01b0 02       		.uleb128 0x2
 3087 01b1 91       		.byte	0x91
 3088 01b2 6F       		.sleb128 -17
 3089 01b3 0C       		.uleb128 0xc
 3090 01b4 69040000 		.4byte	.LASF30
 3091 01b8 01       		.byte	0x1
 3092 01b9 0102     		.2byte	0x201
 3093 01bb 83000000 		.4byte	0x83
 3094 01bf 02       		.uleb128 0x2
 3095 01c0 91       		.byte	0x91
 3096 01c1 68       		.sleb128 -24
 3097 01c2 00       		.byte	0
 3098 01c3 0A       		.uleb128 0xa
 3099 01c4 9E050000 		.4byte	.LASF31
 3100 01c8 01       		.byte	0x1
 3101 01c9 3502     		.2byte	0x235
 3102 01cb 00000000 		.4byte	.LFB7
 3103 01cf 48000000 		.4byte	.LFE7-.LFB7
 3104 01d3 01       		.uleb128 0x1
 3105 01d4 9C       		.byte	0x9c
 3106 01d5 F8010000 		.4byte	0x1f8
 3107 01d9 0B       		.uleb128 0xb
 3108 01da 67060000 		.4byte	.LASF32
 3109 01de 01       		.byte	0x1
 3110 01df 3502     		.2byte	0x235
 3111 01e1 83000000 		.4byte	0x83
 3112 01e5 02       		.uleb128 0x2
 3113 01e6 91       		.byte	0x91
 3114 01e7 64       		.sleb128 -28
 3115 01e8 0C       		.uleb128 0xc
 3116 01e9 43010000 		.4byte	.LASF24
 3117 01ed 01       		.byte	0x1
 3118 01ee 3702     		.2byte	0x237
 3119 01f0 6B000000 		.4byte	0x6b
 3120 01f4 02       		.uleb128 0x2
 3121 01f5 91       		.byte	0x91
 3122 01f6 6F       		.sleb128 -17
 3123 01f7 00       		.byte	0
 3124 01f8 0A       		.uleb128 0xa
 3125 01f9 3D030000 		.4byte	.LASF33
 3126 01fd 01       		.byte	0x1
 3127 01fe 6F02     		.2byte	0x26f
 3128 0200 00000000 		.4byte	.LFB8
 3129 0204 9C000000 		.4byte	.LFE8-.LFB8
 3130 0208 01       		.uleb128 0x1
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 109


 3131 0209 9C       		.byte	0x9c
 3132 020a 4B020000 		.4byte	0x24b
 3133 020e 0B       		.uleb128 0xb
 3134 020f 32010000 		.4byte	.LASF34
 3135 0213 01       		.byte	0x1
 3136 0214 6F02     		.2byte	0x26f
 3137 0216 83000000 		.4byte	0x83
 3138 021a 02       		.uleb128 0x2
 3139 021b 91       		.byte	0x91
 3140 021c 4C       		.sleb128 -52
 3141 021d 0C       		.uleb128 0xc
 3142 021e C9000000 		.4byte	.LASF35
 3143 0222 01       		.byte	0x1
 3144 0223 7202     		.2byte	0x272
 3145 0225 5B020000 		.4byte	0x25b
 3146 0229 02       		.uleb128 0x2
 3147 022a 91       		.byte	0x91
 3148 022b 64       		.sleb128 -28
 3149 022c 0C       		.uleb128 0xc
 3150 022d 7B010000 		.4byte	.LASF36
 3151 0231 01       		.byte	0x1
 3152 0232 7302     		.2byte	0x273
 3153 0234 70020000 		.4byte	0x270
 3154 0238 02       		.uleb128 0x2
 3155 0239 91       		.byte	0x91
 3156 023a 54       		.sleb128 -44
 3157 023b 0C       		.uleb128 0xc
 3158 023c 43010000 		.4byte	.LASF24
 3159 0240 01       		.byte	0x1
 3160 0241 8402     		.2byte	0x284
 3161 0243 6B000000 		.4byte	0x6b
 3162 0247 02       		.uleb128 0x2
 3163 0248 91       		.byte	0x91
 3164 0249 6F       		.sleb128 -17
 3165 024a 00       		.byte	0
 3166 024b 0F       		.uleb128 0xf
 3167 024c CD000000 		.4byte	0xcd
 3168 0250 5B020000 		.4byte	0x25b
 3169 0254 10       		.uleb128 0x10
 3170 0255 EC000000 		.4byte	0xec
 3171 0259 01       		.byte	0x1
 3172 025a 00       		.byte	0
 3173 025b 05       		.uleb128 0x5
 3174 025c 4B020000 		.4byte	0x24b
 3175 0260 0F       		.uleb128 0xf
 3176 0261 CD000000 		.4byte	0xcd
 3177 0265 70020000 		.4byte	0x270
 3178 0269 10       		.uleb128 0x10
 3179 026a EC000000 		.4byte	0xec
 3180 026e 03       		.byte	0x3
 3181 026f 00       		.byte	0
 3182 0270 05       		.uleb128 0x5
 3183 0271 60020000 		.4byte	0x260
 3184 0275 0E       		.uleb128 0xe
 3185 0276 5A050000 		.4byte	.LASF38
 3186 027a 01       		.byte	0x1
 3187 027b 0304     		.2byte	0x403
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 110


 3188 027d A4000000 		.4byte	0xa4
 3189 0281 00000000 		.4byte	.LFB9
 3190 0285 74000000 		.4byte	.LFE9-.LFB9
 3191 0289 01       		.uleb128 0x1
 3192 028a 9C       		.byte	0x9c
 3193 028b AE020000 		.4byte	0x2ae
 3194 028f 0B       		.uleb128 0xb
 3195 0290 5D060000 		.4byte	.LASF39
 3196 0294 01       		.byte	0x1
 3197 0295 0304     		.2byte	0x403
 3198 0297 83000000 		.4byte	0x83
 3199 029b 02       		.uleb128 0x2
 3200 029c 91       		.byte	0x91
 3201 029d 6C       		.sleb128 -20
 3202 029e 0C       		.uleb128 0xc
 3203 029f 1C040000 		.4byte	.LASF40
 3204 02a3 01       		.byte	0x1
 3205 02a4 0504     		.2byte	0x405
 3206 02a6 A4000000 		.4byte	0xa4
 3207 02aa 02       		.uleb128 0x2
 3208 02ab 91       		.byte	0x91
 3209 02ac 74       		.sleb128 -12
 3210 02ad 00       		.byte	0
 3211 02ae 11       		.uleb128 0x11
 3212 02af 3F060000 		.4byte	.LASF41
 3213 02b3 01       		.byte	0x1
 3214 02b4 9104     		.2byte	0x491
 3215 02b6 00000000 		.4byte	.LFB10
 3216 02ba 30000000 		.4byte	.LFE10-.LFB10
 3217 02be 01       		.uleb128 0x1
 3218 02bf 9C       		.byte	0x9c
 3219 02c0 12       		.uleb128 0x12
 3220 02c1 CC010000 		.4byte	.LASF42
 3221 02c5 01       		.byte	0x1
 3222 02c6 B304     		.2byte	0x4b3
 3223 02c8 83000000 		.4byte	0x83
 3224 02cc 00000000 		.4byte	.LFB11
 3225 02d0 20000000 		.4byte	.LFE11-.LFB11
 3226 02d4 01       		.uleb128 0x1
 3227 02d5 9C       		.byte	0x9c
 3228 02d6 EA020000 		.4byte	0x2ea
 3229 02da 0C       		.uleb128 0xc
 3230 02db FD060000 		.4byte	.LASF43
 3231 02df 01       		.byte	0x1
 3232 02e0 B504     		.2byte	0x4b5
 3233 02e2 83000000 		.4byte	0x83
 3234 02e6 02       		.uleb128 0x2
 3235 02e7 91       		.byte	0x91
 3236 02e8 74       		.sleb128 -12
 3237 02e9 00       		.byte	0
 3238 02ea 0A       		.uleb128 0xa
 3239 02eb 6F060000 		.4byte	.LASF44
 3240 02ef 01       		.byte	0x1
 3241 02f0 E204     		.2byte	0x4e2
 3242 02f2 00000000 		.4byte	.LFB12
 3243 02f6 58000000 		.4byte	.LFE12-.LFB12
 3244 02fa 01       		.uleb128 0x1
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 111


 3245 02fb 9C       		.byte	0x9c
 3246 02fc 1F030000 		.4byte	0x31f
 3247 0300 0B       		.uleb128 0xb
 3248 0301 67060000 		.4byte	.LASF32
 3249 0305 01       		.byte	0x1
 3250 0306 E204     		.2byte	0x4e2
 3251 0308 83000000 		.4byte	0x83
 3252 030c 02       		.uleb128 0x2
 3253 030d 91       		.byte	0x91
 3254 030e 64       		.sleb128 -28
 3255 030f 0C       		.uleb128 0xc
 3256 0310 43010000 		.4byte	.LASF24
 3257 0314 01       		.byte	0x1
 3258 0315 E404     		.2byte	0x4e4
 3259 0317 6B000000 		.4byte	0x6b
 3260 031b 02       		.uleb128 0x2
 3261 031c 91       		.byte	0x91
 3262 031d 6F       		.sleb128 -17
 3263 031e 00       		.byte	0
 3264 031f 0A       		.uleb128 0xa
 3265 0320 C7040000 		.4byte	.LASF45
 3266 0324 01       		.byte	0x1
 3267 0325 4608     		.2byte	0x846
 3268 0327 00000000 		.4byte	.LFB13
 3269 032b 64000000 		.4byte	.LFE13-.LFB13
 3270 032f 01       		.uleb128 0x1
 3271 0330 9C       		.byte	0x9c
 3272 0331 45030000 		.4byte	0x345
 3273 0335 0B       		.uleb128 0xb
 3274 0336 09050000 		.4byte	.LASF46
 3275 033a 01       		.byte	0x1
 3276 033b 4608     		.2byte	0x846
 3277 033d 83000000 		.4byte	0x83
 3278 0341 02       		.uleb128 0x2
 3279 0342 91       		.byte	0x91
 3280 0343 74       		.sleb128 -12
 3281 0344 00       		.byte	0
 3282 0345 11       		.uleb128 0x11
 3283 0346 20060000 		.4byte	.LASF47
 3284 034a 01       		.byte	0x1
 3285 034b 6408     		.2byte	0x864
 3286 034d 00000000 		.4byte	.LFB14
 3287 0351 2C000000 		.4byte	.LFE14-.LFB14
 3288 0355 01       		.uleb128 0x1
 3289 0356 9C       		.byte	0x9c
 3290 0357 13       		.uleb128 0x13
 3291 0358 8F020000 		.4byte	.LASF87
 3292 035c 01       		.byte	0x1
 3293 035d 7608     		.2byte	0x876
 3294 035f 83000000 		.4byte	0x83
 3295 0363 00000000 		.4byte	.LFB15
 3296 0367 18000000 		.4byte	.LFE15-.LFB15
 3297 036b 01       		.uleb128 0x1
 3298 036c 9C       		.byte	0x9c
 3299 036d 11       		.uleb128 0x11
 3300 036e AE010000 		.4byte	.LASF48
 3301 0372 01       		.byte	0x1
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 112


 3302 0373 8608     		.2byte	0x886
 3303 0375 00000000 		.4byte	.LFB16
 3304 0379 14000000 		.4byte	.LFE16-.LFB16
 3305 037d 01       		.uleb128 0x1
 3306 037e 9C       		.byte	0x9c
 3307 037f 12       		.uleb128 0x12
 3308 0380 DF020000 		.4byte	.LASF49
 3309 0384 01       		.byte	0x1
 3310 0385 A008     		.2byte	0x8a0
 3311 0387 83000000 		.4byte	0x83
 3312 038b 00000000 		.4byte	.LFB17
 3313 038f 30000000 		.4byte	.LFE17-.LFB17
 3314 0393 01       		.uleb128 0x1
 3315 0394 9C       		.byte	0x9c
 3316 0395 B8030000 		.4byte	0x3b8
 3317 0399 0B       		.uleb128 0xb
 3318 039a 75050000 		.4byte	.LASF50
 3319 039e 01       		.byte	0x1
 3320 039f A008     		.2byte	0x8a0
 3321 03a1 83000000 		.4byte	0x83
 3322 03a5 02       		.uleb128 0x2
 3323 03a6 91       		.byte	0x91
 3324 03a7 6C       		.sleb128 -20
 3325 03a8 0C       		.uleb128 0xc
 3326 03a9 1C040000 		.4byte	.LASF40
 3327 03ad 01       		.byte	0x1
 3328 03ae A208     		.2byte	0x8a2
 3329 03b0 83000000 		.4byte	0x83
 3330 03b4 02       		.uleb128 0x2
 3331 03b5 91       		.byte	0x91
 3332 03b6 74       		.sleb128 -12
 3333 03b7 00       		.byte	0
 3334 03b8 12       		.uleb128 0x12
 3335 03b9 59000000 		.4byte	.LASF51
 3336 03bd 01       		.byte	0x1
 3337 03be B708     		.2byte	0x8b7
 3338 03c0 83000000 		.4byte	0x83
 3339 03c4 00000000 		.4byte	.LFB18
 3340 03c8 24000000 		.4byte	.LFE18-.LFB18
 3341 03cc 01       		.uleb128 0x1
 3342 03cd 9C       		.byte	0x9c
 3343 03ce E2030000 		.4byte	0x3e2
 3344 03d2 0C       		.uleb128 0xc
 3345 03d3 16000000 		.4byte	.LASF52
 3346 03d7 01       		.byte	0x1
 3347 03d8 B908     		.2byte	0x8b9
 3348 03da 83000000 		.4byte	0x83
 3349 03de 02       		.uleb128 0x2
 3350 03df 91       		.byte	0x91
 3351 03e0 74       		.sleb128 -12
 3352 03e1 00       		.byte	0
 3353 03e2 0D       		.uleb128 0xd
 3354 03e3 D4000000 		.4byte	.LASF53
 3355 03e7 01       		.byte	0x1
 3356 03e8 CE08     		.2byte	0x8ce
 3357 03ea 00000000 		.4byte	.LFB19
 3358 03ee 1C000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 113


 3359 03f2 01       		.uleb128 0x1
 3360 03f3 9C       		.byte	0x9c
 3361 03f4 08040000 		.4byte	0x408
 3362 03f8 0B       		.uleb128 0xb
 3363 03f9 E2010000 		.4byte	.LASF54
 3364 03fd 01       		.byte	0x1
 3365 03fe CE08     		.2byte	0x8ce
 3366 0400 83000000 		.4byte	0x83
 3367 0404 02       		.uleb128 0x2
 3368 0405 91       		.byte	0x91
 3369 0406 74       		.sleb128 -12
 3370 0407 00       		.byte	0
 3371 0408 0E       		.uleb128 0xe
 3372 0409 E0030000 		.4byte	.LASF55
 3373 040d 01       		.byte	0x1
 3374 040e E708     		.2byte	0x8e7
 3375 0410 D2000000 		.4byte	0xd2
 3376 0414 00000000 		.4byte	.LFB20
 3377 0418 48000000 		.4byte	.LFE20-.LFB20
 3378 041c 01       		.uleb128 0x1
 3379 041d 9C       		.byte	0x9c
 3380 041e 5F040000 		.4byte	0x45f
 3381 0422 0B       		.uleb128 0xb
 3382 0423 2D030000 		.4byte	.LASF56
 3383 0427 01       		.byte	0x1
 3384 0428 E708     		.2byte	0x8e7
 3385 042a 6B000000 		.4byte	0x6b
 3386 042e 02       		.uleb128 0x2
 3387 042f 91       		.byte	0x91
 3388 0430 6F       		.sleb128 -17
 3389 0431 0B       		.uleb128 0xb
 3390 0432 61040000 		.4byte	.LASF57
 3391 0436 01       		.byte	0x1
 3392 0437 E708     		.2byte	0x8e7
 3393 0439 D2000000 		.4byte	0xd2
 3394 043d 02       		.uleb128 0x2
 3395 043e 91       		.byte	0x91
 3396 043f 68       		.sleb128 -24
 3397 0440 0C       		.uleb128 0xc
 3398 0441 4B000000 		.4byte	.LASF58
 3399 0445 01       		.byte	0x1
 3400 0446 E908     		.2byte	0x8e9
 3401 0448 D2000000 		.4byte	0xd2
 3402 044c 02       		.uleb128 0x2
 3403 044d 91       		.byte	0x91
 3404 044e 70       		.sleb128 -16
 3405 044f 0C       		.uleb128 0xc
 3406 0450 00000000 		.4byte	.LASF59
 3407 0454 01       		.byte	0x1
 3408 0455 EA08     		.2byte	0x8ea
 3409 0457 5F040000 		.4byte	0x45f
 3410 045b 02       		.uleb128 0x2
 3411 045c 91       		.byte	0x91
 3412 045d 74       		.sleb128 -12
 3413 045e 00       		.byte	0
 3414 045f 06       		.uleb128 0x6
 3415 0460 04       		.byte	0x4
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 114


 3416 0461 D2000000 		.4byte	0xd2
 3417 0465 0E       		.uleb128 0xe
 3418 0466 3E050000 		.4byte	.LASF60
 3419 046a 01       		.byte	0x1
 3420 046b 0909     		.2byte	0x909
 3421 046d D2000000 		.4byte	0xd2
 3422 0471 00000000 		.4byte	.LFB21
 3423 0475 34000000 		.4byte	.LFE21-.LFB21
 3424 0479 01       		.uleb128 0x1
 3425 047a 9C       		.byte	0x9c
 3426 047b 9E040000 		.4byte	0x49e
 3427 047f 0B       		.uleb128 0xb
 3428 0480 2D030000 		.4byte	.LASF56
 3429 0484 01       		.byte	0x1
 3430 0485 0909     		.2byte	0x909
 3431 0487 6B000000 		.4byte	0x6b
 3432 048b 02       		.uleb128 0x2
 3433 048c 91       		.byte	0x91
 3434 048d 6F       		.sleb128 -17
 3435 048e 0C       		.uleb128 0xc
 3436 048f 00000000 		.4byte	.LASF59
 3437 0493 01       		.byte	0x1
 3438 0494 0B09     		.2byte	0x90b
 3439 0496 5F040000 		.4byte	0x45f
 3440 049a 02       		.uleb128 0x2
 3441 049b 91       		.byte	0x91
 3442 049c 74       		.sleb128 -12
 3443 049d 00       		.byte	0
 3444 049e 0E       		.uleb128 0xe
 3445 049f 1E030000 		.4byte	.LASF61
 3446 04a3 01       		.byte	0x1
 3447 04a4 1F09     		.2byte	0x91f
 3448 04a6 D2000000 		.4byte	0xd2
 3449 04aa 00000000 		.4byte	.LFB22
 3450 04ae 4C000000 		.4byte	.LFE22-.LFB22
 3451 04b2 01       		.uleb128 0x1
 3452 04b3 9C       		.byte	0x9c
 3453 04b4 F5040000 		.4byte	0x4f5
 3454 04b8 0B       		.uleb128 0xb
 3455 04b9 2D030000 		.4byte	.LASF56
 3456 04bd 01       		.byte	0x1
 3457 04be 1F09     		.2byte	0x91f
 3458 04c0 6B000000 		.4byte	0x6b
 3459 04c4 02       		.uleb128 0x2
 3460 04c5 91       		.byte	0x91
 3461 04c6 6F       		.sleb128 -17
 3462 04c7 0B       		.uleb128 0xb
 3463 04c8 61040000 		.4byte	.LASF57
 3464 04cc 01       		.byte	0x1
 3465 04cd 1F09     		.2byte	0x91f
 3466 04cf D2000000 		.4byte	0xd2
 3467 04d3 02       		.uleb128 0x2
 3468 04d4 91       		.byte	0x91
 3469 04d5 68       		.sleb128 -24
 3470 04d6 0C       		.uleb128 0xc
 3471 04d7 4B000000 		.4byte	.LASF58
 3472 04db 01       		.byte	0x1
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 115


 3473 04dc 2109     		.2byte	0x921
 3474 04de D2000000 		.4byte	0xd2
 3475 04e2 02       		.uleb128 0x2
 3476 04e3 91       		.byte	0x91
 3477 04e4 70       		.sleb128 -16
 3478 04e5 0C       		.uleb128 0xc
 3479 04e6 00000000 		.4byte	.LASF59
 3480 04ea 01       		.byte	0x1
 3481 04eb 2209     		.2byte	0x922
 3482 04ed 5F040000 		.4byte	0x45f
 3483 04f1 02       		.uleb128 0x2
 3484 04f2 91       		.byte	0x91
 3485 04f3 74       		.sleb128 -12
 3486 04f4 00       		.byte	0
 3487 04f5 0E       		.uleb128 0xe
 3488 04f6 E8040000 		.4byte	.LASF62
 3489 04fa 01       		.byte	0x1
 3490 04fb 3B09     		.2byte	0x93b
 3491 04fd D2000000 		.4byte	0xd2
 3492 0501 00000000 		.4byte	.LFB23
 3493 0505 36000000 		.4byte	.LFE23-.LFB23
 3494 0509 01       		.uleb128 0x1
 3495 050a 9C       		.byte	0x9c
 3496 050b 2E050000 		.4byte	0x52e
 3497 050f 0B       		.uleb128 0xb
 3498 0510 2D030000 		.4byte	.LASF56
 3499 0514 01       		.byte	0x1
 3500 0515 3B09     		.2byte	0x93b
 3501 0517 6B000000 		.4byte	0x6b
 3502 051b 02       		.uleb128 0x2
 3503 051c 91       		.byte	0x91
 3504 051d 6F       		.sleb128 -17
 3505 051e 0C       		.uleb128 0xc
 3506 051f 00000000 		.4byte	.LASF59
 3507 0523 01       		.byte	0x1
 3508 0524 3D09     		.2byte	0x93d
 3509 0526 5F040000 		.4byte	0x45f
 3510 052a 02       		.uleb128 0x2
 3511 052b 91       		.byte	0x91
 3512 052c 74       		.sleb128 -12
 3513 052d 00       		.byte	0
 3514 052e 0A       		.uleb128 0xa
 3515 052f B0040000 		.4byte	.LASF63
 3516 0533 01       		.byte	0x1
 3517 0534 4E09     		.2byte	0x94e
 3518 0536 00000000 		.4byte	.LFB24
 3519 053a A8000000 		.4byte	.LFE24-.LFB24
 3520 053e 01       		.uleb128 0x1
 3521 053f 9C       		.byte	0x9c
 3522 0540 90050000 		.4byte	0x590
 3523 0544 0B       		.uleb128 0xb
 3524 0545 2D030000 		.4byte	.LASF56
 3525 0549 01       		.byte	0x1
 3526 054a 4E09     		.2byte	0x94e
 3527 054c 6B000000 		.4byte	0x6b
 3528 0550 02       		.uleb128 0x2
 3529 0551 91       		.byte	0x91
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 116


 3530 0552 5F       		.sleb128 -33
 3531 0553 0B       		.uleb128 0xb
 3532 0554 34030000 		.4byte	.LASF64
 3533 0558 01       		.byte	0x1
 3534 0559 4E09     		.2byte	0x94e
 3535 055b 6B000000 		.4byte	0x6b
 3536 055f 02       		.uleb128 0x2
 3537 0560 91       		.byte	0x91
 3538 0561 5E       		.sleb128 -34
 3539 0562 0C       		.uleb128 0xc
 3540 0563 43010000 		.4byte	.LASF24
 3541 0567 01       		.byte	0x1
 3542 0568 5009     		.2byte	0x950
 3543 056a 6B000000 		.4byte	0x6b
 3544 056e 02       		.uleb128 0x2
 3545 056f 91       		.byte	0x91
 3546 0570 6B       		.sleb128 -21
 3547 0571 0C       		.uleb128 0xc
 3548 0572 A8010000 		.4byte	.LASF65
 3549 0576 01       		.byte	0x1
 3550 0577 5109     		.2byte	0x951
 3551 0579 83000000 		.4byte	0x83
 3552 057d 02       		.uleb128 0x2
 3553 057e 91       		.byte	0x91
 3554 057f 6C       		.sleb128 -20
 3555 0580 0C       		.uleb128 0xc
 3556 0581 2B020000 		.4byte	.LASF66
 3557 0585 01       		.byte	0x1
 3558 0586 5209     		.2byte	0x952
 3559 0588 83000000 		.4byte	0x83
 3560 058c 02       		.uleb128 0x2
 3561 058d 91       		.byte	0x91
 3562 058e 64       		.sleb128 -28
 3563 058f 00       		.byte	0
 3564 0590 0E       		.uleb128 0xe
 3565 0591 FF010000 		.4byte	.LASF67
 3566 0595 01       		.byte	0x1
 3567 0596 7009     		.2byte	0x970
 3568 0598 6B000000 		.4byte	0x6b
 3569 059c 00000000 		.4byte	.LFB25
 3570 05a0 58000000 		.4byte	.LFE25-.LFB25
 3571 05a4 01       		.uleb128 0x1
 3572 05a5 9C       		.byte	0x9c
 3573 05a6 C9050000 		.4byte	0x5c9
 3574 05aa 0B       		.uleb128 0xb
 3575 05ab 2D030000 		.4byte	.LASF56
 3576 05af 01       		.byte	0x1
 3577 05b0 7009     		.2byte	0x970
 3578 05b2 6B000000 		.4byte	0x6b
 3579 05b6 02       		.uleb128 0x2
 3580 05b7 91       		.byte	0x91
 3581 05b8 6F       		.sleb128 -17
 3582 05b9 0C       		.uleb128 0xc
 3583 05ba 34030000 		.4byte	.LASF64
 3584 05be 01       		.byte	0x1
 3585 05bf 7209     		.2byte	0x972
 3586 05c1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 117


 3587 05c5 02       		.uleb128 0x2
 3588 05c6 91       		.byte	0x91
 3589 05c7 77       		.sleb128 -9
 3590 05c8 00       		.byte	0
 3591 05c9 0D       		.uleb128 0xd
 3592 05ca 32050000 		.4byte	.LASF68
 3593 05ce 01       		.byte	0x1
 3594 05cf 8509     		.2byte	0x985
 3595 05d1 00000000 		.4byte	.LFB26
 3596 05d5 2C000000 		.4byte	.LFE26-.LFB26
 3597 05d9 01       		.uleb128 0x1
 3598 05da 9C       		.byte	0x9c
 3599 05db EF050000 		.4byte	0x5ef
 3600 05df 0B       		.uleb128 0xb
 3601 05e0 2D030000 		.4byte	.LASF56
 3602 05e4 01       		.byte	0x1
 3603 05e5 8509     		.2byte	0x985
 3604 05e7 6B000000 		.4byte	0x6b
 3605 05eb 02       		.uleb128 0x2
 3606 05ec 91       		.byte	0x91
 3607 05ed 77       		.sleb128 -9
 3608 05ee 00       		.byte	0
 3609 05ef 12       		.uleb128 0x12
 3610 05f0 0A010000 		.4byte	.LASF69
 3611 05f4 01       		.byte	0x1
 3612 05f5 9709     		.2byte	0x997
 3613 05f7 6B000000 		.4byte	0x6b
 3614 05fb 00000000 		.4byte	.LFB27
 3615 05ff 30000000 		.4byte	.LFE27-.LFB27
 3616 0603 01       		.uleb128 0x1
 3617 0604 9C       		.byte	0x9c
 3618 0605 19060000 		.4byte	0x619
 3619 0609 0B       		.uleb128 0xb
 3620 060a 2D030000 		.4byte	.LASF56
 3621 060e 01       		.byte	0x1
 3622 060f 9709     		.2byte	0x997
 3623 0611 6B000000 		.4byte	0x6b
 3624 0615 02       		.uleb128 0x2
 3625 0616 91       		.byte	0x91
 3626 0617 77       		.sleb128 -9
 3627 0618 00       		.byte	0
 3628 0619 0D       		.uleb128 0xd
 3629 061a 6E010000 		.4byte	.LASF70
 3630 061e 01       		.byte	0x1
 3631 061f A709     		.2byte	0x9a7
 3632 0621 00000000 		.4byte	.LFB28
 3633 0625 2C000000 		.4byte	.LFE28-.LFB28
 3634 0629 01       		.uleb128 0x1
 3635 062a 9C       		.byte	0x9c
 3636 062b 3F060000 		.4byte	0x63f
 3637 062f 0B       		.uleb128 0xb
 3638 0630 2D030000 		.4byte	.LASF56
 3639 0634 01       		.byte	0x1
 3640 0635 A709     		.2byte	0x9a7
 3641 0637 6B000000 		.4byte	0x6b
 3642 063b 02       		.uleb128 0x2
 3643 063c 91       		.byte	0x91
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 118


 3644 063d 77       		.sleb128 -9
 3645 063e 00       		.byte	0
 3646 063f 0D       		.uleb128 0xd
 3647 0640 BA020000 		.4byte	.LASF71
 3648 0644 01       		.byte	0x1
 3649 0645 B509     		.2byte	0x9b5
 3650 0647 00000000 		.4byte	.LFB29
 3651 064b 2C000000 		.4byte	.LFE29-.LFB29
 3652 064f 01       		.uleb128 0x1
 3653 0650 9C       		.byte	0x9c
 3654 0651 65060000 		.4byte	0x665
 3655 0655 0B       		.uleb128 0xb
 3656 0656 2D030000 		.4byte	.LASF56
 3657 065a 01       		.byte	0x1
 3658 065b B509     		.2byte	0x9b5
 3659 065d 6B000000 		.4byte	0x6b
 3660 0661 02       		.uleb128 0x2
 3661 0662 91       		.byte	0x91
 3662 0663 77       		.sleb128 -9
 3663 0664 00       		.byte	0
 3664 0665 0D       		.uleb128 0xd
 3665 0666 43040000 		.4byte	.LASF72
 3666 066a 01       		.byte	0x1
 3667 066b C409     		.2byte	0x9c4
 3668 066d 00000000 		.4byte	.LFB30
 3669 0671 2C000000 		.4byte	.LFE30-.LFB30
 3670 0675 01       		.uleb128 0x1
 3671 0676 9C       		.byte	0x9c
 3672 0677 8B060000 		.4byte	0x68b
 3673 067b 0B       		.uleb128 0xb
 3674 067c 2D030000 		.4byte	.LASF56
 3675 0680 01       		.byte	0x1
 3676 0681 C409     		.2byte	0x9c4
 3677 0683 6B000000 		.4byte	0x6b
 3678 0687 02       		.uleb128 0x2
 3679 0688 91       		.byte	0x91
 3680 0689 77       		.sleb128 -9
 3681 068a 00       		.byte	0
 3682 068b 0D       		.uleb128 0xd
 3683 068c 13050000 		.4byte	.LASF73
 3684 0690 01       		.byte	0x1
 3685 0691 D309     		.2byte	0x9d3
 3686 0693 00000000 		.4byte	.LFB31
 3687 0697 16000000 		.4byte	.LFE31-.LFB31
 3688 069b 01       		.uleb128 0x1
 3689 069c 9C       		.byte	0x9c
 3690 069d B1060000 		.4byte	0x6b1
 3691 06a1 0B       		.uleb128 0xb
 3692 06a2 75050000 		.4byte	.LASF50
 3693 06a6 01       		.byte	0x1
 3694 06a7 D309     		.2byte	0x9d3
 3695 06a9 6B000000 		.4byte	0x6b
 3696 06ad 02       		.uleb128 0x2
 3697 06ae 91       		.byte	0x91
 3698 06af 77       		.sleb128 -9
 3699 06b0 00       		.byte	0
 3700 06b1 11       		.uleb128 0x11
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 119


 3701 06b2 E1000000 		.4byte	.LASF74
 3702 06b6 01       		.byte	0x1
 3703 06b7 EB09     		.2byte	0x9eb
 3704 06b9 00000000 		.4byte	.LFB32
 3705 06bd 24000000 		.4byte	.LFE32-.LFB32
 3706 06c1 01       		.uleb128 0x1
 3707 06c2 9C       		.byte	0x9c
 3708 06c3 0A       		.uleb128 0xa
 3709 06c4 E6050000 		.4byte	.LASF75
 3710 06c8 01       		.byte	0x1
 3711 06c9 FF09     		.2byte	0x9ff
 3712 06cb 00000000 		.4byte	.LFB33
 3713 06cf 4C000000 		.4byte	.LFE33-.LFB33
 3714 06d3 01       		.uleb128 0x1
 3715 06d4 9C       		.byte	0x9c
 3716 06d5 E9060000 		.4byte	0x6e9
 3717 06d9 0B       		.uleb128 0xb
 3718 06da F7040000 		.4byte	.LASF76
 3719 06de 01       		.byte	0x1
 3720 06df FF09     		.2byte	0x9ff
 3721 06e1 83000000 		.4byte	0x83
 3722 06e5 02       		.uleb128 0x2
 3723 06e6 91       		.byte	0x91
 3724 06e7 74       		.sleb128 -12
 3725 06e8 00       		.byte	0
 3726 06e9 0A       		.uleb128 0xa
 3727 06ea 6B050000 		.4byte	.LASF77
 3728 06ee 01       		.byte	0x1
 3729 06ef 160A     		.2byte	0xa16
 3730 06f1 00000000 		.4byte	.LFB34
 3731 06f5 28000000 		.4byte	.LFE34-.LFB34
 3732 06f9 01       		.uleb128 0x1
 3733 06fa 9C       		.byte	0x9c
 3734 06fb 0F070000 		.4byte	0x70f
 3735 06ff 0B       		.uleb128 0xb
 3736 0700 BC060000 		.4byte	.LASF78
 3737 0704 01       		.byte	0x1
 3738 0705 160A     		.2byte	0xa16
 3739 0707 77000000 		.4byte	0x77
 3740 070b 02       		.uleb128 0x2
 3741 070c 91       		.byte	0x91
 3742 070d 76       		.sleb128 -10
 3743 070e 00       		.byte	0
 3744 070f 0A       		.uleb128 0xa
 3745 0710 37010000 		.4byte	.LASF79
 3746 0714 01       		.byte	0x1
 3747 0715 240A     		.2byte	0xa24
 3748 0717 00000000 		.4byte	.LFB35
 3749 071b 84000000 		.4byte	.LFE35-.LFB35
 3750 071f 01       		.uleb128 0x1
 3751 0720 9C       		.byte	0x9c
 3752 0721 35070000 		.4byte	0x735
 3753 0725 0B       		.uleb128 0xb
 3754 0726 32010000 		.4byte	.LASF34
 3755 072a 01       		.byte	0x1
 3756 072b 240A     		.2byte	0xa24
 3757 072d 83000000 		.4byte	0x83
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 120


 3758 0731 02       		.uleb128 0x2
 3759 0732 91       		.byte	0x91
 3760 0733 74       		.sleb128 -12
 3761 0734 00       		.byte	0
 3762 0735 14       		.uleb128 0x14
 3763 0736 0D040000 		.4byte	.LASF80
 3764 073a 01       		.byte	0x1
 3765 073b 440A     		.2byte	0xa44
 3766 073d 00000000 		.4byte	.LFB36
 3767 0741 24000000 		.4byte	.LFE36-.LFB36
 3768 0745 01       		.uleb128 0x1
 3769 0746 9C       		.byte	0x9c
 3770 0747 0A       		.uleb128 0xa
 3771 0748 1D020000 		.4byte	.LASF81
 3772 074c 01       		.byte	0x1
 3773 074d 610A     		.2byte	0xa61
 3774 074f 00000000 		.4byte	.LFB37
 3775 0753 68000000 		.4byte	.LFE37-.LFB37
 3776 0757 01       		.uleb128 0x1
 3777 0758 9C       		.byte	0x9c
 3778 0759 6B070000 		.4byte	0x76b
 3779 075d 15       		.uleb128 0x15
 3780 075e 6900     		.ascii	"i\000"
 3781 0760 01       		.byte	0x1
 3782 0761 630A     		.2byte	0xa63
 3783 0763 83000000 		.4byte	0x83
 3784 0767 02       		.uleb128 0x2
 3785 0768 91       		.byte	0x91
 3786 0769 74       		.sleb128 -12
 3787 076a 00       		.byte	0
 3788 076b 14       		.uleb128 0x14
 3789 076c 8E050000 		.4byte	.LASF82
 3790 0770 01       		.byte	0x1
 3791 0771 800A     		.2byte	0xa80
 3792 0773 00000000 		.4byte	.LFB38
 3793 0777 20000000 		.4byte	.LFE38-.LFB38
 3794 077b 01       		.uleb128 0x1
 3795 077c 9C       		.byte	0x9c
 3796 077d 11       		.uleb128 0x11
 3797 077e 4F060000 		.4byte	.LASF83
 3798 0782 01       		.byte	0x1
 3799 0783 910A     		.2byte	0xa91
 3800 0785 00000000 		.4byte	.LFB39
 3801 0789 1C000000 		.4byte	.LFE39-.LFB39
 3802 078d 01       		.uleb128 0x1
 3803 078e 9C       		.byte	0x9c
 3804 078f 11       		.uleb128 0x11
 3805 0790 F1000000 		.4byte	.LASF84
 3806 0794 01       		.byte	0x1
 3807 0795 A10A     		.2byte	0xaa1
 3808 0797 00000000 		.4byte	.LFB40
 3809 079b 1C000000 		.4byte	.LFE40-.LFB40
 3810 079f 01       		.uleb128 0x1
 3811 07a0 9C       		.byte	0x9c
 3812 07a1 11       		.uleb128 0x11
 3813 07a2 06060000 		.4byte	.LASF85
 3814 07a6 01       		.byte	0x1
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 121


 3815 07a7 B10A     		.2byte	0xab1
 3816 07a9 00000000 		.4byte	.LFB41
 3817 07ad 1C000000 		.4byte	.LFE41-.LFB41
 3818 07b1 01       		.uleb128 0x1
 3819 07b2 9C       		.byte	0x9c
 3820 07b3 0D       		.uleb128 0xd
 3821 07b4 D0060000 		.4byte	.LASF86
 3822 07b8 01       		.byte	0x1
 3823 07b9 C20A     		.2byte	0xac2
 3824 07bb 00000000 		.4byte	.LFB42
 3825 07bf 20000000 		.4byte	.LFE42-.LFB42
 3826 07c3 01       		.uleb128 0x1
 3827 07c4 9C       		.byte	0x9c
 3828 07c5 D9070000 		.4byte	0x7d9
 3829 07c9 0B       		.uleb128 0xb
 3830 07ca 2B020000 		.4byte	.LASF66
 3831 07ce 01       		.byte	0x1
 3832 07cf C20A     		.2byte	0xac2
 3833 07d1 83000000 		.4byte	0x83
 3834 07d5 02       		.uleb128 0x2
 3835 07d6 91       		.byte	0x91
 3836 07d7 74       		.sleb128 -12
 3837 07d8 00       		.byte	0
 3838 07d9 13       		.uleb128 0x13
 3839 07da 52010000 		.4byte	.LASF88
 3840 07de 01       		.byte	0x1
 3841 07df D20A     		.2byte	0xad2
 3842 07e1 83000000 		.4byte	0x83
 3843 07e5 00000000 		.4byte	.LFB43
 3844 07e9 18000000 		.4byte	.LFE43-.LFB43
 3845 07ed 01       		.uleb128 0x1
 3846 07ee 9C       		.byte	0x9c
 3847 07ef 13       		.uleb128 0x13
 3848 07f0 90040000 		.4byte	.LASF89
 3849 07f4 01       		.byte	0x1
 3850 07f5 E20A     		.2byte	0xae2
 3851 07f7 83000000 		.4byte	0x83
 3852 07fb 00000000 		.4byte	.LFB44
 3853 07ff 18000000 		.4byte	.LFE44-.LFB44
 3854 0803 01       		.uleb128 0x1
 3855 0804 9C       		.byte	0x9c
 3856 0805 0D       		.uleb128 0xd
 3857 0806 06030000 		.4byte	.LASF90
 3858 080a 01       		.byte	0x1
 3859 080b 020B     		.2byte	0xb02
 3860 080d 00000000 		.4byte	.LFB45
 3861 0811 34000000 		.4byte	.LFE45-.LFB45
 3862 0815 01       		.uleb128 0x1
 3863 0816 9C       		.byte	0x9c
 3864 0817 2B080000 		.4byte	0x82b
 3865 081b 0B       		.uleb128 0xb
 3866 081c 31020000 		.4byte	.LASF91
 3867 0820 01       		.byte	0x1
 3868 0821 020B     		.2byte	0xb02
 3869 0823 83000000 		.4byte	0x83
 3870 0827 02       		.uleb128 0x2
 3871 0828 91       		.byte	0x91
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 122


 3872 0829 74       		.sleb128 -12
 3873 082a 00       		.byte	0
 3874 082b 13       		.uleb128 0x13
 3875 082c EE050000 		.4byte	.LASF92
 3876 0830 01       		.byte	0x1
 3877 0831 1B0B     		.2byte	0xb1b
 3878 0833 83000000 		.4byte	0x83
 3879 0837 00000000 		.4byte	.LFB46
 3880 083b 18000000 		.4byte	.LFE46-.LFB46
 3881 083f 01       		.uleb128 0x1
 3882 0840 9C       		.byte	0x9c
 3883 0841 13       		.uleb128 0x13
 3884 0842 4B020000 		.4byte	.LASF93
 3885 0846 01       		.byte	0x1
 3886 0847 320B     		.2byte	0xb32
 3887 0849 83000000 		.4byte	0x83
 3888 084d 00000000 		.4byte	.LFB47
 3889 0851 18000000 		.4byte	.LFE47-.LFB47
 3890 0855 01       		.uleb128 0x1
 3891 0856 9C       		.byte	0x9c
 3892 0857 11       		.uleb128 0x11
 3893 0858 6E020000 		.4byte	.LASF94
 3894 085c 01       		.byte	0x1
 3895 085d 3F0B     		.2byte	0xb3f
 3896 085f 00000000 		.4byte	.LFB48
 3897 0863 14000000 		.4byte	.LFE48-.LFB48
 3898 0867 01       		.uleb128 0x1
 3899 0868 9C       		.byte	0x9c
 3900 0869 12       		.uleb128 0x12
 3901 086a B5050000 		.4byte	.LASF95
 3902 086e 01       		.byte	0x1
 3903 086f 620B     		.2byte	0xb62
 3904 0871 F3000000 		.4byte	0xf3
 3905 0875 00000000 		.4byte	.LFB49
 3906 0879 2C000000 		.4byte	.LFE49-.LFB49
 3907 087d 01       		.uleb128 0x1
 3908 087e 9C       		.byte	0x9c
 3909 087f B1080000 		.4byte	0x8b1
 3910 0883 0B       		.uleb128 0xb
 3911 0884 2D030000 		.4byte	.LASF56
 3912 0888 01       		.byte	0x1
 3913 0889 620B     		.2byte	0xb62
 3914 088b 83000000 		.4byte	0x83
 3915 088f 02       		.uleb128 0x2
 3916 0890 91       		.byte	0x91
 3917 0891 6C       		.sleb128 -20
 3918 0892 0B       		.uleb128 0xb
 3919 0893 76040000 		.4byte	.LASF96
 3920 0897 01       		.byte	0x1
 3921 0898 620B     		.2byte	0xb62
 3922 089a F3000000 		.4byte	0xf3
 3923 089e 02       		.uleb128 0x2
 3924 089f 91       		.byte	0x91
 3925 08a0 68       		.sleb128 -24
 3926 08a1 0C       		.uleb128 0xc
 3927 08a2 52000000 		.4byte	.LASF97
 3928 08a6 01       		.byte	0x1
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 123


 3929 08a7 640B     		.2byte	0xb64
 3930 08a9 F3000000 		.4byte	0xf3
 3931 08ad 02       		.uleb128 0x2
 3932 08ae 91       		.byte	0x91
 3933 08af 74       		.sleb128 -12
 3934 08b0 00       		.byte	0
 3935 08b1 12       		.uleb128 0x12
 3936 08b2 CA020000 		.4byte	.LASF98
 3937 08b6 01       		.byte	0x1
 3938 08b7 7A0B     		.2byte	0xb7a
 3939 08b9 F3000000 		.4byte	0xf3
 3940 08bd 00000000 		.4byte	.LFB50
 3941 08c1 1C000000 		.4byte	.LFE50-.LFB50
 3942 08c5 01       		.uleb128 0x1
 3943 08c6 9C       		.byte	0x9c
 3944 08c7 DB080000 		.4byte	0x8db
 3945 08cb 0B       		.uleb128 0xb
 3946 08cc 2D030000 		.4byte	.LASF56
 3947 08d0 01       		.byte	0x1
 3948 08d1 7A0B     		.2byte	0xb7a
 3949 08d3 83000000 		.4byte	0x83
 3950 08d7 02       		.uleb128 0x2
 3951 08d8 91       		.byte	0x91
 3952 08d9 74       		.sleb128 -12
 3953 08da 00       		.byte	0
 3954 08db 16       		.uleb128 0x16
 3955 08dc E3060000 		.4byte	.LASF112
 3956 08e0 01       		.byte	0x1
 3957 08e1 870B     		.2byte	0xb87
 3958 08e3 00000000 		.4byte	.LFB51
 3959 08e7 44000000 		.4byte	.LFE51-.LFB51
 3960 08eb 01       		.uleb128 0x1
 3961 08ec 9C       		.byte	0x9c
 3962 08ed FF080000 		.4byte	0x8ff
 3963 08f1 15       		.uleb128 0x15
 3964 08f2 6900     		.ascii	"i\000"
 3965 08f4 01       		.byte	0x1
 3966 08f5 890B     		.2byte	0xb89
 3967 08f7 83000000 		.4byte	0x83
 3968 08fb 02       		.uleb128 0x2
 3969 08fc 91       		.byte	0x91
 3970 08fd 74       		.sleb128 -12
 3971 08fe 00       		.byte	0
 3972 08ff 0D       		.uleb128 0xd
 3973 0900 3D020000 		.4byte	.LASF99
 3974 0904 01       		.byte	0x1
 3975 0905 A70B     		.2byte	0xba7
 3976 0907 00000000 		.4byte	.LFB52
 3977 090b C0000000 		.4byte	.LFE52-.LFB52
 3978 090f 01       		.uleb128 0x1
 3979 0910 9C       		.byte	0x9c
 3980 0911 25090000 		.4byte	0x925
 3981 0915 0B       		.uleb128 0xb
 3982 0916 DD050000 		.4byte	.LASF100
 3983 091a 01       		.byte	0x1
 3984 091b A70B     		.2byte	0xba7
 3985 091d 25090000 		.4byte	0x925
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 124


 3986 0921 02       		.uleb128 0x2
 3987 0922 91       		.byte	0x91
 3988 0923 74       		.sleb128 -12
 3989 0924 00       		.byte	0
 3990 0925 06       		.uleb128 0x6
 3991 0926 04       		.byte	0x4
 3992 0927 83000000 		.4byte	0x83
 3993 092b 0F       		.uleb128 0xf
 3994 092c F3000000 		.4byte	0xf3
 3995 0930 3B090000 		.4byte	0x93b
 3996 0934 10       		.uleb128 0x10
 3997 0935 EC000000 		.4byte	0xec
 3998 0939 04       		.byte	0x4
 3999 093a 00       		.byte	0
 4000 093b 17       		.uleb128 0x17
 4001 093c CA050000 		.4byte	.LASF101
 4002 0940 01       		.byte	0x1
 4003 0941 22       		.byte	0x22
 4004 0942 2B090000 		.4byte	0x92b
 4005 0946 05       		.uleb128 0x5
 4006 0947 03       		.byte	0x3
 4007 0948 00000000 		.4byte	CySysTickCallbacks
 4008 094c 18       		.uleb128 0x18
 4009 094d A2040000 		.4byte	.LASF102
 4010 0951 01       		.byte	0x1
 4011 0952 1B       		.byte	0x1b
 4012 0953 83000000 		.4byte	0x83
 4013 0957 05       		.uleb128 0x5
 4014 0958 03       		.byte	0x3
 4015 0959 00000000 		.4byte	cydelayFreqHz
 4016 095d 18       		.uleb128 0x18
 4017 095e 8B010000 		.4byte	.LASF103
 4018 0962 01       		.byte	0x1
 4019 0963 1C       		.byte	0x1c
 4020 0964 83000000 		.4byte	0x83
 4021 0968 05       		.uleb128 0x5
 4022 0969 03       		.byte	0x3
 4023 096a 00000000 		.4byte	cydelayFreqKhz
 4024 096e 18       		.uleb128 0x18
 4025 096f 30060000 		.4byte	.LASF104
 4026 0973 01       		.byte	0x1
 4027 0974 1D       		.byte	0x1d
 4028 0975 6B000000 		.4byte	0x6b
 4029 0979 05       		.uleb128 0x5
 4030 097a 03       		.byte	0x3
 4031 097b 00000000 		.4byte	cydelayFreqMhz
 4032 097f 18       		.uleb128 0x18
 4033 0980 10020000 		.4byte	.LASF105
 4034 0984 01       		.byte	0x1
 4035 0985 1E       		.byte	0x1e
 4036 0986 83000000 		.4byte	0x83
 4037 098a 05       		.uleb128 0x5
 4038 098b 03       		.byte	0x3
 4039 098c 00000000 		.4byte	cydelay32kMs
 4040 0990 18       		.uleb128 0x18
 4041 0991 32040000 		.4byte	.LASF106
 4042 0995 01       		.byte	0x1
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 125


 4043 0996 36       		.byte	0x36
 4044 0997 83000000 		.4byte	0x83
 4045 099b 05       		.uleb128 0x5
 4046 099c 03       		.byte	0x3
 4047 099d 00000000 		.4byte	CySysTickInitVar
 4048 09a1 0F       		.uleb128 0xf
 4049 09a2 B1090000 		.4byte	0x9b1
 4050 09a6 B1090000 		.4byte	0x9b1
 4051 09aa 10       		.uleb128 0x10
 4052 09ab EC000000 		.4byte	0xec
 4053 09af 2D       		.byte	0x2d
 4054 09b0 00       		.byte	0
 4055 09b1 19       		.uleb128 0x19
 4056 09b2 6B000000 		.4byte	0x6b
 4057 09b6 18       		.uleb128 0x18
 4058 09b7 7F040000 		.4byte	.LASF107
 4059 09bb 01       		.byte	0x1
 4060 09bc 3B       		.byte	0x3b
 4061 09bd C7090000 		.4byte	0x9c7
 4062 09c1 05       		.uleb128 0x5
 4063 09c2 03       		.byte	0x3
 4064 09c3 00000000 		.4byte	cyImoFreqMhz2Reg
 4065 09c7 19       		.uleb128 0x19
 4066 09c8 A1090000 		.4byte	0x9a1
 4067 09cc 18       		.uleb128 0x18
 4068 09cd 38000000 		.4byte	.LASF108
 4069 09d1 01       		.byte	0x1
 4070 09d2 5B       		.byte	0x5b
 4071 09d3 83000000 		.4byte	0x83
 4072 09d7 05       		.uleb128 0x5
 4073 09d8 03       		.byte	0x3
 4074 09d9 00000000 		.4byte	CySysClkPumpConfig
 4075 09dd 00       		.byte	0
 4076              		.section	.debug_abbrev,"",%progbits
 4077              	.Ldebug_abbrev0:
 4078 0000 01       		.uleb128 0x1
 4079 0001 11       		.uleb128 0x11
 4080 0002 01       		.byte	0x1
 4081 0003 25       		.uleb128 0x25
 4082 0004 0E       		.uleb128 0xe
 4083 0005 13       		.uleb128 0x13
 4084 0006 0B       		.uleb128 0xb
 4085 0007 03       		.uleb128 0x3
 4086 0008 0E       		.uleb128 0xe
 4087 0009 1B       		.uleb128 0x1b
 4088 000a 0E       		.uleb128 0xe
 4089 000b 55       		.uleb128 0x55
 4090 000c 17       		.uleb128 0x17
 4091 000d 11       		.uleb128 0x11
 4092 000e 01       		.uleb128 0x1
 4093 000f 10       		.uleb128 0x10
 4094 0010 17       		.uleb128 0x17
 4095 0011 00       		.byte	0
 4096 0012 00       		.byte	0
 4097 0013 02       		.uleb128 0x2
 4098 0014 24       		.uleb128 0x24
 4099 0015 00       		.byte	0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 126


 4100 0016 0B       		.uleb128 0xb
 4101 0017 0B       		.uleb128 0xb
 4102 0018 3E       		.uleb128 0x3e
 4103 0019 0B       		.uleb128 0xb
 4104 001a 03       		.uleb128 0x3
 4105 001b 0E       		.uleb128 0xe
 4106 001c 00       		.byte	0
 4107 001d 00       		.byte	0
 4108 001e 03       		.uleb128 0x3
 4109 001f 24       		.uleb128 0x24
 4110 0020 00       		.byte	0
 4111 0021 0B       		.uleb128 0xb
 4112 0022 0B       		.uleb128 0xb
 4113 0023 3E       		.uleb128 0x3e
 4114 0024 0B       		.uleb128 0xb
 4115 0025 03       		.uleb128 0x3
 4116 0026 08       		.uleb128 0x8
 4117 0027 00       		.byte	0
 4118 0028 00       		.byte	0
 4119 0029 04       		.uleb128 0x4
 4120 002a 16       		.uleb128 0x16
 4121 002b 00       		.byte	0
 4122 002c 03       		.uleb128 0x3
 4123 002d 0E       		.uleb128 0xe
 4124 002e 3A       		.uleb128 0x3a
 4125 002f 0B       		.uleb128 0xb
 4126 0030 3B       		.uleb128 0x3b
 4127 0031 05       		.uleb128 0x5
 4128 0032 49       		.uleb128 0x49
 4129 0033 13       		.uleb128 0x13
 4130 0034 00       		.byte	0
 4131 0035 00       		.byte	0
 4132 0036 05       		.uleb128 0x5
 4133 0037 35       		.uleb128 0x35
 4134 0038 00       		.byte	0
 4135 0039 49       		.uleb128 0x49
 4136 003a 13       		.uleb128 0x13
 4137 003b 00       		.byte	0
 4138 003c 00       		.byte	0
 4139 003d 06       		.uleb128 0x6
 4140 003e 0F       		.uleb128 0xf
 4141 003f 00       		.byte	0
 4142 0040 0B       		.uleb128 0xb
 4143 0041 0B       		.uleb128 0xb
 4144 0042 49       		.uleb128 0x49
 4145 0043 13       		.uleb128 0x13
 4146 0044 00       		.byte	0
 4147 0045 00       		.byte	0
 4148 0046 07       		.uleb128 0x7
 4149 0047 15       		.uleb128 0x15
 4150 0048 00       		.byte	0
 4151 0049 27       		.uleb128 0x27
 4152 004a 19       		.uleb128 0x19
 4153 004b 00       		.byte	0
 4154 004c 00       		.byte	0
 4155 004d 08       		.uleb128 0x8
 4156 004e 16       		.uleb128 0x16
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 127


 4157 004f 00       		.byte	0
 4158 0050 03       		.uleb128 0x3
 4159 0051 0E       		.uleb128 0xe
 4160 0052 3A       		.uleb128 0x3a
 4161 0053 0B       		.uleb128 0xb
 4162 0054 3B       		.uleb128 0x3b
 4163 0055 0B       		.uleb128 0xb
 4164 0056 49       		.uleb128 0x49
 4165 0057 13       		.uleb128 0x13
 4166 0058 00       		.byte	0
 4167 0059 00       		.byte	0
 4168 005a 09       		.uleb128 0x9
 4169 005b 2E       		.uleb128 0x2e
 4170 005c 00       		.byte	0
 4171 005d 3F       		.uleb128 0x3f
 4172 005e 19       		.uleb128 0x19
 4173 005f 03       		.uleb128 0x3
 4174 0060 0E       		.uleb128 0xe
 4175 0061 3A       		.uleb128 0x3a
 4176 0062 0B       		.uleb128 0xb
 4177 0063 3B       		.uleb128 0x3b
 4178 0064 0B       		.uleb128 0xb
 4179 0065 27       		.uleb128 0x27
 4180 0066 19       		.uleb128 0x19
 4181 0067 11       		.uleb128 0x11
 4182 0068 01       		.uleb128 0x1
 4183 0069 12       		.uleb128 0x12
 4184 006a 06       		.uleb128 0x6
 4185 006b 40       		.uleb128 0x40
 4186 006c 18       		.uleb128 0x18
 4187 006d 9742     		.uleb128 0x2117
 4188 006f 19       		.uleb128 0x19
 4189 0070 00       		.byte	0
 4190 0071 00       		.byte	0
 4191 0072 0A       		.uleb128 0xa
 4192 0073 2E       		.uleb128 0x2e
 4193 0074 01       		.byte	0x1
 4194 0075 3F       		.uleb128 0x3f
 4195 0076 19       		.uleb128 0x19
 4196 0077 03       		.uleb128 0x3
 4197 0078 0E       		.uleb128 0xe
 4198 0079 3A       		.uleb128 0x3a
 4199 007a 0B       		.uleb128 0xb
 4200 007b 3B       		.uleb128 0x3b
 4201 007c 05       		.uleb128 0x5
 4202 007d 27       		.uleb128 0x27
 4203 007e 19       		.uleb128 0x19
 4204 007f 11       		.uleb128 0x11
 4205 0080 01       		.uleb128 0x1
 4206 0081 12       		.uleb128 0x12
 4207 0082 06       		.uleb128 0x6
 4208 0083 40       		.uleb128 0x40
 4209 0084 18       		.uleb128 0x18
 4210 0085 9642     		.uleb128 0x2116
 4211 0087 19       		.uleb128 0x19
 4212 0088 01       		.uleb128 0x1
 4213 0089 13       		.uleb128 0x13
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 128


 4214 008a 00       		.byte	0
 4215 008b 00       		.byte	0
 4216 008c 0B       		.uleb128 0xb
 4217 008d 05       		.uleb128 0x5
 4218 008e 00       		.byte	0
 4219 008f 03       		.uleb128 0x3
 4220 0090 0E       		.uleb128 0xe
 4221 0091 3A       		.uleb128 0x3a
 4222 0092 0B       		.uleb128 0xb
 4223 0093 3B       		.uleb128 0x3b
 4224 0094 05       		.uleb128 0x5
 4225 0095 49       		.uleb128 0x49
 4226 0096 13       		.uleb128 0x13
 4227 0097 02       		.uleb128 0x2
 4228 0098 18       		.uleb128 0x18
 4229 0099 00       		.byte	0
 4230 009a 00       		.byte	0
 4231 009b 0C       		.uleb128 0xc
 4232 009c 34       		.uleb128 0x34
 4233 009d 00       		.byte	0
 4234 009e 03       		.uleb128 0x3
 4235 009f 0E       		.uleb128 0xe
 4236 00a0 3A       		.uleb128 0x3a
 4237 00a1 0B       		.uleb128 0xb
 4238 00a2 3B       		.uleb128 0x3b
 4239 00a3 05       		.uleb128 0x5
 4240 00a4 49       		.uleb128 0x49
 4241 00a5 13       		.uleb128 0x13
 4242 00a6 02       		.uleb128 0x2
 4243 00a7 18       		.uleb128 0x18
 4244 00a8 00       		.byte	0
 4245 00a9 00       		.byte	0
 4246 00aa 0D       		.uleb128 0xd
 4247 00ab 2E       		.uleb128 0x2e
 4248 00ac 01       		.byte	0x1
 4249 00ad 3F       		.uleb128 0x3f
 4250 00ae 19       		.uleb128 0x19
 4251 00af 03       		.uleb128 0x3
 4252 00b0 0E       		.uleb128 0xe
 4253 00b1 3A       		.uleb128 0x3a
 4254 00b2 0B       		.uleb128 0xb
 4255 00b3 3B       		.uleb128 0x3b
 4256 00b4 05       		.uleb128 0x5
 4257 00b5 27       		.uleb128 0x27
 4258 00b6 19       		.uleb128 0x19
 4259 00b7 11       		.uleb128 0x11
 4260 00b8 01       		.uleb128 0x1
 4261 00b9 12       		.uleb128 0x12
 4262 00ba 06       		.uleb128 0x6
 4263 00bb 40       		.uleb128 0x40
 4264 00bc 18       		.uleb128 0x18
 4265 00bd 9742     		.uleb128 0x2117
 4266 00bf 19       		.uleb128 0x19
 4267 00c0 01       		.uleb128 0x1
 4268 00c1 13       		.uleb128 0x13
 4269 00c2 00       		.byte	0
 4270 00c3 00       		.byte	0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 129


 4271 00c4 0E       		.uleb128 0xe
 4272 00c5 2E       		.uleb128 0x2e
 4273 00c6 01       		.byte	0x1
 4274 00c7 3F       		.uleb128 0x3f
 4275 00c8 19       		.uleb128 0x19
 4276 00c9 03       		.uleb128 0x3
 4277 00ca 0E       		.uleb128 0xe
 4278 00cb 3A       		.uleb128 0x3a
 4279 00cc 0B       		.uleb128 0xb
 4280 00cd 3B       		.uleb128 0x3b
 4281 00ce 05       		.uleb128 0x5
 4282 00cf 27       		.uleb128 0x27
 4283 00d0 19       		.uleb128 0x19
 4284 00d1 49       		.uleb128 0x49
 4285 00d2 13       		.uleb128 0x13
 4286 00d3 11       		.uleb128 0x11
 4287 00d4 01       		.uleb128 0x1
 4288 00d5 12       		.uleb128 0x12
 4289 00d6 06       		.uleb128 0x6
 4290 00d7 40       		.uleb128 0x40
 4291 00d8 18       		.uleb128 0x18
 4292 00d9 9642     		.uleb128 0x2116
 4293 00db 19       		.uleb128 0x19
 4294 00dc 01       		.uleb128 0x1
 4295 00dd 13       		.uleb128 0x13
 4296 00de 00       		.byte	0
 4297 00df 00       		.byte	0
 4298 00e0 0F       		.uleb128 0xf
 4299 00e1 01       		.uleb128 0x1
 4300 00e2 01       		.byte	0x1
 4301 00e3 49       		.uleb128 0x49
 4302 00e4 13       		.uleb128 0x13
 4303 00e5 01       		.uleb128 0x1
 4304 00e6 13       		.uleb128 0x13
 4305 00e7 00       		.byte	0
 4306 00e8 00       		.byte	0
 4307 00e9 10       		.uleb128 0x10
 4308 00ea 21       		.uleb128 0x21
 4309 00eb 00       		.byte	0
 4310 00ec 49       		.uleb128 0x49
 4311 00ed 13       		.uleb128 0x13
 4312 00ee 2F       		.uleb128 0x2f
 4313 00ef 0B       		.uleb128 0xb
 4314 00f0 00       		.byte	0
 4315 00f1 00       		.byte	0
 4316 00f2 11       		.uleb128 0x11
 4317 00f3 2E       		.uleb128 0x2e
 4318 00f4 00       		.byte	0
 4319 00f5 3F       		.uleb128 0x3f
 4320 00f6 19       		.uleb128 0x19
 4321 00f7 03       		.uleb128 0x3
 4322 00f8 0E       		.uleb128 0xe
 4323 00f9 3A       		.uleb128 0x3a
 4324 00fa 0B       		.uleb128 0xb
 4325 00fb 3B       		.uleb128 0x3b
 4326 00fc 05       		.uleb128 0x5
 4327 00fd 27       		.uleb128 0x27
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 130


 4328 00fe 19       		.uleb128 0x19
 4329 00ff 11       		.uleb128 0x11
 4330 0100 01       		.uleb128 0x1
 4331 0101 12       		.uleb128 0x12
 4332 0102 06       		.uleb128 0x6
 4333 0103 40       		.uleb128 0x40
 4334 0104 18       		.uleb128 0x18
 4335 0105 9742     		.uleb128 0x2117
 4336 0107 19       		.uleb128 0x19
 4337 0108 00       		.byte	0
 4338 0109 00       		.byte	0
 4339 010a 12       		.uleb128 0x12
 4340 010b 2E       		.uleb128 0x2e
 4341 010c 01       		.byte	0x1
 4342 010d 3F       		.uleb128 0x3f
 4343 010e 19       		.uleb128 0x19
 4344 010f 03       		.uleb128 0x3
 4345 0110 0E       		.uleb128 0xe
 4346 0111 3A       		.uleb128 0x3a
 4347 0112 0B       		.uleb128 0xb
 4348 0113 3B       		.uleb128 0x3b
 4349 0114 05       		.uleb128 0x5
 4350 0115 27       		.uleb128 0x27
 4351 0116 19       		.uleb128 0x19
 4352 0117 49       		.uleb128 0x49
 4353 0118 13       		.uleb128 0x13
 4354 0119 11       		.uleb128 0x11
 4355 011a 01       		.uleb128 0x1
 4356 011b 12       		.uleb128 0x12
 4357 011c 06       		.uleb128 0x6
 4358 011d 40       		.uleb128 0x40
 4359 011e 18       		.uleb128 0x18
 4360 011f 9742     		.uleb128 0x2117
 4361 0121 19       		.uleb128 0x19
 4362 0122 01       		.uleb128 0x1
 4363 0123 13       		.uleb128 0x13
 4364 0124 00       		.byte	0
 4365 0125 00       		.byte	0
 4366 0126 13       		.uleb128 0x13
 4367 0127 2E       		.uleb128 0x2e
 4368 0128 00       		.byte	0
 4369 0129 3F       		.uleb128 0x3f
 4370 012a 19       		.uleb128 0x19
 4371 012b 03       		.uleb128 0x3
 4372 012c 0E       		.uleb128 0xe
 4373 012d 3A       		.uleb128 0x3a
 4374 012e 0B       		.uleb128 0xb
 4375 012f 3B       		.uleb128 0x3b
 4376 0130 05       		.uleb128 0x5
 4377 0131 27       		.uleb128 0x27
 4378 0132 19       		.uleb128 0x19
 4379 0133 49       		.uleb128 0x49
 4380 0134 13       		.uleb128 0x13
 4381 0135 11       		.uleb128 0x11
 4382 0136 01       		.uleb128 0x1
 4383 0137 12       		.uleb128 0x12
 4384 0138 06       		.uleb128 0x6
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 131


 4385 0139 40       		.uleb128 0x40
 4386 013a 18       		.uleb128 0x18
 4387 013b 9742     		.uleb128 0x2117
 4388 013d 19       		.uleb128 0x19
 4389 013e 00       		.byte	0
 4390 013f 00       		.byte	0
 4391 0140 14       		.uleb128 0x14
 4392 0141 2E       		.uleb128 0x2e
 4393 0142 00       		.byte	0
 4394 0143 3F       		.uleb128 0x3f
 4395 0144 19       		.uleb128 0x19
 4396 0145 03       		.uleb128 0x3
 4397 0146 0E       		.uleb128 0xe
 4398 0147 3A       		.uleb128 0x3a
 4399 0148 0B       		.uleb128 0xb
 4400 0149 3B       		.uleb128 0x3b
 4401 014a 05       		.uleb128 0x5
 4402 014b 27       		.uleb128 0x27
 4403 014c 19       		.uleb128 0x19
 4404 014d 11       		.uleb128 0x11
 4405 014e 01       		.uleb128 0x1
 4406 014f 12       		.uleb128 0x12
 4407 0150 06       		.uleb128 0x6
 4408 0151 40       		.uleb128 0x40
 4409 0152 18       		.uleb128 0x18
 4410 0153 9642     		.uleb128 0x2116
 4411 0155 19       		.uleb128 0x19
 4412 0156 00       		.byte	0
 4413 0157 00       		.byte	0
 4414 0158 15       		.uleb128 0x15
 4415 0159 34       		.uleb128 0x34
 4416 015a 00       		.byte	0
 4417 015b 03       		.uleb128 0x3
 4418 015c 08       		.uleb128 0x8
 4419 015d 3A       		.uleb128 0x3a
 4420 015e 0B       		.uleb128 0xb
 4421 015f 3B       		.uleb128 0x3b
 4422 0160 05       		.uleb128 0x5
 4423 0161 49       		.uleb128 0x49
 4424 0162 13       		.uleb128 0x13
 4425 0163 02       		.uleb128 0x2
 4426 0164 18       		.uleb128 0x18
 4427 0165 00       		.byte	0
 4428 0166 00       		.byte	0
 4429 0167 16       		.uleb128 0x16
 4430 0168 2E       		.uleb128 0x2e
 4431 0169 01       		.byte	0x1
 4432 016a 03       		.uleb128 0x3
 4433 016b 0E       		.uleb128 0xe
 4434 016c 3A       		.uleb128 0x3a
 4435 016d 0B       		.uleb128 0xb
 4436 016e 3B       		.uleb128 0x3b
 4437 016f 05       		.uleb128 0x5
 4438 0170 27       		.uleb128 0x27
 4439 0171 19       		.uleb128 0x19
 4440 0172 11       		.uleb128 0x11
 4441 0173 01       		.uleb128 0x1
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 132


 4442 0174 12       		.uleb128 0x12
 4443 0175 06       		.uleb128 0x6
 4444 0176 40       		.uleb128 0x40
 4445 0177 18       		.uleb128 0x18
 4446 0178 9642     		.uleb128 0x2116
 4447 017a 19       		.uleb128 0x19
 4448 017b 01       		.uleb128 0x1
 4449 017c 13       		.uleb128 0x13
 4450 017d 00       		.byte	0
 4451 017e 00       		.byte	0
 4452 017f 17       		.uleb128 0x17
 4453 0180 34       		.uleb128 0x34
 4454 0181 00       		.byte	0
 4455 0182 03       		.uleb128 0x3
 4456 0183 0E       		.uleb128 0xe
 4457 0184 3A       		.uleb128 0x3a
 4458 0185 0B       		.uleb128 0xb
 4459 0186 3B       		.uleb128 0x3b
 4460 0187 0B       		.uleb128 0xb
 4461 0188 49       		.uleb128 0x49
 4462 0189 13       		.uleb128 0x13
 4463 018a 02       		.uleb128 0x2
 4464 018b 18       		.uleb128 0x18
 4465 018c 00       		.byte	0
 4466 018d 00       		.byte	0
 4467 018e 18       		.uleb128 0x18
 4468 018f 34       		.uleb128 0x34
 4469 0190 00       		.byte	0
 4470 0191 03       		.uleb128 0x3
 4471 0192 0E       		.uleb128 0xe
 4472 0193 3A       		.uleb128 0x3a
 4473 0194 0B       		.uleb128 0xb
 4474 0195 3B       		.uleb128 0x3b
 4475 0196 0B       		.uleb128 0xb
 4476 0197 49       		.uleb128 0x49
 4477 0198 13       		.uleb128 0x13
 4478 0199 3F       		.uleb128 0x3f
 4479 019a 19       		.uleb128 0x19
 4480 019b 02       		.uleb128 0x2
 4481 019c 18       		.uleb128 0x18
 4482 019d 00       		.byte	0
 4483 019e 00       		.byte	0
 4484 019f 19       		.uleb128 0x19
 4485 01a0 26       		.uleb128 0x26
 4486 01a1 00       		.byte	0
 4487 01a2 49       		.uleb128 0x49
 4488 01a3 13       		.uleb128 0x13
 4489 01a4 00       		.byte	0
 4490 01a5 00       		.byte	0
 4491 01a6 00       		.byte	0
 4492              		.section	.debug_aranges,"",%progbits
 4493 0000 AC010000 		.4byte	0x1ac
 4494 0004 0200     		.2byte	0x2
 4495 0006 00000000 		.4byte	.Ldebug_info0
 4496 000a 04       		.byte	0x4
 4497 000b 00       		.byte	0
 4498 000c 0000     		.2byte	0
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 133


 4499 000e 0000     		.2byte	0
 4500 0010 00000000 		.4byte	.LFB2
 4501 0014 1C000000 		.4byte	.LFE2-.LFB2
 4502 0018 00000000 		.4byte	.LFB3
 4503 001c 1C000000 		.4byte	.LFE3-.LFB3
 4504 0020 00000000 		.4byte	.LFB4
 4505 0024 48000000 		.4byte	.LFE4-.LFB4
 4506 0028 00000000 		.4byte	.LFB5
 4507 002c 50000000 		.4byte	.LFE5-.LFB5
 4508 0030 00000000 		.4byte	.LFB6
 4509 0034 34000000 		.4byte	.LFE6-.LFB6
 4510 0038 00000000 		.4byte	.LFB7
 4511 003c 48000000 		.4byte	.LFE7-.LFB7
 4512 0040 00000000 		.4byte	.LFB8
 4513 0044 9C000000 		.4byte	.LFE8-.LFB8
 4514 0048 00000000 		.4byte	.LFB9
 4515 004c 74000000 		.4byte	.LFE9-.LFB9
 4516 0050 00000000 		.4byte	.LFB10
 4517 0054 30000000 		.4byte	.LFE10-.LFB10
 4518 0058 00000000 		.4byte	.LFB11
 4519 005c 20000000 		.4byte	.LFE11-.LFB11
 4520 0060 00000000 		.4byte	.LFB12
 4521 0064 58000000 		.4byte	.LFE12-.LFB12
 4522 0068 00000000 		.4byte	.LFB13
 4523 006c 64000000 		.4byte	.LFE13-.LFB13
 4524 0070 00000000 		.4byte	.LFB14
 4525 0074 2C000000 		.4byte	.LFE14-.LFB14
 4526 0078 00000000 		.4byte	.LFB15
 4527 007c 18000000 		.4byte	.LFE15-.LFB15
 4528 0080 00000000 		.4byte	.LFB16
 4529 0084 14000000 		.4byte	.LFE16-.LFB16
 4530 0088 00000000 		.4byte	.LFB17
 4531 008c 30000000 		.4byte	.LFE17-.LFB17
 4532 0090 00000000 		.4byte	.LFB18
 4533 0094 24000000 		.4byte	.LFE18-.LFB18
 4534 0098 00000000 		.4byte	.LFB19
 4535 009c 1C000000 		.4byte	.LFE19-.LFB19
 4536 00a0 00000000 		.4byte	.LFB20
 4537 00a4 48000000 		.4byte	.LFE20-.LFB20
 4538 00a8 00000000 		.4byte	.LFB21
 4539 00ac 34000000 		.4byte	.LFE21-.LFB21
 4540 00b0 00000000 		.4byte	.LFB22
 4541 00b4 4C000000 		.4byte	.LFE22-.LFB22
 4542 00b8 00000000 		.4byte	.LFB23
 4543 00bc 36000000 		.4byte	.LFE23-.LFB23
 4544 00c0 00000000 		.4byte	.LFB24
 4545 00c4 A8000000 		.4byte	.LFE24-.LFB24
 4546 00c8 00000000 		.4byte	.LFB25
 4547 00cc 58000000 		.4byte	.LFE25-.LFB25
 4548 00d0 00000000 		.4byte	.LFB26
 4549 00d4 2C000000 		.4byte	.LFE26-.LFB26
 4550 00d8 00000000 		.4byte	.LFB27
 4551 00dc 30000000 		.4byte	.LFE27-.LFB27
 4552 00e0 00000000 		.4byte	.LFB28
 4553 00e4 2C000000 		.4byte	.LFE28-.LFB28
 4554 00e8 00000000 		.4byte	.LFB29
 4555 00ec 2C000000 		.4byte	.LFE29-.LFB29
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 134


 4556 00f0 00000000 		.4byte	.LFB30
 4557 00f4 2C000000 		.4byte	.LFE30-.LFB30
 4558 00f8 00000000 		.4byte	.LFB31
 4559 00fc 16000000 		.4byte	.LFE31-.LFB31
 4560 0100 00000000 		.4byte	.LFB32
 4561 0104 24000000 		.4byte	.LFE32-.LFB32
 4562 0108 00000000 		.4byte	.LFB33
 4563 010c 4C000000 		.4byte	.LFE33-.LFB33
 4564 0110 00000000 		.4byte	.LFB34
 4565 0114 28000000 		.4byte	.LFE34-.LFB34
 4566 0118 00000000 		.4byte	.LFB35
 4567 011c 84000000 		.4byte	.LFE35-.LFB35
 4568 0120 00000000 		.4byte	.LFB36
 4569 0124 24000000 		.4byte	.LFE36-.LFB36
 4570 0128 00000000 		.4byte	.LFB37
 4571 012c 68000000 		.4byte	.LFE37-.LFB37
 4572 0130 00000000 		.4byte	.LFB38
 4573 0134 20000000 		.4byte	.LFE38-.LFB38
 4574 0138 00000000 		.4byte	.LFB39
 4575 013c 1C000000 		.4byte	.LFE39-.LFB39
 4576 0140 00000000 		.4byte	.LFB40
 4577 0144 1C000000 		.4byte	.LFE40-.LFB40
 4578 0148 00000000 		.4byte	.LFB41
 4579 014c 1C000000 		.4byte	.LFE41-.LFB41
 4580 0150 00000000 		.4byte	.LFB42
 4581 0154 20000000 		.4byte	.LFE42-.LFB42
 4582 0158 00000000 		.4byte	.LFB43
 4583 015c 18000000 		.4byte	.LFE43-.LFB43
 4584 0160 00000000 		.4byte	.LFB44
 4585 0164 18000000 		.4byte	.LFE44-.LFB44
 4586 0168 00000000 		.4byte	.LFB45
 4587 016c 34000000 		.4byte	.LFE45-.LFB45
 4588 0170 00000000 		.4byte	.LFB46
 4589 0174 18000000 		.4byte	.LFE46-.LFB46
 4590 0178 00000000 		.4byte	.LFB47
 4591 017c 18000000 		.4byte	.LFE47-.LFB47
 4592 0180 00000000 		.4byte	.LFB48
 4593 0184 14000000 		.4byte	.LFE48-.LFB48
 4594 0188 00000000 		.4byte	.LFB49
 4595 018c 2C000000 		.4byte	.LFE49-.LFB49
 4596 0190 00000000 		.4byte	.LFB50
 4597 0194 1C000000 		.4byte	.LFE50-.LFB50
 4598 0198 00000000 		.4byte	.LFB51
 4599 019c 44000000 		.4byte	.LFE51-.LFB51
 4600 01a0 00000000 		.4byte	.LFB52
 4601 01a4 C0000000 		.4byte	.LFE52-.LFB52
 4602 01a8 00000000 		.4byte	0
 4603 01ac 00000000 		.4byte	0
 4604              		.section	.debug_ranges,"",%progbits
 4605              	.Ldebug_ranges0:
 4606 0000 00000000 		.4byte	.LFB2
 4607 0004 1C000000 		.4byte	.LFE2
 4608 0008 00000000 		.4byte	.LFB3
 4609 000c 1C000000 		.4byte	.LFE3
 4610 0010 00000000 		.4byte	.LFB4
 4611 0014 48000000 		.4byte	.LFE4
 4612 0018 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 135


 4613 001c 50000000 		.4byte	.LFE5
 4614 0020 00000000 		.4byte	.LFB6
 4615 0024 34000000 		.4byte	.LFE6
 4616 0028 00000000 		.4byte	.LFB7
 4617 002c 48000000 		.4byte	.LFE7
 4618 0030 00000000 		.4byte	.LFB8
 4619 0034 9C000000 		.4byte	.LFE8
 4620 0038 00000000 		.4byte	.LFB9
 4621 003c 74000000 		.4byte	.LFE9
 4622 0040 00000000 		.4byte	.LFB10
 4623 0044 30000000 		.4byte	.LFE10
 4624 0048 00000000 		.4byte	.LFB11
 4625 004c 20000000 		.4byte	.LFE11
 4626 0050 00000000 		.4byte	.LFB12
 4627 0054 58000000 		.4byte	.LFE12
 4628 0058 00000000 		.4byte	.LFB13
 4629 005c 64000000 		.4byte	.LFE13
 4630 0060 00000000 		.4byte	.LFB14
 4631 0064 2C000000 		.4byte	.LFE14
 4632 0068 00000000 		.4byte	.LFB15
 4633 006c 18000000 		.4byte	.LFE15
 4634 0070 00000000 		.4byte	.LFB16
 4635 0074 14000000 		.4byte	.LFE16
 4636 0078 00000000 		.4byte	.LFB17
 4637 007c 30000000 		.4byte	.LFE17
 4638 0080 00000000 		.4byte	.LFB18
 4639 0084 24000000 		.4byte	.LFE18
 4640 0088 00000000 		.4byte	.LFB19
 4641 008c 1C000000 		.4byte	.LFE19
 4642 0090 00000000 		.4byte	.LFB20
 4643 0094 48000000 		.4byte	.LFE20
 4644 0098 00000000 		.4byte	.LFB21
 4645 009c 34000000 		.4byte	.LFE21
 4646 00a0 00000000 		.4byte	.LFB22
 4647 00a4 4C000000 		.4byte	.LFE22
 4648 00a8 00000000 		.4byte	.LFB23
 4649 00ac 36000000 		.4byte	.LFE23
 4650 00b0 00000000 		.4byte	.LFB24
 4651 00b4 A8000000 		.4byte	.LFE24
 4652 00b8 00000000 		.4byte	.LFB25
 4653 00bc 58000000 		.4byte	.LFE25
 4654 00c0 00000000 		.4byte	.LFB26
 4655 00c4 2C000000 		.4byte	.LFE26
 4656 00c8 00000000 		.4byte	.LFB27
 4657 00cc 30000000 		.4byte	.LFE27
 4658 00d0 00000000 		.4byte	.LFB28
 4659 00d4 2C000000 		.4byte	.LFE28
 4660 00d8 00000000 		.4byte	.LFB29
 4661 00dc 2C000000 		.4byte	.LFE29
 4662 00e0 00000000 		.4byte	.LFB30
 4663 00e4 2C000000 		.4byte	.LFE30
 4664 00e8 00000000 		.4byte	.LFB31
 4665 00ec 16000000 		.4byte	.LFE31
 4666 00f0 00000000 		.4byte	.LFB32
 4667 00f4 24000000 		.4byte	.LFE32
 4668 00f8 00000000 		.4byte	.LFB33
 4669 00fc 4C000000 		.4byte	.LFE33
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 136


 4670 0100 00000000 		.4byte	.LFB34
 4671 0104 28000000 		.4byte	.LFE34
 4672 0108 00000000 		.4byte	.LFB35
 4673 010c 84000000 		.4byte	.LFE35
 4674 0110 00000000 		.4byte	.LFB36
 4675 0114 24000000 		.4byte	.LFE36
 4676 0118 00000000 		.4byte	.LFB37
 4677 011c 68000000 		.4byte	.LFE37
 4678 0120 00000000 		.4byte	.LFB38
 4679 0124 20000000 		.4byte	.LFE38
 4680 0128 00000000 		.4byte	.LFB39
 4681 012c 1C000000 		.4byte	.LFE39
 4682 0130 00000000 		.4byte	.LFB40
 4683 0134 1C000000 		.4byte	.LFE40
 4684 0138 00000000 		.4byte	.LFB41
 4685 013c 1C000000 		.4byte	.LFE41
 4686 0140 00000000 		.4byte	.LFB42
 4687 0144 20000000 		.4byte	.LFE42
 4688 0148 00000000 		.4byte	.LFB43
 4689 014c 18000000 		.4byte	.LFE43
 4690 0150 00000000 		.4byte	.LFB44
 4691 0154 18000000 		.4byte	.LFE44
 4692 0158 00000000 		.4byte	.LFB45
 4693 015c 34000000 		.4byte	.LFE45
 4694 0160 00000000 		.4byte	.LFB46
 4695 0164 18000000 		.4byte	.LFE46
 4696 0168 00000000 		.4byte	.LFB47
 4697 016c 18000000 		.4byte	.LFE47
 4698 0170 00000000 		.4byte	.LFB48
 4699 0174 14000000 		.4byte	.LFE48
 4700 0178 00000000 		.4byte	.LFB49
 4701 017c 2C000000 		.4byte	.LFE49
 4702 0180 00000000 		.4byte	.LFB50
 4703 0184 1C000000 		.4byte	.LFE50
 4704 0188 00000000 		.4byte	.LFB51
 4705 018c 44000000 		.4byte	.LFE51
 4706 0190 00000000 		.4byte	.LFB52
 4707 0194 C0000000 		.4byte	.LFE52
 4708 0198 00000000 		.4byte	0
 4709 019c 00000000 		.4byte	0
 4710              		.section	.debug_line,"",%progbits
 4711              	.Ldebug_line0:
 4712 0000 DE040000 		.section	.debug_str,"MS",%progbits,1
 4712      02004D00 
 4712      00000201 
 4712      FB0E0D00 
 4712      01010101 
 4713              	.LASF59:
 4714 0000 72616D56 		.ascii	"ramVectorTable\000"
 4714      6563746F 
 4714      72546162 
 4714      6C6500
 4715              	.LASF10:
 4716 000f 75696E74 		.ascii	"uint16\000"
 4716      313600
 4717              	.LASF52:
 4718 0016 696E7453 		.ascii	"intState\000"
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 137


 4718      74617465 
 4718      00
 4719              	.LASF26:
 4720 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4720      73436C6B 
 4720      57726974 
 4720      65486663 
 4720      6C6B4469 
 4721              	.LASF108:
 4722 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 4722      73436C6B 
 4722      50756D70 
 4722      436F6E66 
 4722      696700
 4723              	.LASF58:
 4724 004b 6F6C6449 		.ascii	"oldIsr\000"
 4724      737200
 4725              	.LASF97:
 4726 0052 72657456 		.ascii	"retVal\000"
 4726      616C00
 4727              	.LASF51:
 4728 0059 43794469 		.ascii	"CyDisableInts\000"
 4728      7361626C 
 4728      65496E74 
 4728      7300
 4729              	.LASF111:
 4730 0067 433A5C55 		.ascii	"C:\\Users\\run1009\\Documents\\BLE_Central_Observer"
 4730      73657273 
 4730      5C72756E 
 4730      31303039 
 4730      5C446F63 
 4731 0096 5C424C45 		.ascii	"\\BLE_Central_Observer.cydsn\000"
 4731      5F43656E 
 4731      7472616C 
 4731      5F4F6273 
 4731      65727665 
 4732              	.LASF7:
 4733 00b2 6C6F6E67 		.ascii	"long long unsigned int\000"
 4733      206C6F6E 
 4733      6720756E 
 4733      7369676E 
 4733      65642069 
 4734              	.LASF35:
 4735 00c9 70617261 		.ascii	"parameters\000"
 4735      6D657465 
 4735      727300
 4736              	.LASF53:
 4737 00d4 4379456E 		.ascii	"CyEnableInts\000"
 4737      61626C65 
 4737      496E7473 
 4737      00
 4738              	.LASF74:
 4739 00e1 4379536F 		.ascii	"CySoftwareReset\000"
 4739      66747761 
 4739      72655265 
 4739      73657400 
 4740              	.LASF84:
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 138


 4741 00f1 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4741      73546963 
 4741      6B456E61 
 4741      626C6549 
 4741      6E746572 
 4742              	.LASF69:
 4743 010a 4379496E 		.ascii	"CyIntGetState\000"
 4743      74476574 
 4743      53746174 
 4743      6500
 4744              	.LASF6:
 4745 0118 6C6F6E67 		.ascii	"long long int\000"
 4745      206C6F6E 
 4745      6720696E 
 4745      7400
 4746              	.LASF0:
 4747 0126 7369676E 		.ascii	"signed char\000"
 4747      65642063 
 4747      68617200 
 4748              	.LASF34:
 4749 0132 66726571 		.ascii	"freq\000"
 4749      00
 4750              	.LASF79:
 4751 0137 43794465 		.ascii	"CyDelayFreq\000"
 4751      6C617946 
 4751      72657100 
 4752              	.LASF24:
 4753 0143 696E7465 		.ascii	"interruptState\000"
 4753      72727570 
 4753      74537461 
 4753      746500
 4754              	.LASF88:
 4755 0152 43795379 		.ascii	"CySysTickGetReload\000"
 4755      73546963 
 4755      6B476574 
 4755      52656C6F 
 4755      616400
 4756              	.LASF4:
 4757 0165 6C6F6E67 		.ascii	"long int\000"
 4757      20696E74 
 4757      00
 4758              	.LASF70:
 4759 016e 4379496E 		.ascii	"CyIntDisable\000"
 4759      74446973 
 4759      61626C65 
 4759      00
 4760              	.LASF36:
 4761 017b 72656756 		.ascii	"regValues\000"
 4761      616C7565 
 4761      7300
 4762              	.LASF9:
 4763 0185 75696E74 		.ascii	"uint8\000"
 4763      3800
 4764              	.LASF103:
 4765 018b 63796465 		.ascii	"cydelayFreqKhz\000"
 4765      6C617946 
 4765      7265714B 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 139


 4765      687A00
 4766              	.LASF29:
 4767 019a 656E6162 		.ascii	"enable\000"
 4767      6C6500
 4768              	.LASF13:
 4769 01a1 646F7562 		.ascii	"double\000"
 4769      6C6500
 4770              	.LASF65:
 4771 01a8 73686966 		.ascii	"shift\000"
 4771      7400
 4772              	.LASF48:
 4773 01ae 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4773      734C7664 
 4773      436C6561 
 4773      72496E74 
 4773      65727275 
 4774              	.LASF11:
 4775 01c5 75696E74 		.ascii	"uint32\000"
 4775      333200
 4776              	.LASF42:
 4777 01cc 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 4777      73436C6B 
 4777      45636F52 
 4777      65616453 
 4777      74617475 
 4778              	.LASF54:
 4779 01e2 6D61736B 		.ascii	"mask\000"
 4779      00
 4780              	.LASF37:
 4781 01e7 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4781      73436C6B 
 4781      47657453 
 4781      7973636C 
 4781      6B536F75 
 4782              	.LASF67:
 4783 01ff 4379496E 		.ascii	"CyIntGetPriority\000"
 4783      74476574 
 4783      5072696F 
 4783      72697479 
 4783      00
 4784              	.LASF105:
 4785 0210 63796465 		.ascii	"cydelay32kMs\000"
 4785      6C617933 
 4785      326B4D73 
 4785      00
 4786              	.LASF81:
 4787 021d 43795379 		.ascii	"CySysTickInit\000"
 4787      73546963 
 4787      6B496E69 
 4787      7400
 4788              	.LASF66:
 4789 022b 76616C75 		.ascii	"value\000"
 4789      6500
 4790              	.LASF91:
 4791 0231 636C6F63 		.ascii	"clockSource\000"
 4791      6B536F75 
 4791      72636500 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 140


 4792              	.LASF99:
 4793 023d 43794765 		.ascii	"CyGetUniqueId\000"
 4793      74556E69 
 4793      71756549 
 4793      6400
 4794              	.LASF93:
 4795 024b 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4795      73546963 
 4795      6B476574 
 4795      436F756E 
 4795      74466C61 
 4796              	.LASF8:
 4797 0261 756E7369 		.ascii	"unsigned int\000"
 4797      676E6564 
 4797      20696E74 
 4797      00
 4798              	.LASF94:
 4799 026e 43795379 		.ascii	"CySysTickClear\000"
 4799      73546963 
 4799      6B436C65 
 4799      617200
 4800              	.LASF5:
 4801 027d 6C6F6E67 		.ascii	"long unsigned int\000"
 4801      20756E73 
 4801      69676E65 
 4801      6420696E 
 4801      7400
 4802              	.LASF87:
 4803 028f 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4803      734C7664 
 4803      47657449 
 4803      6E746572 
 4803      72757074 
 4804              	.LASF23:
 4805 02aa 43795379 		.ascii	"CySysClkImoStop\000"
 4805      73436C6B 
 4805      496D6F53 
 4805      746F7000 
 4806              	.LASF71:
 4807 02ba 4379496E 		.ascii	"CyIntSetPending\000"
 4807      74536574 
 4807      50656E64 
 4807      696E6700 
 4808              	.LASF98:
 4809 02ca 43795379 		.ascii	"CySysTickGetCallback\000"
 4809      73546963 
 4809      6B476574 
 4809      43616C6C 
 4809      6261636B 
 4810              	.LASF49:
 4811 02df 43795379 		.ascii	"CySysGetResetReason\000"
 4811      73476574 
 4811      52657365 
 4811      74526561 
 4811      736F6E00 
 4812              	.LASF3:
 4813 02f3 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 141


 4813      7420756E 
 4813      7369676E 
 4813      65642069 
 4813      6E7400
 4814              	.LASF90:
 4815 0306 43795379 		.ascii	"CySysTickSetClockSource\000"
 4815      73546963 
 4815      6B536574 
 4815      436C6F63 
 4815      6B536F75 
 4816              	.LASF61:
 4817 031e 4379496E 		.ascii	"CyIntSetVector\000"
 4817      74536574 
 4817      56656374 
 4817      6F7200
 4818              	.LASF56:
 4819 032d 6E756D62 		.ascii	"number\000"
 4819      657200
 4820              	.LASF64:
 4821 0334 7072696F 		.ascii	"priority\000"
 4821      72697479 
 4821      00
 4822              	.LASF33:
 4823 033d 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4823      73436C6B 
 4823      57726974 
 4823      65496D6F 
 4823      46726571 
 4824              	.LASF109:
 4825 0352 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4825      43313120 
 4825      352E342E 
 4825      31203230 
 4825      31363036 
 4826 0385 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4826      20726576 
 4826      6973696F 
 4826      6E203233 
 4826      37373135 
 4827 03b8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4827      66756E63 
 4827      74696F6E 
 4827      2D736563 
 4827      74696F6E 
 4828              	.LASF55:
 4829 03e0 4379496E 		.ascii	"CyIntSetSysVector\000"
 4829      74536574 
 4829      53797356 
 4829      6563746F 
 4829      7200
 4830              	.LASF27:
 4831 03f2 43795379 		.ascii	"CySysEnablePumpClock\000"
 4831      73456E61 
 4831      626C6550 
 4831      756D7043 
 4831      6C6F636B 
 4832              	.LASF17:
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 142


 4833 0407 72656733 		.ascii	"reg32\000"
 4833      3200
 4834              	.LASF80:
 4835 040d 43795379 		.ascii	"CySysTickStart\000"
 4835      73546963 
 4835      6B537461 
 4835      727400
 4836              	.LASF40:
 4837 041c 72657475 		.ascii	"returnStatus\000"
 4837      726E5374 
 4837      61747573 
 4837      00
 4838              	.LASF20:
 4839 0429 73697A65 		.ascii	"sizetype\000"
 4839      74797065 
 4839      00
 4840              	.LASF106:
 4841 0432 43795379 		.ascii	"CySysTickInitVar\000"
 4841      73546963 
 4841      6B496E69 
 4841      74566172 
 4841      00
 4842              	.LASF72:
 4843 0443 4379496E 		.ascii	"CyIntClearPending\000"
 4843      74436C65 
 4843      61725065 
 4843      6E64696E 
 4843      6700
 4844              	.LASF19:
 4845 0455 6C6F6E67 		.ascii	"long double\000"
 4845      20646F75 
 4845      626C6500 
 4846              	.LASF57:
 4847 0461 61646472 		.ascii	"address\000"
 4847      65737300 
 4848              	.LASF30:
 4849 0469 73797363 		.ascii	"sysclkSource\000"
 4849      6C6B536F 
 4849      75726365 
 4849      00
 4850              	.LASF96:
 4851 0476 66756E63 		.ascii	"function\000"
 4851      74696F6E 
 4851      00
 4852              	.LASF107:
 4853 047f 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4853      6F467265 
 4853      714D687A 
 4853      32526567 
 4853      00
 4854              	.LASF89:
 4855 0490 43795379 		.ascii	"CySysTickGetValue\000"
 4855      73546963 
 4855      6B476574 
 4855      56616C75 
 4855      6500
 4856              	.LASF102:
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 143


 4857 04a2 63796465 		.ascii	"cydelayFreqHz\000"
 4857      6C617946 
 4857      72657148 
 4857      7A00
 4858              	.LASF63:
 4859 04b0 4379496E 		.ascii	"CyIntSetPriority\000"
 4859      74536574 
 4859      5072696F 
 4859      72697479 
 4859      00
 4860              	.LASF12:
 4861 04c1 666C6F61 		.ascii	"float\000"
 4861      7400
 4862              	.LASF45:
 4863 04c7 43795379 		.ascii	"CySysLvdEnable\000"
 4863      734C7664 
 4863      456E6162 
 4863      6C6500
 4864              	.LASF21:
 4865 04d6 63795379 		.ascii	"cySysTickCallback\000"
 4865      73546963 
 4865      6B43616C 
 4865      6C626163 
 4865      6B00
 4866              	.LASF62:
 4867 04e8 4379496E 		.ascii	"CyIntGetVector\000"
 4867      74476574 
 4867      56656374 
 4867      6F7200
 4868              	.LASF76:
 4869 04f7 6D696C6C 		.ascii	"milliseconds\000"
 4869      69736563 
 4869      6F6E6473 
 4869      00
 4870              	.LASF16:
 4871 0504 72656738 		.ascii	"reg8\000"
 4871      00
 4872              	.LASF46:
 4873 0509 74687265 		.ascii	"threshold\000"
 4873      73686F6C 
 4873      6400
 4874              	.LASF73:
 4875 0513 43794861 		.ascii	"CyHalt\000"
 4875      6C7400
 4876              	.LASF1:
 4877 051a 756E7369 		.ascii	"unsigned char\000"
 4877      676E6564 
 4877      20636861 
 4877      7200
 4878              	.LASF2:
 4879 0528 73686F72 		.ascii	"short int\000"
 4879      7420696E 
 4879      7400
 4880              	.LASF68:
 4881 0532 4379496E 		.ascii	"CyIntEnable\000"
 4881      74456E61 
 4881      626C6500 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 144


 4882              	.LASF60:
 4883 053e 4379496E 		.ascii	"CyIntGetSysVector\000"
 4883      74476574 
 4883      53797356 
 4883      6563746F 
 4883      7200
 4884              	.LASF28:
 4885 0550 636C6B53 		.ascii	"clkSelect\000"
 4885      656C6563 
 4885      7400
 4886              	.LASF38:
 4887 055a 43795379 		.ascii	"CySysClkEcoStart\000"
 4887      73436C6B 
 4887      45636F53 
 4887      74617274 
 4887      00
 4888              	.LASF77:
 4889 056b 43794465 		.ascii	"CyDelayUs\000"
 4889      6C617955 
 4889      7300
 4890              	.LASF50:
 4891 0575 72656173 		.ascii	"reason\000"
 4891      6F6E00
 4892              	.LASF14:
 4893 057c 63686172 		.ascii	"char\000"
 4893      00
 4894              	.LASF18:
 4895 0581 63796973 		.ascii	"cyisraddress\000"
 4895      72616464 
 4895      72657373 
 4895      00
 4896              	.LASF82:
 4897 058e 43795379 		.ascii	"CySysTickEnable\000"
 4897      73546963 
 4897      6B456E61 
 4897      626C6500 
 4898              	.LASF31:
 4899 059e 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4899      73436C6B 
 4899      57726974 
 4899      65537973 
 4899      636C6B44 
 4900              	.LASF95:
 4901 05b5 43795379 		.ascii	"CySysTickSetCallback\000"
 4901      73546963 
 4901      6B536574 
 4901      43616C6C 
 4901      6261636B 
 4902              	.LASF101:
 4903 05ca 43795379 		.ascii	"CySysTickCallbacks\000"
 4903      73546963 
 4903      6B43616C 
 4903      6C626163 
 4903      6B7300
 4904              	.LASF100:
 4905 05dd 756E6971 		.ascii	"uniqueId\000"
 4905      75654964 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 145


 4905      00
 4906              	.LASF75:
 4907 05e6 43794465 		.ascii	"CyDelay\000"
 4907      6C617900 
 4908              	.LASF92:
 4909 05ee 43795379 		.ascii	"CySysTickGetClockSource\000"
 4909      73546963 
 4909      6B476574 
 4909      436C6F63 
 4909      6B536F75 
 4910              	.LASF85:
 4911 0606 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4911      73546963 
 4911      6B446973 
 4911      61626C65 
 4911      496E7465 
 4912              	.LASF47:
 4913 0620 43795379 		.ascii	"CySysLvdDisable\000"
 4913      734C7664 
 4913      44697361 
 4913      626C6500 
 4914              	.LASF104:
 4915 0630 63796465 		.ascii	"cydelayFreqMhz\000"
 4915      6C617946 
 4915      7265714D 
 4915      687A00
 4916              	.LASF41:
 4917 063f 43795379 		.ascii	"CySysClkEcoStop\000"
 4917      73436C6B 
 4917      45636F53 
 4917      746F7000 
 4918              	.LASF83:
 4919 064f 43795379 		.ascii	"CySysTickStop\000"
 4919      73546963 
 4919      6B53746F 
 4919      7000
 4920              	.LASF39:
 4921 065d 74696D65 		.ascii	"timeoutUs\000"
 4921      6F757455 
 4921      7300
 4922              	.LASF32:
 4923 0667 64697669 		.ascii	"divider\000"
 4923      64657200 
 4924              	.LASF44:
 4925 066f 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 4925      73436C6B 
 4925      57726974 
 4925      6545636F 
 4925      44697600 
 4926              	.LASF15:
 4927 0683 63797374 		.ascii	"cystatus\000"
 4927      61747573 
 4927      00
 4928              	.LASF22:
 4929 068c 43795379 		.ascii	"CySysClkImoStart\000"
 4929      73436C6B 
 4929      496D6F53 
ARM GAS  C:\Users\run1009\AppData\Local\Temp\cczjc7Re.s 			page 146


 4929      74617274 
 4929      00
 4930              	.LASF110:
 4931 069d 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4931      72617465 
 4931      645F536F 
 4931      75726365 
 4931      5C50536F 
 4932              	.LASF78:
 4933 06bc 6D696372 		.ascii	"microseconds\000"
 4933      6F736563 
 4933      6F6E6473 
 4933      00
 4934              	.LASF25:
 4935 06c9 746D7052 		.ascii	"tmpReg\000"
 4935      656700
 4936              	.LASF86:
 4937 06d0 43795379 		.ascii	"CySysTickSetReload\000"
 4937      73546963 
 4937      6B536574 
 4937      52656C6F 
 4937      616400
 4938              	.LASF112:
 4939 06e3 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4939      73546963 
 4939      6B536572 
 4939      76696365 
 4939      43616C6C 
 4940              	.LASF43:
 4941 06fd 72657475 		.ascii	"returnValue\000"
 4941      726E5661 
 4941      6C756500 
 4942              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
